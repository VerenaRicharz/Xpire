{"version":3,"sources":["components/AppHeader.js","components/ProductsList.js","components/AddProduct.js","components/FloatingButton.js","Idb.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","spacing","menuButton","marginRight","title","alignContent","logo","maxWidth","AppHeader","classes","className","AppBar","position","Toolbar","src","headerLogo","alt","Typography","variant","ProductsList","props","handleListItemClick","id","setState","redirect","showProduct","statusColor","validDate","bestBeforeDayCount","Date","bind","state","this","push","to","List","dense","products","map","product","listitemframe","ListItem","listitem","button","onClick","ListItemAvatar","Avatar","img_url","ListItemText","primary","name","amount","secondary","format","expireDate","style","height","width","marginTop","backgroundColor","React","Component","withStyles","padding","margin","borderWidth","borderStyle","borderRadius","borderColor","palette","main","AddProduct","handleClickArrow","handleClickDelete","handleClickSave","handleDateChange","handleInput","getProductInformationByBarcode","showErrorPopOver","handleClose","setBackgroundImg","handleClickUpdate","barcode","product_id","product_name","purchaseDate","anchorEl","open","simple_popover_message","imgStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","message","target","event","length","fetch","then","res","json","result","status","image_url","currentTarget","error","reset","delete","Object","keys","add","date","toISOString","split","value","productUpdate","console","log","img","imgOverlay","edge","arrowIcon","deleteIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","typography","form","TextField","label","textField","onChange","Button","color","submitButton","utils","DateFnsUtils","DatePicker","inputVariant","datePicker","float","marginLeft","FloatingButton","Fab","aria-label","fab","bottom","right","db","Dexie","version","stores","addProduct","a","undefined","toArray","arr","updateProductById","update","updated","getAllProducts","deleteProductById","theId","where","equals","catch","err","App","componentDidMount","getInitialState","showProductObj","updateState","resetState","deleteProduct","addProductToList","updateProduct","find","e","path","component","exact","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","createMuiTheme","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.87cc3cd7.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport headerLogo from '../logo.svg';\n//import IconButton from '@material-ui/core/IconButton';\n//import MenuIcon from '@material-ui/icons/Menu';\n//import AccountCircle from '@material-ui/icons/AccountCircle';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginBottom: theme.spacing(7)\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        alignContent: 'center'\n    },\n    logo: {\n        maxWidth: '2.5rem',\n    }\n}));\n\nexport default function AppHeader() {\n    const classes = useStyles();\n    // const [auth, setAuth] = React.useState(true);\n    // const [anchorEl, setAnchorEl] = React.useState(null);\n    // const open = Boolean(anchorEl);\n\n    // const handleChange = (event) => {\n    //     setAuth(event.target.checked);\n    // };\n\n    // const handleMenu = (event) => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n\n    // const handleClose = () => {\n    //     setAnchorEl(null);\n    // };\n\n    return (\n        <div className={classes.root}>\n\n            <AppBar position=\"fixed\"> \n                <Toolbar>\n                    {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton> */}\n                    <img src={headerLogo} alt=\"logo\" className={classes.logo} />\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Xpire\n                    </Typography>\n                    <div></div>\n                    {/* {auth && (\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={open}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\n                            </Menu>\n                        </div>\n                    )} */}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Redirect } from 'react-router';\nimport format from 'date-fns/format';\n\nconst styles = theme => ({\n    root: {\n        padding: '1rem',\n        marginTop: \"56px\"\n    },\n    listitemframe: {\n        margin: '0.6rem'\n    },\n    listitem: {\n        borderWidth: '0.1rem',\n        borderStyle: 'solid',\n        borderRadius: '0.5rem',\n        borderColor: theme.palette.primary.main\n    }\n});\n\nclass ProductsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleListItemClick = this.handleListItemClick.bind(this);\n        this.state = {\n            redirect: false,\n        }    \n    }\n\n    handleListItemClick = (id) => {\n        this.setState({redirect: true});\n        this.props.showProduct(id);\n    }\n\n    statusColor = (validDate) => {\n        var bestBeforeMilliSec = new Date(validDate) - new Date();\n        var bestBeforeDayCount = bestBeforeMilliSec/(1000*60*60*24); \n        \n        if (bestBeforeDayCount > 3) {\n            return '#C9DEBC';\n        } else if (bestBeforeDayCount > 0) {\n            return '#F4E132';\n        } else {\n            return '#F96523';\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        if (this.state.redirect) {\n            return <Redirect push to=\"/Xpire/Product\" />;\n        }\n\n        return (\n            <List dense className={classes.root}>\n                {this.props.products ? this.props.products.map((product) =>\n                    <div className={classes.listitemframe}>\n                        <ListItem className={classes.listitem} button onClick={() => this.handleListItemClick(product.id)}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    alt={`Avatar n°${product + 1}`}\n                                    src={product.img_url}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText primary={`${product.name} (${product.amount})`} secondary={\n                                <div>\n                                    <div>Gültig bis: {format(new Date(product.expireDate),\"dd.MM.yyyy\")}</div>\n                                    <div style={{\n                                        height: '0.5rem',\n                                        width: '100%',\n                                        marginTop: '0.3rem',\n                                        backgroundColor: this.statusColor(product.expireDate),\n                                    }}></div>\n                            </div>\n                            }/>\n                        </ListItem>\n                    </div>\n                ) : null}\n            </List>\n        );\n    }\n}\nexport default withStyles(styles)(ProductsList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport ArrowIcon from '@material-ui/icons/KeyboardBackspace';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Redirect } from 'react-router';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst styles = theme => ({\n    root: {\n        marginTop: \"56px\"\n    },\n    imgOverlay: {\n        height: '15rem',\n        backgroundColor: \"hsla(0, 0%, 0%, 0.23)\"\n    }, \n    arrowIcon: {\n        float: 'left',\n        marginLeft: \"16px\",\n        marginTop: \"10px\",\n        color: \"white\"\n    }, \n    datePicker: {\n        width: '100%'\n    },\n    deleteIcon: {\n        float: 'right',\n        marginRight: \"28px\",\n        marginTop: \"10px\",\n        color: \"white\"\n    },\n    form: {\n        margin: '1.6rem'\n    },\n    textField: {\n        width: '100%'\n    },\n    submitButton: {\n        float: 'right',\n        marginTop: '1rem'\n    },\n    typography: {\n        padding: theme.spacing(2)\n    }\n});\n\nclass AddProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClickArrow = this.handleClickArrow.bind(this);\n        this.handleClickDelete = this.handleClickDelete.bind(this);\n        this.handleClickSave = this.handleClickSave.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.getProductInformationByBarcode = this.getProductInformationByBarcode.bind(this);\n        this.showErrorPopOver = this.showErrorPopOver.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.setBackgroundImg = this.setBackgroundImg.bind(this);\n        this.handleClickUpdate = this.handleClickUpdate.bind(this);\n        this.state = {\n            redirect: false,\n            barcode: \"\",\n            product_id: this.props.product.id,\n            product_name: this.props.product.name,\n            amount: this.props.product.amount,\n            purchaseDate: this.props.product.purchaseDate,\n            expireDate: this.props.product.expireDate,\n            img_url: this.props.product.img_url,\n            anchorEl: {},\n            open: false,\n            id: 'simple-popover',\n            simple_popover_message: \"\",\n            imgStyle: {\n                height: '15rem',\n                backgroundImage: \"url(\" + this.props.product.img_url + \")\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center\",\n                backgroundSize: \"auto 100%\"\n            }\n        }\n    }\n\n    setBackgroundImg(img_url){\n        this.setState({\n            imgStyle: {\n                ...this.state.imgStyle,\n                backgroundImage: \"url(\" + img_url + \")\",\n            },\n            img_url: img_url\n        })\n    }\n\n    showErrorPopOver(message,target){\n        this.setState({\n            open: true,\n            anchorEl: target,\n            simple_popover_message: message\n        })\n\n    }\n\n    handleClose() {\n        this.setState({\n            anchorEl: null,\n            open: false\n        })\n    };\n\n    getProductInformationByBarcode(event){\n        var barcode = this.state.barcode;\n        if(barcode){\n           //check for valid barcode\n\n           //var searchResult = {};\n           if(barcode.length === 13 || barcode.length === 8) {\n                fetch(\"https://world.openfoodfacts.org/api/v0/product/\"+barcode+\".json\")\n                .then(res => res.json())\n                .then((result) => {\n                    var product = result.product;\n                    //check if product found\n                    if(result.status === 1){\n                        if(product.product_name) {\n                            //this.props.update(product.product_name);\n                            this.setState({\n                                product_name: product.product_name,\n                            })\n                            this.setBackgroundImg(product.image_url);\n                        } else {\n                            // throw error\n                            this.showErrorPopOver(\"Produktname nicht gefunden!\",event.currentTarget);\n                        }\n                        \n                    } else {\n                        // throw error\n                        this.showErrorPopOver(\"Das Produkt existiert nicht!\",event.currentTarget);\n                    }\n                },\n                (error) => {\n                    this.showErrorPopOver(\"Prüfe deine Internetverbindung!\",event.currentTarget);\n                })\n           } else {\n            this.showErrorPopOver(\"Barcode nicht korrekt!\",event.currentTarget);\n           }\n        } else {\n            this.showErrorPopOver(\"Bitte Barcode eingeben!\",event.currentTarget);\n        }\n    }\n\n    handleClickArrow(event) {\n        this.setState({redirect: true});\n        this.props.reset();\n    }\n\n    handleClickDelete(event) {\n        this.props.delete(this.props.product.id);\n        this.setState({redirect: true});\n        this.props.reset();\n    }\n\n    handleClickSave(event){\n        if (Object.keys(this.props.product).length === 0){\n            this.props.add(this.state.product_name, this.state.amount, this.state.purchaseDate, this.state.expireDate, this.state.img_url);\n        }\n        this.setState({redirect: true});\n        this.props.reset();\n    }\n\n    handleDateChange(event, id) {\n        const date = event.toISOString().split('T')[0];       \n        this.setState({\n            ...this.state,\n            [id]: date\n        })    \n    }\n\n    handleInput(event) {\n        const value = event.target.value;\n        this.setState({\n            ...this.state,\n            [event.target.id]: value\n        })\n        \n    }\n\n    handleClickUpdate(event) {\n        var product = {\n            name: this.state.product_name,\n            amount: this.state.amount,\n            purchaseDate: this.state.purchaseDate,\n            expireDate: this.state.expireDate\n        }\n        this.props.productUpdate(this.state.product_id, product);\n\n        console.log(\"clicked\")\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        if (this.state.redirect) {\n            return <Redirect push to=\"/Xpire\" />;\n        }\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.img} style={this.state.imgStyle}>\n                    <div className={classes.imgOverlay}>\n                        <ArrowIcon \n                            edge=\"end\"\n                            className={classes.arrowIcon}\n                            onClick={this.handleClickArrow}\n                        />\n                        { Object.keys(this.props.product).length !== 0 && <DeleteIcon \n                            edge=\"end\"\n                            className={classes.deleteIcon}\n                            onClick={this.handleClickDelete}\n                        />}\n                    </div>\n                </div>\n\n\n                <Popover\n                    id={this.state.id}\n                    open={this.state.open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose}\n                    anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                    }}\n                >\n                    <Typography className={classes.typography}>{this.state.simple_popover_message}</Typography>\n                </Popover>  \n\n\n\n                <form className={classes.form}>\n                    { Object.keys(this.props.product).length === 0 && <div>\n                        <TextField\n                            id=\"barcode\"\n                            label=\"Barcode\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            value={this.state.barcode}\n                            className={classes.textField}\n                            onChange={this.handleInput}\n                        />\n                        <br />\n                        <Button\n                            id=\"SearchButton\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submitButton}\n                            onClick={this.getProductInformationByBarcode}>\n                            Suchen\n                        </Button>\n                        <br />\n                    </div>}\n                    \n                    <TextField\n                        id=\"product_name\"\n                        label=\"Titel\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        value={this.state.product_name}\n                        className={classes.textField}\n                        onChange={this.handleInput}\n                    />\n                    <br />\n                    <TextField\n                        id=\"amount\"\n                        label=\"Anzahl\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        value={this.state.amount}\n                        className={classes.textField}\n                        onChange={this.handleInput}\n                    />                           \n                    <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            id=\"purchaseDate\"\n                            label=\"Eingekauft am\"\n                            margin=\"dense\"\n                            inputVariant=\"outlined\"\n                            format=\"dd.MM.yyyy\"\n                            value={this.state.purchaseDate} \n                            className={classes.datePicker}\n                            onChange={(event) => this.handleDateChange(event, \"purchaseDate\")}     \n                        />                      \n                    </MuiPickersUtilsProvider>                                        \n                    <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            id=\"expireDate\"\n                            label=\"Gültig bis\"\n                            margin=\"dense\"\n                            inputVariant=\"outlined\"\n                            format=\"dd.MM.yyyy\"\n                            value={this.state.expireDate} \n                            className={classes.datePicker}\n                            onChange={(event) => this.handleDateChange(event, \"expireDate\")}\n                        />                      \n                    </MuiPickersUtilsProvider>\n                    <br />\n           \n                    {Object.keys(this.props.product).length === 0 && <Button\n                        id=\"SaveButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submitButton}\n                        onClick={this.handleClickSave}>\n                        Speichern\n                    </Button>}\n\n                    {Object.keys(this.props.product).length !== 0 && <Button\n                        id=\"UpdateButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submitButton}\n                        onClick={this.handleClickUpdate}>\n                        Ändern\n                    </Button>}\n                </form>                           \n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AddProduct);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link } from 'react-router-dom';\n\nconst styles = theme => ({\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(4),\n        right: theme.spacing(4),\n    },\n});\n\nclass FloatingButton extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Link to=\"/Xpire/Product\">\n                <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} >\n                    <AddIcon />\n                </Fab>\n            </Link>\n        );\n    }\n}\n\nexport default withStyles(styles)(FloatingButton);","import Dexie from 'dexie'\n\nconst db = new Dexie('Xpire');\ndb.version(1).stores({\n    products: \"++id,name,amount,purchaseDate,expireDate, img_url\"\n});\n\nexport const addProduct = async (name, amount, purchaseDate, expireDate, img_url=undefined) => {\n    await db.products.add({\n        name: name,\n        amount: amount,\n        purchaseDate: purchaseDate,\n        expireDate: expireDate,\n        img_url: img_url\n    });\n    return await db.products.toArray().then(function (arr) {\n        return arr;\n    });\n}\nexport const updateProductById = async (id, product) => {\n    console.log(product) //has to be one or multiple key(s) + value(s) according to database table attributes\n    await db.products.update(id, product).then(function (updated) {\n        if (updated)\n          return getAllProducts();\n        else\n          console.log (\"Nothing was updated\");\n          return getAllProducts();\n      });\n}\n\nexport const clearTable = async (tableName) => {\n    await db.table(tableName).clear().catch(() => {\n        console.log('scheise')\n    })\n}\n\nexport const deleteProductById = async (theId) => {\n    await db.products.where('id').equals(theId).delete()\n}\n\nexport const getProductById = async (id) => {\n    return await db.products.get(id).then(function (prod) {\n        return prod\n    }).catch((err) => {\n        return console.log(err)\n    })\n}\n\nexport const getAllProducts = async () => {\n    return await db.products.toArray().then(function (arr) {\n        // console.log(arr);\n        return arr;\n    }).catch((err) => {\n        return console.log(err)\n    })\n}\n\nexport const createDatabase = async () => { //use for debugging \n    const db = new Dexie('Xpire');\n    db.version(1).stores({\n        products: \"++id,name,amount,purchaseDate,expireDate, img_rl\"\n    });\n}","import React from 'react';\nimport './App.css';\n//import IdbTest from './IdbTest'\nimport AppHeader from './components/AppHeader'\nimport ProductsList from './components/ProductsList';\nimport AddProduct from './components/AddProduct';\nimport FloatingButton from './components/FloatingButton';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'; \nimport { addProduct, deleteProductById, getAllProducts, updateProductById } from './Idb'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState();\n    this.showProduct = this.showProduct.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.resetState = this.resetState.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  componentDidMount = () => {\n    const fetch = async () => {\n      await getAllProducts().then((arr) => {\n        this.setState({ products: arr}); \n      })\n  }\n  fetch();\n  }\n\n  getInitialState = () => ({\n    products: [],\n    showProductObj: {}\n  })\n\n  // Check function if necessary!!\n  updateState = (value) => {\n    this.setState({ showProductObj : value}); \n  }\n\n  resetState = () => {\n     this.setState(this.getInitialState());\n     this.componentDidMount();\n  }\n\n  showProduct(id) {\n    var product = this.state.products.find(e => e.id === id);\n    this.setState({ showProductObj: product });\n  }\n\n  deleteProduct = async (id) => {\n    await deleteProductById(id)\n  }\n\n  addProductToList = async (name, amount, purchaseDate, expireDate, img_url) => {\n    await addProduct(name, amount, purchaseDate, expireDate, img_url).then((arr) => {\n      this.setState({ products: arr });\n    })\n  }\n\n  updateProduct = async (id,product) => {\n    await updateProductById(id, product).then((arr) => {\n      this.setState({ products: arr });\n    })\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\"> \n          <Route path=\"/Xpire\" component={AppHeader} />\n          <Route exact path=\"/Xpire\" render={(props) => <ProductsList products={this.state.products} showProduct={this.showProduct}/>} />\n          <Route exact path=\"/Xpire\" render={(props) => <FloatingButton />} />\n          <Route exact path=\"/Xpire/Product\" render={(props) => <AddProduct add={this.addProductToList} \n                                                                            product={this.state.showProductObj} \n                                                                            delete={this.deleteProduct} \n                                                                            update={this.updateState}\n                                                                            reset={this.resetState}\n                                                                            productUpdate={this.updateProduct}/>} \n                                                                />\n        </div>\n      </Router>\n    );\n\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// Color theme for whole app\nconst theme = createMuiTheme({\n  palette: {\n     primary: {\n        main: '#C9DEBC',\n     },\n     secondary: {\n       main: '#F96523',\n     },\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3fb9c233.svg\";"],"sourceRoot":""}