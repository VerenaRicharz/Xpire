{"version":3,"sources":["logo.svg","components/AppHeader.js","components/ProductsList.js","components/Scanner.js","components/AddProduct.js","components/FloatingButton.js","Idb.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","marginBottom","spacing","menuButton","marginRight","title","alignContent","logo","maxWidth","AppHeader","classes","className","AppBar","position","Toolbar","src","headerLogo","alt","Typography","variant","ProductsList","props","handleListItemClick","id","setState","redirect","showProduct","statusColor","validDate","bestBeforeDayCount","Date","bind","state","this","push","to","List","dense","products","map","product","listitemframe","ListItem","listitem","button","onClick","ListItemAvatar","Avatar","img_url","ListItemText","primary","name","amount","secondary","format","expireDate","style","height","width","marginTop","backgroundColor","React","Component","withStyles","padding","margin","borderWidth","borderStyle","borderRadius","borderColor","palette","main","Scanner","onDetected","useEffect","Quagga","init","config","err","console","log","start","stop","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","Number","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","color","lineWidth","codeResult","code","line","detected","AddProduct","handleClickArrow","handleClickDelete","handleClickSave","handleDateChange","handleInput","getProductInformationByBarcode","showErrorPopOver","handleClose","setBackgroundImg","onStartScan","barcode","product_name","purchaseDate","anchorEl","open","simple_popover_message","imgStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","camera","message","target","event","length","fetch","then","res","json","status","image_url","currentTarget","error","reset","delete","Object","keys","add","date","toISOString","split","value","img","imgOverlay","edge","arrowIcon","deleteIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","typography","form","TextField","label","textField","onChange","Button","submitButton","utils","DateFnsUtils","DatePicker","inputVariant","datePicker","float","marginLeft","FloatingButton","Fab","aria-label","fab","bottom","right","db","Dexie","version","stores","addProduct","a","undefined","toArray","arr","deleteProductById","theId","where","equals","getAllProducts","catch","App","componentDidMount","getInitialState","showProductObj","updateState","resetState","deleteProduct","addProductToList","find","e","path","component","exact","render","update","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","createMuiTheme","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,kC,gnBCYrCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,EACVC,aAAcH,EAAMI,QAAQ,IAEhCC,WAAY,CACRC,YAAaN,EAAMI,QAAQ,IAE/BG,MAAO,CACHL,SAAU,EACVM,aAAc,UAElBC,KAAM,CACFC,SAAU,cAIH,SAASC,IACpB,IAAMC,EAAUd,IAiBhB,OACI,yBAAKe,UAAWD,EAAQX,MAEpB,kBAACa,EAAA,EAAD,CAAQC,SAAS,SACb,kBAACC,EAAA,EAAD,KAII,yBAAKC,IAAKC,IAAYC,IAAI,OAAON,UAAWD,EAAQH,OACpD,kBAACW,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAWD,EAAQL,OAA5C,SAGA,iC,wECjCde,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,oBAAsB,SAACC,GACnB,EAAKC,SAAS,CAACC,UAAU,IACzB,EAAKJ,MAAMK,YAAYH,IAVR,EAanBI,YAAc,SAACC,GACX,IACIC,GADqB,IAAIC,KAAKF,GAAa,IAAIE,MACP,MAE5C,OAAID,EAAqB,EACd,UACAA,EAAqB,EACrB,UAEA,WApBX,EAAKP,oBAAsB,EAAKA,oBAAoBS,KAAzB,gBAC3B,EAAKC,MAAQ,CACTP,UAAU,GAJC,E,qDA0BT,IAAD,OACGf,EAAYuB,KAAKZ,MAAjBX,QAER,OAAIuB,KAAKD,MAAMP,SACJ,kBAAC,IAAD,CAAUS,MAAI,EAACC,GAAG,mBAIzB,kBAACC,EAAA,EAAD,CAAMC,OAAK,EAAC1B,UAAWD,EAAQX,MAC1BkC,KAAKZ,MAAMiB,SAAWL,KAAKZ,MAAMiB,SAASC,KAAI,SAACC,GAAD,OAC3C,yBAAK7B,UAAWD,EAAQ+B,eACpB,kBAACC,EAAA,EAAD,CAAU/B,UAAWD,EAAQiC,SAAUC,QAAM,EAACC,QAAS,kBAAM,EAAKvB,oBAAoBkB,EAAQjB,MAC1F,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9B,IAAG,sBAAcuB,EAAU,GAC3BzB,IAAKyB,EAAQQ,WAGrB,kBAACC,EAAA,EAAD,CAAcC,QAAO,UAAKV,EAAQW,KAAb,aAAsBX,EAAQY,OAA9B,KAAyCC,UAC1D,6BACI,+CAAkBC,YAAO,IAAIxB,KAAKU,EAAQe,YAAY,eACtD,yBAAKC,MAAO,CACRC,OAAQ,SACRC,MAAO,OACPC,UAAW,SACXC,gBAAiB,EAAKjC,YAAYa,EAAQe,uBAM9D,U,GA1DOM,IAAMC,WA+DlBC,eA/EA,SAAAjE,GAAK,MAAK,CACrBC,KAAM,CACFiE,QAAS,OACTL,UAAW,QAEflB,cAAe,CACXwB,OAAQ,UAEZtB,SAAU,CACNuB,YAAa,SACbC,YAAa,QACbC,aAAc,SACdC,YAAavE,EAAMwE,QAAQpB,QAAQqB,SAmE5BR,CAAmB3C,G,kICbnBoD,EAxEC,SAAAnD,GAAU,IAChBoD,EAAepD,EAAfoD,WAERC,qBAAU,WACRC,IAAOC,KAAKC,GAAQ,SAAAC,GAKlB,OAJIA,GACFC,QAAQC,IAAIF,EAAK,aAEnBH,IAAOM,QACA,WACLN,IAAOO,WAKXP,IAAOQ,aAAY,SAAAC,GACjB,IAAIC,EAAaV,IAAOW,OAAOC,IAAIC,QACjCC,EAAgBd,IAAOW,OAAOI,IAAIF,QAEhCJ,IACEA,EAAOO,QACTN,EAAWO,UACT,EACA,EACAC,OAAOJ,EAAcK,aAAa,UAClCD,OAAOJ,EAAcK,aAAa,YAEpCV,EAAOO,MACJI,QAAO,SAASC,GACf,OAAOA,IAAQZ,EAAOY,OAEvBC,SAAQ,SAASD,GAChBrB,IAAOuB,WAAWC,SAASH,EAAK,CAAEI,EAAG,EAAGC,EAAG,GAAKhB,EAAY,CAC1DiB,MAAO,QACPC,UAAW,QAKfnB,EAAOY,KACTrB,IAAOuB,WAAWC,SAASf,EAAOY,IAAK,CAAEI,EAAG,EAAGC,EAAG,GAAKhB,EAAY,CACjEiB,MAAO,OACPC,UAAW,IAIXnB,EAAOoB,YAAcpB,EAAOoB,WAAWC,MACzC9B,IAAOuB,WAAWC,SAChBf,EAAOsB,KACP,CAAEN,EAAG,IAAKC,EAAG,KACbhB,EACA,CAAEiB,MAAO,MAAOC,UAAW,QAMnC5B,IAAOF,WAAWkC,KACjB,IAEH,IAAMA,EAAW,SAAAvB,GACfX,EAAWW,EAAOoB,WAAWC,OAG/B,OAIE,yBAAKlF,GAAG,cAAcZ,UAAU,cCpB9BiG,E,kDACF,WAAYvF,GAAQ,IAAD,8BACf,cAAMA,IACDwF,iBAAmB,EAAKA,iBAAiB9E,KAAtB,gBACxB,EAAK+E,kBAAoB,EAAKA,kBAAkB/E,KAAvB,gBACzB,EAAKgF,gBAAkB,EAAKA,gBAAgBhF,KAArB,gBACvB,EAAKiF,iBAAmB,EAAKA,iBAAiBjF,KAAtB,gBACxB,EAAKkF,YAAc,EAAKA,YAAYlF,KAAjB,gBACnB,EAAKmF,+BAAiC,EAAKA,+BAA+BnF,KAApC,gBACtC,EAAKoF,iBAAmB,EAAKA,iBAAiBpF,KAAtB,gBACxB,EAAKqF,YAAc,EAAKA,YAAYrF,KAAjB,gBACnB,EAAKsF,iBAAmB,EAAKA,iBAAiBtF,KAAtB,gBACxB,EAAK0C,WAAa,EAAKA,WAAW1C,KAAhB,gBAClB,EAAKuF,YAAc,EAAKA,YAAYvF,KAAjB,gBACnB,EAAKC,MAAQ,CACTP,UAAU,EACV8F,QAAS,GACTC,aAAc,EAAKnG,MAAMmB,QAAQW,KACjCC,OAAQ,EAAK/B,MAAMmB,QAAQY,OAC3BqE,aAAc,EAAKpG,MAAMmB,QAAQiF,aACjClE,WAAY,EAAKlC,MAAMmB,QAAQe,WAC/BP,QAAS,EAAK3B,MAAMmB,QAAQQ,QAC5B0E,SAAU,GACVC,MAAM,EACNpG,GAAI,iBACJqG,uBAAwB,GACxBC,SAAU,CACNpE,OAAQ,QACRqE,gBAAiB,OAAS,EAAKzG,MAAMmB,QAAQQ,QAAU,IACvD+E,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAgB,aAEpB7C,OAAQ,KACR8C,QAAQ,GAjCG,E,6DAqCFlF,GACbf,KAAKT,SAAS,CACVqG,SAAS,2BACF5F,KAAKD,MAAM6F,UADV,IAEJC,gBAAiB,OAAS9E,EAAU,MAExCA,QAASA,M,uCAIAmF,EAAQC,GACrBnG,KAAKT,SAAS,CACVmG,MAAM,EACND,SAAUU,EACVR,uBAAwBO,M,oCAM5BlG,KAAKT,SAAS,CACVkG,SAAU,KACVC,MAAM,M,qDAIiBU,GAAO,IAAD,OAC7Bd,EAAUtF,KAAKD,MAAMuF,QACtBA,EAIsB,KAAnBA,EAAQe,QAAoC,IAAnBf,EAAQe,OAC/BC,MAAM,kDAAkDhB,EAAQ,SAC/DiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACpD,GACH,IAAI5C,EAAU4C,EAAO5C,QAEA,IAAlB4C,EAAOuD,OACHnG,EAAQgF,cAEP,EAAKhG,SAAS,CACVgG,aAAchF,EAAQgF,eAE1B,EAAKH,iBAAiB7E,EAAQoG,YAG9B,EAAKzB,iBAAiB,8BAA8BkB,EAAMQ,eAK9D,EAAK1B,iBAAiB,+BAA+BkB,EAAMQ,kBAGnE,SAACC,GACG,EAAK3B,iBAAiB,qCAAkCkB,EAAMQ,kBAGtE5G,KAAKkF,iBAAiB,yBAAyBkB,EAAMQ,eAGrD5G,KAAKkF,iBAAiB,0BAA0BkB,EAAMQ,iB,uCAI7CR,GACbpG,KAAKT,SAAS,CAACC,UAAU,IACzBQ,KAAKZ,MAAM0H,U,wCAGGV,GACdpG,KAAKZ,MAAM2H,OAAO/G,KAAKZ,MAAMmB,QAAQjB,IACrCU,KAAKT,SAAS,CAACC,UAAU,IACzBQ,KAAKZ,MAAM0H,U,sCAGCV,GACmC,IAA3CY,OAAOC,KAAKjH,KAAKZ,MAAMmB,SAAS8F,QAChCrG,KAAKZ,MAAM8H,IAAIlH,KAAKD,MAAMwF,aAAcvF,KAAKD,MAAMoB,OAAQnB,KAAKD,MAAMyF,aAAcxF,KAAKD,MAAMuB,WAAYtB,KAAKD,MAAMgB,SAE1Hf,KAAKT,SAAS,CAACC,UAAU,IACzBQ,KAAKZ,MAAM0H,U,uCAGEV,EAAO9G,GACpB,IAAM6H,EAAOf,EAAMgB,cAAcC,MAAM,KAAK,GAC5CrH,KAAKT,SAAL,2BACOS,KAAKD,OADZ,kBAEKT,EAAK6H,O,kCAIFf,GACR,IAAMkB,EAAQlB,EAAMD,OAAOmB,MAC3BtH,KAAKT,SAAL,2BACOS,KAAKD,OADZ,kBAEKqG,EAAMD,OAAO7G,GAAKgI,O,iCAKhBnE,GACPnD,KAAKT,SAAS,CAAE+F,QAASnC,EACT8C,QAAQ,M,kCAGhBG,GACRpG,KAAKT,SAAS,CACV0G,QAASjG,KAAKD,MAAMkG,W,+BAIlB,IAAD,OACGxH,EAAYuB,KAAKZ,MAAjBX,QAER,OAAIuB,KAAKD,MAAMP,SACJ,kBAAC,IAAD,CAAUS,MAAI,EAACC,GAAG,WAIzB,yBAAKxB,UAAWD,EAAQX,MACpB,yBAAKY,UAAWD,EAAQ8I,IAAKhG,MAAOvB,KAAKD,MAAM6F,UAC3C,yBAAKlH,UAAWD,EAAQ+I,YACpB,kBAAC,IAAD,CACIC,KAAK,MACL/I,UAAWD,EAAQiJ,UACnB9G,QAASZ,KAAK4E,mBAE4B,KAA3CoC,OAAOC,KAAKjH,KAAKZ,MAAMmB,SAAS8F,QAAgB,kBAAC,IAAD,CAC/CoB,KAAK,MACL/I,UAAWD,EAAQkJ,WACnB/G,QAASZ,KAAK6E,sBAK1B,kBAAC+C,EAAA,EAAD,CACItI,GAAIU,KAAKD,MAAMT,GACfoG,KAAM1F,KAAKD,MAAM2F,KACjBD,SAAUzF,KAAKD,MAAM0F,SACrBoC,QAAS7H,KAAKmF,YACd2C,aAAc,CACdC,SAAU,SACVC,WAAY,UAEZC,gBAAiB,CACjBF,SAAU,MACVC,WAAY,WAGZ,kBAAC/I,EAAA,EAAD,CAAYP,UAAWD,EAAQyJ,YAAalI,KAAKD,MAAM4F,yBAG3D,0BAAMjH,UAAWD,EAAQ0J,MACwB,IAA3CnB,OAAOC,KAAKjH,KAAKZ,MAAMmB,SAAS8F,QAAgB,6BAC9C,kBAAC+B,EAAA,EAAD,CACI9I,GAAG,UACH+I,MAAM,UACNrG,OAAO,QACP9C,QAAQ,WACRoI,MAAOtH,KAAKD,MAAMuF,QAClB5G,UAAWD,EAAQ6J,UACnBC,SAAUvI,KAAKgF,cAGnB,yBAAKtG,UAAU,aACVsB,KAAKD,MAAMkG,QAAU,kBAAC,EAAD,CAASzD,WAAYxC,KAAKwC,cAGpD,kBAACgG,EAAA,EAAD,CACIlJ,GAAG,eACHJ,QAAQ,YACRmF,MAAM,UACN3F,UAAWD,EAAQgK,aACnB7H,QAASZ,KAAKiF,gCALlB,UASA,kBAACuD,EAAA,EAAD,CACIlJ,GAAG,aACHJ,QAAQ,YACRmF,MAAM,UACN3F,UAAWD,EAAQgK,aACnB7H,QAASZ,KAAKqF,aALlB,YAUJ,kBAAC+C,EAAA,EAAD,CACI9I,GAAG,eACH+I,MAAM,QACNrG,OAAO,QACP9C,QAAQ,WACRoI,MAAOtH,KAAKD,MAAMwF,aAClB7G,UAAWD,EAAQ6J,UACnBC,SAAUvI,KAAKgF,cAEnB,6BACA,kBAACoD,EAAA,EAAD,CACI9I,GAAG,SACH+I,MAAM,SACNrG,OAAO,QACP9C,QAAQ,WACRoI,MAAOtH,KAAKD,MAAMoB,OAClBzC,UAAWD,EAAQ6J,UACnBC,SAAUvI,KAAKgF,cAEnB,6BACA,kBAAC,IAAD,CAAyB0D,MAAOC,KAC5B,kBAACC,EAAA,EAAD,CACItJ,GAAG,eACH+I,MAAM,gBACNrG,OAAO,QACP6G,aAAa,WACbxH,OAAO,aACPiG,MAAOtH,KAAKD,MAAMyF,aAClB9G,UAAWD,EAAQqK,WACnBP,SAAU,SAACnC,GAAD,OAAW,EAAKrB,iBAAiBqB,EAAO,oBAG1D,6BACA,kBAAC,IAAD,CAAyBsC,MAAOC,KAC5B,kBAACC,EAAA,EAAD,CACItJ,GAAG,aACH+I,MAAM,gBACNrG,OAAO,QACP6G,aAAa,WACbxH,OAAO,aACPiG,MAAOtH,KAAKD,MAAMuB,WAClB5C,UAAWD,EAAQqK,WACnBP,SAAU,SAACnC,GAAD,OAAW,EAAKrB,iBAAiBqB,EAAO,kBAG1D,6BAEA,kBAACoC,EAAA,EAAD,CACIlJ,GAAG,aACHJ,QAAQ,YACRmF,MAAM,UACN3F,UAAWD,EAAQgK,aACnB7H,QAASZ,KAAK8E,iBALlB,mB,GAlRKlD,IAAMC,WAgShBC,eAtUA,SAAAjE,GAAK,MAAK,CACrBC,KAAM,CACF4D,UAAW,QAEf8F,WAAY,CACRhG,OAAQ,QACRG,gBAAiB,yBAErB+F,UAAW,CACPqB,MAAO,OACPC,WAAY,OACZtH,UAAW,OACX2C,MAAO,SAEXyE,WAAY,CACRrH,MAAO,QAEXkG,WAAY,CACRoB,MAAO,QACP5K,YAAa,OACbuD,UAAW,OACX2C,MAAO,SAEX8D,KAAM,CACFnG,OAAQ,UAEZsG,UAAW,CACP7G,MAAO,QAEXgH,aAAc,CACVM,MAAO,QACPrH,UAAW,QAEfwG,WAAY,CACRnG,QAASlE,EAAMI,QAAQ,OAoShB6D,CAAmB6C,G,oCCtU5BsE,G,uKAEQ,IACExK,EAAYuB,KAAKZ,MAAjBX,QAER,OACI,kBAAC,KAAD,CAAMyB,GAAG,kBACL,kBAACgJ,EAAA,EAAD,CAAK7E,MAAM,UAAU8E,aAAW,MAAMzK,UAAWD,EAAQ2K,KACrD,kBAAC,IAAD,Y,GARSxH,IAAMC,WAepBC,gBAvBA,SAAAjE,GAAK,MAAK,CACrBuL,IAAK,CACDxK,SAAU,QACVyK,OAAQxL,EAAMI,QAAQ,GACtBqL,MAAOzL,EAAMI,QAAQ,OAmBd6D,CAAmBmH,I,SC3B5BM,GAAK,IAAIC,KAAM,SACrBD,GAAGE,QAAQ,GAAGC,OAAO,CACjBrJ,SAAU,sDAGP,IAAMsJ,GAAU,uCAAG,WAAOzI,EAAMC,EAAQqE,EAAclE,GAAnC,2BAAAsI,EAAA,6DAA+C7I,EAA/C,oCAAuD8I,EAAvD,SAChBN,GAAGlJ,SAAS6G,IAAI,CAClBhG,KAAMA,EACNC,OAAQA,EACRqE,aAAcA,EACdlE,WAAYA,EACZP,QAASA,IANS,uBAQTwI,GAAGlJ,SAASyJ,UAAUvD,MAAK,SAAUwD,GAC9C,OAAOA,KATW,mFAAH,4DAuBVC,GAAiB,uCAAG,WAAOC,GAAP,SAAAL,EAAA,sEACvBL,GAAGlJ,SAAS6J,MAAM,MAAMC,OAAOF,GAAOlD,SADf,2CAAH,sDAYjBqD,GAAc,uCAAG,sBAAAR,EAAA,sEACbL,GAAGlJ,SAASyJ,UAAUvD,MAAK,SAAUwD,GAE9C,OAAOA,KACRM,OAAM,SAACxH,GACN,OAAOC,QAAQC,IAAIF,MALG,mFAAH,qDCwCZyH,G,kDAtEb,WAAYlL,GAAQ,IAAD,8BACjB,cAAMA,IAQRmL,kBAAoB,YACP,uCAAG,sBAAAX,EAAA,sEACNQ,KAAiB7D,MAAK,SAACwD,GAC3B,EAAKxK,SAAS,CAAEc,SAAU0J,OAFhB,2CAAH,qDAKbzD,IAfmB,EAkBnBkE,gBAAkB,iBAAO,CACvBnK,SAAU,GACVoK,eAAgB,KApBC,EAwBnBC,YAAc,SAACpD,GACb,EAAK/H,SAAS,CAAEkL,eAAiBnD,KAzBhB,EA4BnBqD,WAAa,WACV,EAAKpL,SAAS,EAAKiL,mBACnB,EAAKD,qBA9BW,EAsCnBK,cAtCmB,uCAsCH,WAAOtL,GAAP,SAAAsK,EAAA,sEACRI,GAAkB1K,GADV,2CAtCG,wDA0CnBuL,iBA1CmB,uCA0CA,WAAO3J,EAAMC,EAAQqE,EAAclE,EAAYP,GAA/C,SAAA6I,EAAA,sEACXD,GAAWzI,EAAMC,EAAQqE,EAAclE,EAAYP,GAASwF,MAAK,SAACwD,GACtE,EAAKxK,SAAS,CAAEc,SAAU0J,OAFX,2CA1CA,8DAEjB,EAAKhK,MAAQ,EAAKyK,kBAClB,EAAK/K,YAAc,EAAKA,YAAYK,KAAjB,gBACnB,EAAK8K,cAAgB,EAAKA,cAAc9K,KAAnB,gBACrB,EAAK6K,WAAa,EAAKA,WAAW7K,KAAhB,gBAClB,EAAK4K,YAAc,EAAKA,YAAY5K,KAAjB,gBANF,E,wDAiCPR,GACV,IAAIiB,EAAUP,KAAKD,MAAMM,SAASyK,MAAK,SAAAC,GAAC,OAAIA,EAAEzL,KAAOA,KACrDU,KAAKT,SAAS,CAAEkL,eAAgBlK,M,+BAaxB,IAAD,OAEP,OACE,kBAAC,KAAD,KACE,yBAAK7B,UAAU,OACb,kBAAC,IAAD,CAAOsM,KAAK,SAASC,UAAWzM,IAChC,kBAAC,IAAD,CAAO0M,OAAK,EAACF,KAAK,SAASG,OAAQ,SAAC/L,GAAD,OAAW,kBAAC,EAAD,CAAciB,SAAU,EAAKN,MAAMM,SAAUZ,YAAa,EAAKA,iBAC7G,kBAAC,IAAD,CAAOyL,OAAK,EAACF,KAAK,SAASG,OAAQ,SAAC/L,GAAD,OAAW,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAO8L,OAAK,EAACF,KAAK,iBAAiBG,OAAQ,SAAC/L,GAAD,OAAW,kBAAC,EAAD,CAAY8H,IAAK,EAAK2D,iBACVtK,QAAS,EAAKR,MAAM0K,eACpB1D,OAAQ,EAAK6D,cACbQ,OAAQ,EAAKV,YACb5D,MAAO,EAAK6D,sB,GA9DtE/I,IAAMC,WCElBwJ,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOhJ,GAC9BiJ,UAAUC,cACPC,SAASH,GACTrF,MAAK,SAAAyF,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnM,QACf8L,UAAUC,cAAcO,YAI1BvJ,QAAQC,IACN,iHAKEH,GAAUA,EAAO0J,UACnB1J,EAAO0J,SAASN,KAMlBlJ,QAAQC,IAAI,sCAGRH,GAAUA,EAAO2J,WACnB3J,EAAO2J,UAAUP,WAO5B3B,OAAM,SAAAxD,GACL/D,QAAQ+D,MAAM,4CAA6CA,M,wBCxF3DhJ,GAAQ2O,aAAe,CAC3BnK,QAAS,CACNpB,QAAS,CACNqB,KAAM,WAETlB,UAAW,CACTkB,KAAM,cAKbmK,IAAStB,OACP,kBAAC,IAAMuB,WAAP,KACE,kBAAC,KAAD,CAAkB7O,MAAOA,IACvB,kBAAC,GAAD,QAGJ8O,SAASC,eAAe,SDHnB,SAAkBhK,GACvB,GAA6C,kBAAmBiJ,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,SAAwBvB,OAAOC,SAASuB,MACpDC,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMkB,SAAN,sBAEPzB,KAgEV,SAAiCO,EAAOhJ,GAEtC0D,MAAMsF,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5B3G,MAAK,SAAA4G,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASzG,QACO,MAAf0G,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAMhH,MAAK,SAAAyF,GACjCA,EAAawB,aAAajH,MAAK,WAC7BgF,OAAOC,SAASiC,eAKpB9B,GAAgBC,EAAOhJ,MAG1ByH,OAAM,WACLvH,QAAQC,IACN,oEAvFA2K,CAAwB9B,EAAOhJ,GAI/BiJ,UAAUC,cAAcyB,MAAMhH,MAAK,WACjCzD,QAAQC,IACN,iHAMJ4I,GAAgBC,EAAOhJ,OCnB/BkJ,K","file":"static/js/main.f2596e02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a42da773.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport headerLogo from '../logo.svg';\r\n//import IconButton from '@material-ui/core/IconButton';\r\n//import MenuIcon from '@material-ui/icons/Menu';\r\n//import AccountCircle from '@material-ui/icons/AccountCircle';\r\n//import MenuItem from '@material-ui/core/MenuItem';\r\n//import Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        marginBottom: theme.spacing(7)\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        alignContent: 'center'\r\n    },\r\n    logo: {\r\n        maxWidth: '2.5rem',\r\n    }\r\n}));\r\n\r\nexport default function AppHeader() {\r\n    const classes = useStyles();\r\n    // const [auth, setAuth] = React.useState(true);\r\n    // const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // const open = Boolean(anchorEl);\r\n\r\n    // const handleChange = (event) => {\r\n    //     setAuth(event.target.checked);\r\n    // };\r\n\r\n    // const handleMenu = (event) => {\r\n    //     setAnchorEl(event.currentTarget);\r\n    // };\r\n\r\n    // const handleClose = () => {\r\n    //     setAnchorEl(null);\r\n    // };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <AppBar position=\"fixed\"> \r\n                <Toolbar>\r\n                    {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton> */}\r\n                    <img src={headerLogo} alt=\"logo\" className={classes.logo} />\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Xpire\r\n                    </Typography>\r\n                    <div></div>\r\n                    {/* {auth && (\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )} */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Redirect } from 'react-router';\r\nimport format from 'date-fns/format';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: '1rem',\r\n        marginTop: \"56px\"\r\n    },\r\n    listitemframe: {\r\n        margin: '0.6rem'\r\n    },\r\n    listitem: {\r\n        borderWidth: '0.1rem',\r\n        borderStyle: 'solid',\r\n        borderRadius: '0.5rem',\r\n        borderColor: theme.palette.primary.main\r\n    }\r\n});\r\n\r\nclass ProductsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleListItemClick = this.handleListItemClick.bind(this);\r\n        this.state = {\r\n            redirect: false,\r\n        }    \r\n    }\r\n\r\n    handleListItemClick = (id) => {\r\n        this.setState({redirect: true});\r\n        this.props.showProduct(id);\r\n    }\r\n\r\n    statusColor = (validDate) => {\r\n        var bestBeforeMilliSec = new Date(validDate) - new Date();\r\n        var bestBeforeDayCount = bestBeforeMilliSec/(1000*60*60*24); \r\n        \r\n        if (bestBeforeDayCount > 3) {\r\n            return '#C9DEBC';\r\n        } else if (bestBeforeDayCount > 0) {\r\n            return '#F4E132';\r\n        } else {\r\n            return '#F96523';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect push to=\"/Xpire/Product\" />;\r\n        }\r\n\r\n        return (\r\n            <List dense className={classes.root}>\r\n                {this.props.products ? this.props.products.map((product) =>\r\n                    <div className={classes.listitemframe}>\r\n                        <ListItem className={classes.listitem} button onClick={() => this.handleListItemClick(product.id)}>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    alt={`Avatar n°${product + 1}`}\r\n                                    src={product.img_url}\r\n                                />\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={`${product.name} (${product.amount})`} secondary={\r\n                                <div>\r\n                                    <div>Gültig bis: {format(new Date(product.expireDate),\"dd.MM.yyyy\")}</div>\r\n                                    <div style={{\r\n                                        height: '0.5rem',\r\n                                        width: '100%',\r\n                                        marginTop: '0.3rem',\r\n                                        backgroundColor: this.statusColor(product.expireDate),\r\n                                    }}></div>\r\n                            </div>\r\n                            }/>\r\n                        </ListItem>\r\n                    </div>\r\n                ) : null}\r\n            </List>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(ProductsList);","import React, { useEffect } from \"react\";\r\nimport config from \"./config.json\";\r\nimport Quagga from \"quagga\";\r\n\r\nconst Scanner = props => {\r\n  const { onDetected } = props;\r\n\r\n  useEffect(() => {\r\n    Quagga.init(config, err => {\r\n      if (err) {\r\n        console.log(err, \"error msg\");\r\n      }\r\n      Quagga.start();\r\n      return () => {\r\n        Quagga.stop()\r\n      }\r\n    });\r\n\r\n    //detecting boxes on stream\r\n    Quagga.onProcessed(result => {\r\n      var drawingCtx = Quagga.canvas.ctx.overlay,\r\n        drawingCanvas = Quagga.canvas.dom.overlay;\r\n\r\n      if (result) {\r\n        if (result.boxes) {\r\n          drawingCtx.clearRect(\r\n            0,\r\n            0,\r\n            Number(drawingCanvas.getAttribute(\"width\")),\r\n            Number(drawingCanvas.getAttribute(\"height\"))\r\n          );\r\n          result.boxes\r\n            .filter(function(box) {\r\n              return box !== result.box;\r\n            })\r\n            .forEach(function(box) {\r\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\r\n                color: \"green\",\r\n                lineWidth: 2\r\n              });\r\n            });\r\n        }\r\n\r\n        if (result.box) {\r\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\r\n            color: \"#00F\",\r\n            lineWidth: 2\r\n          });\r\n        }\r\n\r\n        if (result.codeResult && result.codeResult.code) {\r\n          Quagga.ImageDebug.drawPath(\r\n            result.line,\r\n            { x: \"x\", y: \"y\" },\r\n            drawingCtx,\r\n            { color: \"red\", lineWidth: 3 }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    Quagga.onDetected(detected);\r\n  }, []);\r\n\r\n  const detected = result => {\r\n    onDetected(result.codeResult.code);\r\n  };\r\n\r\n  return (\r\n    // If you do not specify a target,\r\n    // QuaggaJS would look for an element that matches\r\n    // the CSS selector #interactive.viewport\r\n    <div id=\"interactive\" className=\"viewport\" />\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Redirect } from 'react-router';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Scanner from \"./Scanner\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginTop: \"56px\"\r\n    },\r\n    imgOverlay: {\r\n        height: '15rem',\r\n        backgroundColor: \"hsla(0, 0%, 0%, 0.23)\"\r\n    }, \r\n    arrowIcon: {\r\n        float: 'left',\r\n        marginLeft: \"16px\",\r\n        marginTop: \"10px\",\r\n        color: \"white\"\r\n    }, \r\n    datePicker: {\r\n        width: '100%'\r\n    },\r\n    deleteIcon: {\r\n        float: 'right',\r\n        marginRight: \"28px\",\r\n        marginTop: \"10px\",\r\n        color: \"white\"\r\n    },\r\n    form: {\r\n        margin: '1.6rem'\r\n    },\r\n    textField: {\r\n        width: '100%'\r\n    },\r\n    submitButton: {\r\n        float: 'right',\r\n        marginTop: '1rem'\r\n    },\r\n    typography: {\r\n        padding: theme.spacing(2)\r\n    }\r\n});\r\n\r\nclass AddProduct extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClickArrow = this.handleClickArrow.bind(this);\r\n        this.handleClickDelete = this.handleClickDelete.bind(this);\r\n        this.handleClickSave = this.handleClickSave.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.getProductInformationByBarcode = this.getProductInformationByBarcode.bind(this);\r\n        this.showErrorPopOver = this.showErrorPopOver.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.setBackgroundImg = this.setBackgroundImg.bind(this);\r\n        this.onDetected = this.onDetected.bind(this);\r\n        this.onStartScan = this.onStartScan.bind(this);\r\n        this.state = {\r\n            redirect: false,\r\n            barcode: \"\",\r\n            product_name: this.props.product.name,\r\n            amount: this.props.product.amount,\r\n            purchaseDate: this.props.product.purchaseDate,\r\n            expireDate: this.props.product.expireDate,\r\n            img_url: this.props.product.img_url,\r\n            anchorEl: {},\r\n            open: false,\r\n            id: 'simple-popover',\r\n            simple_popover_message: \"\",\r\n            imgStyle: {\r\n                height: '15rem',\r\n                backgroundImage: \"url(\" + this.props.product.img_url + \")\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundPosition: \"center\",\r\n                backgroundSize: \"auto 100%\"\r\n            },\r\n            result: null,\r\n            camera: false\r\n        }\r\n    }\r\n\r\n    setBackgroundImg(img_url){\r\n        this.setState({\r\n            imgStyle: {\r\n                ...this.state.imgStyle,\r\n                backgroundImage: \"url(\" + img_url + \")\",\r\n            },\r\n            img_url: img_url\r\n        })\r\n    }\r\n\r\n    showErrorPopOver(message,target){\r\n        this.setState({\r\n            open: true,\r\n            anchorEl: target,\r\n            simple_popover_message: message\r\n        })\r\n\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            anchorEl: null,\r\n            open: false\r\n        })\r\n    };\r\n\r\n    getProductInformationByBarcode(event){\r\n        var barcode = this.state.barcode;\r\n        if(barcode){\r\n           //check for valid barcode\r\n\r\n           //var searchResult = {};\r\n           if(barcode.length === 13 || barcode.length === 8) {\r\n                fetch(\"https://world.openfoodfacts.org/api/v0/product/\"+barcode+\".json\")\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    var product = result.product;\r\n                    //check if product found\r\n                    if(result.status === 1){\r\n                        if(product.product_name) {\r\n                            //this.props.update(product.product_name);\r\n                            this.setState({\r\n                                product_name: product.product_name,\r\n                            })\r\n                            this.setBackgroundImg(product.image_url);\r\n                        } else {\r\n                            // throw error\r\n                            this.showErrorPopOver(\"Produktname nicht gefunden!\",event.currentTarget);\r\n                        }\r\n                        \r\n                    } else {\r\n                        // throw error\r\n                        this.showErrorPopOver(\"Das Produkt existiert nicht!\",event.currentTarget);\r\n                    }\r\n                },\r\n                (error) => {\r\n                    this.showErrorPopOver(\"Prüfe deine Internetverbindung!\",event.currentTarget);\r\n                })\r\n           } else {\r\n            this.showErrorPopOver(\"Barcode nicht korrekt!\",event.currentTarget);\r\n           }\r\n        } else {\r\n            this.showErrorPopOver(\"Bitte Barcode eingeben!\",event.currentTarget);\r\n        }\r\n    }\r\n\r\n    handleClickArrow(event) {\r\n        this.setState({redirect: true});\r\n        this.props.reset();\r\n    }\r\n\r\n    handleClickDelete(event) {\r\n        this.props.delete(this.props.product.id);\r\n        this.setState({redirect: true});\r\n        this.props.reset();\r\n    }\r\n\r\n    handleClickSave(event){\r\n        if (Object.keys(this.props.product).length === 0){\r\n            this.props.add(this.state.product_name, this.state.amount, this.state.purchaseDate, this.state.expireDate, this.state.img_url);\r\n        }\r\n        this.setState({redirect: true});\r\n        this.props.reset();\r\n    }\r\n\r\n    handleDateChange(event, id) {\r\n        const date = event.toISOString().split('T')[0];       \r\n        this.setState({\r\n            ...this.state,\r\n            [id]: date\r\n        })    \r\n    }\r\n\r\n    handleInput(event) {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.id]: value\r\n        })\r\n        \r\n    }\r\n\r\n    onDetected(result) {\r\n        this.setState({ barcode: result,\r\n                        camera: false })\r\n    }\r\n\r\n    onStartScan(event) {\r\n        this.setState({\r\n            camera: !this.state.camera\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect push to=\"/Xpire\" />;\r\n        }\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.img} style={this.state.imgStyle}>\r\n                    <div className={classes.imgOverlay}>\r\n                        <ArrowIcon \r\n                            edge=\"end\"\r\n                            className={classes.arrowIcon}\r\n                            onClick={this.handleClickArrow}\r\n                        />\r\n                        { !Object.keys(this.props.product).length === 0 && <DeleteIcon \r\n                            edge=\"end\"\r\n                            className={classes.deleteIcon}\r\n                            onClick={this.handleClickDelete}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n        \r\n                <Popover\r\n                    id={this.state.id}\r\n                    open={this.state.open}\r\n                    anchorEl={this.state.anchorEl}\r\n                    onClose={this.handleClose}\r\n                    anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                    }}\r\n                >\r\n                    <Typography className={classes.typography}>{this.state.simple_popover_message}</Typography>\r\n                </Popover>  \r\n\r\n                <form className={classes.form}>\r\n                    { Object.keys(this.props.product).length === 0 && <div>\r\n                        <TextField\r\n                            id=\"barcode\"\r\n                            label=\"Barcode\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.barcode}\r\n                            className={classes.textField}\r\n                            onChange={this.handleInput}\r\n                        />\r\n\r\n                        <div className=\"container\">\r\n                            {this.state.camera && <Scanner onDetected={this.onDetected} />}\r\n                        </div>\r\n\r\n                        <Button\r\n                            id=\"SearchButton\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submitButton}\r\n                            onClick={this.getProductInformationByBarcode}>\r\n                            Suchen\r\n                        </Button>\r\n\r\n                        <Button\r\n                            id=\"ScanButton\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submitButton}\r\n                            onClick={this.onStartScan}>\r\n                            Scannen\r\n                        </Button>\r\n                    </div>}\r\n                    \r\n                    <TextField\r\n                        id=\"product_name\"\r\n                        label=\"Titel\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        value={this.state.product_name}\r\n                        className={classes.textField}\r\n                        onChange={this.handleInput}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                        id=\"amount\"\r\n                        label=\"Anzahl\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        value={this.state.amount}\r\n                        className={classes.textField}\r\n                        onChange={this.handleInput}\r\n                    />                           \r\n                    <br />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            id=\"purchaseDate\"\r\n                            label=\"Eingekauft am\"\r\n                            margin=\"dense\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd.MM.yyyy\"\r\n                            value={this.state.purchaseDate} \r\n                            className={classes.datePicker}\r\n                            onChange={(event) => this.handleDateChange(event, \"purchaseDate\")}     \r\n                        />                      \r\n                    </MuiPickersUtilsProvider>                                        \r\n                    <br />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            id=\"expireDate\"\r\n                            label=\"Gültig bis\"\r\n                            margin=\"dense\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"dd.MM.yyyy\"\r\n                            value={this.state.expireDate} \r\n                            className={classes.datePicker}\r\n                            onChange={(event) => this.handleDateChange(event, \"expireDate\")}\r\n                        />                      \r\n                    </MuiPickersUtilsProvider>\r\n                    <br />\r\n           \r\n                    <Button\r\n                        id=\"SaveButton\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submitButton}\r\n                        onClick={this.handleClickSave}>\r\n                        Speichern\r\n                    </Button>\r\n                </form>                           \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddProduct);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(4),\r\n        right: theme.spacing(4),\r\n    },\r\n});\r\n\r\nclass FloatingButton extends React.Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Link to=\"/Xpire/Product\">\r\n                <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(FloatingButton);","import Dexie from 'dexie'\r\n\r\nconst db = new Dexie('Xpire');\r\ndb.version(1).stores({\r\n    products: \"++id,name,amount,purchaseDate,expireDate, img_url\"\r\n});\r\n\r\nexport const addProduct = async (name, amount, purchaseDate, expireDate, img_url=undefined) => {\r\n    await db.products.add({\r\n        name: name,\r\n        amount: amount,\r\n        purchaseDate: purchaseDate,\r\n        expireDate: expireDate,\r\n        img_url: img_url\r\n    });\r\n    return await db.products.toArray().then(function (arr) {\r\n        return arr;\r\n    });\r\n}\r\nexport const updateProductById = async (id, product) => {\r\n    console.log(product) //has to be one or multiple key(s) + value(s) according to database table attributes\r\n    await db.products.update(id, product);\r\n}\r\n\r\nexport const clearTable = async (tableName) => {\r\n    await db.table(tableName).clear().catch(() => {\r\n        console.log('scheise')\r\n    })\r\n}\r\n\r\nexport const deleteProductById = async (theId) => {\r\n    await db.products.where('id').equals(theId).delete()\r\n}\r\n\r\nexport const getProductById = async (id) => {\r\n    return await db.products.get(id).then(function (prod) {\r\n        return prod\r\n    }).catch((err) => {\r\n        return console.log(err)\r\n    })\r\n}\r\n\r\nexport const getAllProducts = async () => {\r\n    return await db.products.toArray().then(function (arr) {\r\n        // console.log(arr);\r\n        return arr;\r\n    }).catch((err) => {\r\n        return console.log(err)\r\n    })\r\n}\r\n\r\nexport const createDatabase = async () => { //use for debugging \r\n    const db = new Dexie('Xpire');\r\n    db.version(1).stores({\r\n        products: \"++id,name,amount,purchaseDate,expireDate, img_rl\"\r\n    });\r\n}","import React from 'react';\r\nimport './App.css';\r\n//import IdbTest from './IdbTest'\r\nimport AppHeader from './components/AppHeader'\r\nimport ProductsList from './components/ProductsList';\r\nimport AddProduct from './components/AddProduct';\r\nimport FloatingButton from './components/FloatingButton';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom'; \r\nimport { addProduct, deleteProductById, getAllProducts } from './Idb'\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState();\r\n    this.showProduct = this.showProduct.bind(this);\r\n    this.deleteProduct = this.deleteProduct.bind(this);\r\n    this.resetState = this.resetState.bind(this);\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const fetch = async () => {\r\n      await getAllProducts().then((arr) => {\r\n        this.setState({ products: arr}); \r\n      })\r\n  }\r\n  fetch();\r\n  }\r\n\r\n  getInitialState = () => ({\r\n    products: [],\r\n    showProductObj: {}\r\n  })\r\n\r\n  // Check function if necessary!!\r\n  updateState = (value) => {\r\n    this.setState({ showProductObj : value}); \r\n  }\r\n\r\n  resetState = () => {\r\n     this.setState(this.getInitialState());\r\n     this.componentDidMount();\r\n  }\r\n\r\n  showProduct(id) {\r\n    var product = this.state.products.find(e => e.id === id);\r\n    this.setState({ showProductObj: product });\r\n  }\r\n\r\n  deleteProduct = async (id) => {\r\n    await deleteProductById(id)\r\n  }\r\n\r\n  addProductToList = async (name, amount, purchaseDate, expireDate, img_url) => {\r\n    await addProduct(name, amount, purchaseDate, expireDate, img_url).then((arr) => {\r\n      this.setState({ products: arr});\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"App\"> \r\n          <Route path=\"/Xpire\" component={AppHeader} />\r\n          <Route exact path=\"/Xpire\" render={(props) => <ProductsList products={this.state.products} showProduct={this.showProduct}/>} />\r\n          <Route exact path=\"/Xpire\" render={(props) => <FloatingButton />} />\r\n          <Route exact path=\"/Xpire/Product\" render={(props) => <AddProduct add={this.addProductToList} \r\n                                                                            product={this.state.showProductObj} \r\n                                                                            delete={this.deleteProduct} \r\n                                                                            update={this.updateState}\r\n                                                                            reset={this.resetState}/>} \r\n                                                                />\r\n        </div>\r\n      </Router>\r\n      \r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\n// Color theme for whole app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n     primary: {\r\n        main: '#C9DEBC',\r\n     },\r\n     secondary: {\r\n       main: '#F96523',\r\n     },\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}