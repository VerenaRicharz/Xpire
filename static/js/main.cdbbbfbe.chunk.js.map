{"version":3,"sources":["logo.svg","components/AppHeader.js","components/ProductsList.js","components/Scanner.js","components/AddProduct.js","components/FloatingButton.js","Idb.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","logo","maxWidth","AppHeader","classes","AppBar","position","Toolbar","src","headerLogo","alt","className","Typography","variant","ProductsList","props","handleListItemClick","id","setState","redirect","showProduct","statusColor","validDate","bestBeforeDayCount","Date","bind","state","this","push","to","toolbar","List","dense","list","products","map","product","listitemframe","key","ListItem","listitem","button","onClick","ListItemAvatar","Avatar","img_url","ListItemText","primary","name","amount","secondary","format","expireDate","style","height","width","marginTop","backgroundColor","notification","React","Component","withStyles","mixins","padding","margin","borderWidth","borderStyle","borderRadius","borderColor","palette","main","Scanner","onDetected","useEffect","Quagga","init","config","err","console","log","start","stop","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","Number","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","color","lineWidth","codeResult","code","line","detected","AddProduct","componentDidMount","productID","find","e","product_name","product_amount","product_purchaseDate","purchaseDate","product_expireDate","product_img_url","imgStyle","backgroundImage","handleCloseSnackbar","event","reason","openSnackbar","handleClickArrow","handleClickDelete","handleClickSave","handleDateChange","handleInput","getProductInformationByBarcode","showErrorPopOver","handleClose","setBackgroundImg","setDate","handleClickUpdate","onStartScan","backgroundRepeat","backgroundPosition","backgroundSize","barcode","anchorEl","open","simple_popover_message","camera","message","target","keyCode","length","fetch","then","res","json","status","image_url","currentTarget","error","refreshPage","delete","add","date","isoDate","toISOString","split","value","productUpdate","img","imgOverlay","edge","arrowIcon","deleteIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","typography","formContainer","form","TextField","label","textField","onChange","onKeyDown","InputProps","endAdornment","InputAdornment","required","utils","DateFnsUtils","DatePicker","inputVariant","datePicker","Button","submitButton","Snackbar","autoHideDuration","action","IconButton","size","aria-label","fontSize","marginLeft","right","float","FloatingButton","Fab","fab","bottom","db","Dexie","version","stores","addProduct","a","undefined","toArray","arr","updateProductById","update","updated","getAllProducts","deleteProductById","theId","where","equals","catch","App","deleteProduct","addProductToList","updateProduct","displayNotification","Notification","permission","Collapse","in","Alert","navigator","serviceWorker","ready","registration","showNotification","body","tag","path","component","exact","render","Boolean","window","location","hostname","match","createMuiTheme","ReactDOM","StrictMode","document","getElementById","register","requestPermission","aElement","createElement","href","textContent","querySelector","appendChild"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,kC,ilBCYrCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/BC,MAAO,CACHJ,SAAU,EACVK,UAAW,UAEfC,KAAM,CACFC,SAAU,cAIH,SAASC,IACpB,IAAMC,EAAUb,IAiBhB,OACQ,kBAACc,EAAA,EAAD,CAAQC,SAAS,SACb,kBAACC,EAAA,EAAD,KAII,yBAAKC,IAAKC,IAAYC,IAAI,OAAOC,UAAWP,EAAQH,OACpD,kBAACW,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWP,EAAQL,OAA5C,SAGA,gC,wEC9Bde,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,oBAAsB,SAACC,GACnB,EAAKC,SAAS,CAACC,UAAU,IACzB,EAAKJ,MAAMK,YAAYH,IAVR,EAanBI,YAAc,SAACC,GACX,IACIC,GADqB,IAAIC,KAAKF,GAAa,IAAIE,MACP,MAE5C,OAAID,EAAqB,EACd,UACAA,EAAqB,EACrB,UAEA,WApBX,EAAKP,oBAAsB,EAAKA,oBAAoBS,KAAzB,gBAC3B,EAAKC,MAAQ,CACTP,UAAU,GAJC,E,qDA0BT,IAAD,OACGf,EAAYuB,KAAKZ,MAAjBX,QAER,OAAIuB,KAAKD,MAAMP,SACJ,kBAAC,IAAD,CAAUS,MAAI,EAACC,GAAG,mBAIzB,yBAAKlB,UAAWP,EAAQV,MACpB,yBAAKiB,UAAWP,EAAQ0B,UACxB,kBAACC,EAAA,EAAD,CAAMC,OAAK,EAACrB,UAAWP,EAAQ6B,MAC1BN,KAAKZ,MAAMmB,SAAWP,KAAKZ,MAAMmB,SAASC,KAAI,SAACC,GAAD,OAC3C,yBAAKzB,UAAWP,EAAQiC,cAAeC,IAAKF,EAAQnB,IAChD,kBAACsB,EAAA,EAAD,CAAU5B,UAAWP,EAAQoC,SAAUC,QAAM,EAACC,QAAS,kBAAM,EAAK1B,oBAAoBoB,EAAQnB,MAC1F,kBAAC0B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIlC,IAAG,sBAAc0B,EAAU,GAC3B5B,IAAK4B,EAAQS,WAGrB,kBAACC,EAAA,EAAD,CAAcC,QAAO,UAAKX,EAAQY,KAAb,aAAsBZ,EAAQa,OAA9B,KAAyCC,UAC1D,6BACI,+CAAkBC,YAAO,IAAI3B,KAAKY,EAAQgB,YAAY,eACtD,yBAAKC,MAAO,CACRC,OAAQ,SACRC,MAAO,OACPC,UAAW,SACXC,gBAAiB,EAAKpC,YAAYe,EAAQgB,uBAM9D,MAER,4BAAQV,QAASf,KAAKZ,MAAM2C,cAA5B,mB,GA9DWC,IAAMC,WAmElBC,eAnFA,SAAApE,GAAK,MAAK,CACrBqC,QAASrC,EAAMqE,OAAOhC,QACtBG,KAAM,CACF8B,QAAS,QAEb1B,cAAe,CACX2B,OAAQ,UAEZxB,SAAU,CACNyB,YAAa,SACbC,YAAa,QACbC,aAAc,SACdC,YAAa3E,EAAM4E,QAAQtB,QAAQuB,SAuE5BT,CAAmB/C,G,iMCjBnByD,GAxEC,SAAAxD,GAAU,IAChByD,EAAezD,EAAfyD,WAERC,qBAAU,WACRC,KAAOC,KAAKC,GAAQ,SAAAC,GAKlB,OAJIA,GACFC,QAAQC,IAAIF,EAAK,aAEnBH,KAAOM,QACA,WACLN,KAAOO,WAKXP,KAAOQ,aAAY,SAAAC,GACjB,IAAIC,EAAaV,KAAOW,OAAOC,IAAIC,QACjCC,EAAgBd,KAAOW,OAAOI,IAAIF,QAEhCJ,IACEA,EAAOO,QACTN,EAAWO,UACT,EACA,EACAC,OAAOJ,EAAcK,aAAa,UAClCD,OAAOJ,EAAcK,aAAa,YAEpCV,EAAOO,MACJI,QAAO,SAASC,GACf,OAAOA,IAAQZ,EAAOY,OAEvBC,SAAQ,SAASD,GAChBrB,KAAOuB,WAAWC,SAASH,EAAK,CAAEI,EAAG,EAAGC,EAAG,GAAKhB,EAAY,CAC1DiB,MAAO,QACPC,UAAW,QAKfnB,EAAOY,KACTrB,KAAOuB,WAAWC,SAASf,EAAOY,IAAK,CAAEI,EAAG,EAAGC,EAAG,GAAKhB,EAAY,CACjEiB,MAAO,OACPC,UAAW,IAIXnB,EAAOoB,YAAcpB,EAAOoB,WAAWC,MACzC9B,KAAOuB,WAAWC,SAChBf,EAAOsB,KACP,CAAEN,EAAG,IAAKC,EAAG,KACbhB,EACA,CAAEiB,MAAO,MAAOC,UAAW,QAMnC5B,KAAOF,WAAWkC,KACjB,IAEH,IAAMA,EAAW,SAAAvB,GACfX,EAAWW,EAAOoB,WAAWC,OAG/B,OAIE,yBAAKvF,GAAG,cAAcN,UAAU,cCX9BgG,G,kDACF,WAAY5F,GAAQ,IAAD,8BACf,cAAMA,IA2CV6F,kBAAoB,WAChB,GAA6B,IAAzB,EAAK7F,MAAM8F,UAAgB,CAC3B,IAAIzE,EAAU,EAAKrB,MAAMmB,SAAS4E,MAAK,SAAAC,GAAC,OAAIA,EAAE9F,KAAO,EAAKF,MAAM8F,aAChE,EAAK3F,SAAS,CACV8F,aAAc5E,EAAQY,KACtBiE,eAAgB7E,EAAQa,OACxBiE,qBAAsB9E,EAAQ+E,aAC9BC,mBAAoBhF,EAAQgB,WAC5BiE,gBAAiBjF,EAAQS,QACzByE,SAAS,2BACF,EAAK5F,MAAM4F,UADV,IAEJC,gBAAiB,OAASnF,EAAQS,QAAU,UAvDzC,EAuFnB2E,oBAAsB,SAACC,EAAOC,GACX,cAAXA,GAGJ,EAAKxG,SAAS,CAACyG,cAAc,KAzF7B,EAAKC,iBAAmB,EAAKA,iBAAiBnG,KAAtB,gBACxB,EAAKoG,kBAAoB,EAAKA,kBAAkBpG,KAAvB,gBACzB,EAAKqG,gBAAkB,EAAKA,gBAAgBrG,KAArB,gBACvB,EAAKsG,iBAAmB,EAAKA,iBAAiBtG,KAAtB,gBACxB,EAAKuG,YAAc,EAAKA,YAAYvG,KAAjB,gBACnB,EAAKwG,+BAAiC,EAAKA,+BAA+BxG,KAApC,gBACtC,EAAKyG,iBAAmB,EAAKA,iBAAiBzG,KAAtB,gBACxB,EAAK0G,YAAc,EAAKA,YAAY1G,KAAjB,gBACnB,EAAK+F,oBAAsB,EAAKA,oBAAoB/F,KAAzB,gBAC3B,EAAK2G,iBAAmB,EAAKA,iBAAiB3G,KAAtB,gBACxB,EAAK4G,QAAU,EAAKA,QAAQ5G,KAAb,gBACf,EAAK6G,kBAAoB,EAAKA,kBAAkB7G,KAAvB,gBACzB,EAAK+C,WAAa,EAAKA,WAAW/C,KAAhB,gBAClB,EAAK8G,YAAc,EAAKA,YAAY9G,KAAjB,gBACnB,EAAKC,MAAQ,CACTP,UAAU,EACV6F,aAAc,GACdC,eAAgB,GAChBC,qBAAsB,GACtBE,mBAAoB,GACpBC,gBAAiB,GACjBC,SAAU,CAINhE,OAAQ,QACRiE,gBAAiB,OAAS,EAAKxG,MAAMmB,SAASW,QAAU,IACxD2F,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAgB,aAEpBC,QAAS,GACTC,SAAU,GACVC,MAAM,EACNlB,cAAc,EACd1G,GAAI,iBACJ6H,uBAAwB,GACxB3D,OAAQ,KACR4D,QAAQ,GAxCG,E,6DA6DF1B,GACb1F,KAAKT,SAAS,CACVoG,SAAS,2BACF3F,KAAKD,MAAM4F,UADV,IAEJC,gBAAiB,OAASF,EAAkB,MAEhDA,gBAAiBA,M,uCAIR2B,EAAQC,GACrBtH,KAAKT,SAAS,CACV2H,MAAM,EACND,SAAUK,EACVH,uBAAwBE,M,oCAM5BrH,KAAKT,SAAS,CACV0H,SAAU,KACVC,MAAM,M,qDAWiBpB,GAAO,IAAD,OACjC,GAAoB,IAAjBA,EAAMyB,QAAc,CACnB,IAAIP,EAAUhH,KAAKD,MAAMiH,QACtBA,EAImB,KAAnBA,EAAQQ,QAAoC,IAAnBR,EAAQQ,OAC5BC,MAAM,kDAAkDT,EAAQ,SAC/DU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAClE,GACH,IAAI/C,EAAU+C,EAAO/C,QAEA,IAAlB+C,EAAOqE,OACHpH,EAAQ4E,cAEP,EAAK9F,SAAS,CACV8F,aAAc5E,EAAQ4E,eAE1B,EAAKoB,iBAAiBhG,EAAQqH,YAG9B,EAAKvB,iBAAiB,8BAA8BT,EAAMiC,eAK9D,EAAKxB,iBAAiB,+BAA+BT,EAAMiC,kBAGnE,SAACC,GACG,EAAKzB,iBAAiB,qCAAkCT,EAAMiC,kBAGtE/H,KAAKuG,iBAAiB,yBAAyBT,EAAMiC,eAGrD/H,KAAKuG,iBAAiB,0BAA0BT,EAAMiC,kB,uCAKjDjC,GACb9F,KAAKT,SAAS,CAACC,UAAU,IACzBQ,KAAKZ,MAAM6I,gB,wCAGGnC,GACd9F,KAAKZ,MAAM8I,OAAOlI,KAAKZ,MAAM8F,WAC7BlF,KAAKT,SAAS,CAACC,UAAU,IACzBQ,KAAKZ,MAAM6I,gB,sCAGCnC,GACR9F,KAAKD,MAAMwF,sBACXvF,KAAK0G,QAAQ,IAAI7G,KAAQ,gBAEzBG,KAAKD,MAAM0F,oBACXzF,KAAK0G,QAAQ,IAAI7G,KAAQ,cAEA,IAAzBG,KAAKZ,MAAM8F,WACXlF,KAAKZ,MAAM+I,IAAInI,KAAKD,MAAMsF,aAAcrF,KAAKD,MAAMuF,eAAgBtF,KAAKD,MAAMwF,qBAAsBvF,KAAKD,MAAM0F,mBAAoBzF,KAAKD,MAAM2F,iBAElJ1F,KAAKT,SAAS,CAACC,UAAU,IACzBQ,KAAKZ,MAAM6I,gB,uCAGEnC,EAAOxG,GACpBU,KAAK0G,QAAQZ,EAAOxG,K,uEAGV8I,EAAM9I,G,8EACV+I,EAAUD,EAAKE,cAAcC,MAAM,KAAK,G,SACxCvI,KAAKT,SAAL,eAAgBD,EAAK+I,I,2IAGnBvC,GACR,IAAM0C,EAAQ1C,EAAMwB,OAAOkB,MAC3BxI,KAAKT,SAAL,2BACOS,KAAKD,OADZ,kBAEK+F,EAAMwB,OAAOhI,GAAKkJ,O,wCAKT1C,GACd,IAAIrF,EAAU,CACVY,KAAMrB,KAAKD,MAAMsF,aACjB/D,OAAQtB,KAAKD,MAAMuF,eACnBE,aAAcxF,KAAKD,MAAMwF,qBACzB9D,WAAYzB,KAAKD,MAAM0F,oBAE3BzF,KAAKZ,MAAMqJ,cAAczI,KAAKZ,MAAM8F,UAAWzE,GAC/CT,KAAKT,SAAS,CAACyG,cAAc,M,iCAGtBxC,GACPxD,KAAKT,SAAS,CAAEyH,QAASxD,EACT4D,QAAQ,M,kCAGhBtB,GACR9F,KAAKT,SAAS,CACV6H,QAASpH,KAAKD,MAAMqH,W,+BAKlB,IAAD,OACG3I,EAAYuB,KAAKZ,MAAjBX,QAER,OAAIuB,KAAKD,MAAMP,SACJ,kBAAC,IAAD,CAAUS,MAAI,EAACC,GAAG,WAIzB,yBAAKlB,UAAWP,EAAQV,MACpB,yBAAKiB,UAAWP,EAAQ0B,UACxB,yBAAKnB,UAAWP,EAAQiK,IAAKhH,MAAO1B,KAAKD,MAAM4F,UAC3C,yBAAK3G,UAAWP,EAAQkK,YACpB,kBAAC,IAAD,CACIC,KAAK,MACL5J,UAAWP,EAAQoK,UACnB9H,QAASf,KAAKiG,mBAES,IAAzBjG,KAAKZ,MAAM8F,WAAmB,kBAAC,IAAD,CAC5B0D,KAAK,MACL5J,UAAWP,EAAQqK,WACnB/H,QAASf,KAAKkG,sBAK1B,kBAAC6C,EAAA,EAAD,CACIzJ,GAAIU,KAAKD,MAAMT,GACf4H,KAAMlH,KAAKD,MAAMmH,KACjBD,SAAUjH,KAAKD,MAAMkH,SACrB+B,QAAShJ,KAAKwG,YACdyC,aAAc,CACdC,SAAU,SACVC,WAAY,UAEZC,gBAAiB,CACjBF,SAAU,MACVC,WAAY,WAGZ,kBAAClK,EAAA,EAAD,CAAYD,UAAWP,EAAQ4K,YAAarJ,KAAKD,MAAMoH,yBAG3D,yBAAKnI,UAAWP,EAAQ6K,eACxB,0BAAMtK,UAAWP,EAAQ8K,MACM,IAAzBvJ,KAAKZ,MAAM8F,WAAmB,6BAC5B,kBAACsE,EAAA,EAAD,CACIlK,GAAG,UACHmK,MAAM,UACNpH,OAAO,QACPnD,QAAQ,WACRsJ,MAAOxI,KAAKD,MAAMiH,QAClBhI,UAAWP,EAAQiL,UACnBC,SAAU3J,KAAKqG,YACfuD,UAAW5J,KAAKsG,+BAEhBuD,WAAY,CACRC,aACA,kBAACC,EAAA,EAAD,CAAgBpL,SAAS,OACrB,kBAAC,IAAD,CACIoC,QAASf,KAAK4G,kBAO9B,yBAAK5H,UAAU,aACVgB,KAAKD,MAAMqH,QAAU,kBAAC,GAAD,CAASvE,WAAY7C,KAAK6C,eAKxD,kBAAC2G,EAAA,EAAD,CACIQ,UAAQ,EACR1K,GAAG,eACHmK,MAAM,QACNpH,OAAO,QACPnD,QAAQ,WACRsJ,MAAOxI,KAAKD,MAAMsF,aAClBrG,UAAWP,EAAQiL,UACnBC,SAAU3J,KAAKqG,cAEnB,6BACA,kBAACmD,EAAA,EAAD,CACIQ,UAAQ,EACR1K,GAAG,iBACHmK,MAAM,SACNpH,OAAO,QACPnD,QAAQ,WACRsJ,MAAOxI,KAAKD,MAAMuF,eAClBtG,UAAWP,EAAQiL,UACnBC,SAAU3J,KAAKqG,cAEnB,6BACA,kBAAC,IAAD,CAAyB4D,MAAOC,KAC5B,kBAACC,EAAA,EAAD,CACIH,UAAQ,EACR1K,GAAG,uBACHmK,MAAM,gBACNpH,OAAO,QACP+H,aAAa,WACb5I,OAAO,aACPgH,MAAOxI,KAAKD,MAAMwF,qBAClBvG,UAAWP,EAAQ4L,WACnBV,SAAU,SAAC7D,GAAD,OAAW,EAAKM,iBAAiBN,EAAO,4BAG1D,6BACA,kBAAC,IAAD,CAAyBmE,MAAOC,KAC5B,kBAACC,EAAA,EAAD,CACIH,UAAQ,EACR1K,GAAG,qBACHmK,MAAM,gBACNpH,OAAO,QACP+H,aAAa,WACb5I,OAAO,aACPgH,MAAOxI,KAAKD,MAAM0F,mBAClBzG,UAAWP,EAAQ4L,WACnBV,SAAU,SAAC7D,GAAD,OAAW,EAAKM,iBAAiBN,EAAO,0BAG1D,6BAE2B,IAAzB9F,KAAKZ,MAAM8F,WAAmB,kBAACoF,EAAA,EAAD,CAC5BhL,GAAG,aACHJ,QAAQ,YACRwF,MAAM,UACN1F,UAAWP,EAAQ8L,aACnBxJ,QAASf,KAAKmG,iBALc,aASL,IAAzBnG,KAAKZ,MAAM8F,WAAmB,kBAACoF,EAAA,EAAD,CAC5BhL,GAAG,eACHJ,QAAQ,YACRwF,MAAM,UACN1F,UAAWP,EAAQ8L,aACnBxJ,QAASf,KAAK2G,mBALc,eAWpC,kBAAC6D,EAAA,EAAD,CACIvB,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBjC,KAAMlH,KAAKD,MAAMiG,aACjByE,iBAAkB,IAClBzB,QAAShJ,KAAK6F,oBACdwB,QAAQ,4BACRqD,OACM,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,aAAW,QAAQnG,MAAM,UAAU3D,QAASf,KAAK6F,qBACxE,kBAAC,IAAD,CAAWiF,SAAS,kB,GArWvB9I,IAAMC,WA8WhBC,gBAvZA,SAAApE,GAAK,MAAK,CACrBqC,QAASrC,EAAMqE,OAAOhC,QACtBwI,WAAY,CACRhH,OAAQ,OACRG,gBAAiB,yBAErB+G,UAAW,CACPkC,WAAY,OACZlJ,UAAW,OACX6C,MAAO,QACP/F,SAAU,SAEdmK,WAAY,CACR5K,YAAa,OACb2D,UAAW,OACX6C,MAAO,QACP/F,SAAU,QACVqM,MAAO,KAEXX,WAAY,CACRzI,MAAO,QAEX0H,cAAe,GAIfC,KAAM,CACFnH,QAAS,UAEbsH,UAAW,CACP9H,MAAO,QAEX2I,aAAc,CACVU,MAAO,QACPpJ,UAAW,QAEfwH,WAAY,CACRjH,QAAStE,EAAMK,QAAQ,OAkXhB+D,CAAmB8C,I,wCC7Z5BkG,G,uKAEQ,IACEzM,EAAYuB,KAAKZ,MAAjBX,QAER,OACI,kBAAC,KAAD,CAAMyB,GAAG,kBACL,kBAACiL,GAAA,EAAD,CAAKzG,MAAM,UAAUmG,aAAW,MAAM7L,UAAWP,EAAQ2M,KACrD,kBAAC,KAAD,Y,GARSpJ,IAAMC,WAepBC,gBAvBA,SAAApE,GAAK,MAAK,CACrBsN,IAAK,CACDzM,SAAU,QACV0M,OAAQvN,EAAMK,QAAQ,GACtB6M,MAAOlN,EAAMK,QAAQ,OAmBd+D,CAAmBgJ,I,SC3B5BI,GAAK,IAAIC,KAAM,SACrBD,GAAGE,QAAQ,GAAGC,OAAO,CACjBlL,SAAU,sDAGP,IAAMmL,GAAU,uCAAG,WAAOrK,EAAMC,EAAQkE,EAAc/D,GAAnC,2BAAAkK,EAAA,6DAA+CzK,EAA/C,oCAAuD0K,EAAvD,SAChBN,GAAG/K,SAAS4H,IAAI,CAClB9G,KAAMA,EACNC,OAAQA,EACRkE,aAAcA,EACd/D,WAAYA,EACZP,QAASA,IANS,uBAQToK,GAAG/K,SAASsL,UAAUnE,MAAK,SAAUoE,GAC9C,OAAOA,KATW,mFAAH,4DAYVC,GAAiB,uCAAG,WAAOzM,EAAImB,GAAX,SAAAkL,EAAA,6DAC7BxI,QAAQC,IAAI3C,GADiB,SAEvB6K,GAAG/K,SAASyL,OAAO1M,EAAImB,GAASiH,MAAK,SAAUuE,GACjD,OAAIA,GAGF9I,QAAQC,IAAK,uBAFN8I,QAJgB,2CAAH,wDAiBjBC,GAAiB,uCAAG,WAAOC,GAAP,SAAAT,EAAA,sEACvBL,GAAG/K,SAAS8L,MAAM,MAAMC,OAAOF,GAAOlE,SADf,2CAAH,sDAYjBgE,GAAc,uCAAG,sBAAAP,EAAA,sEACbL,GAAG/K,SAASsL,UAAUnE,MAAK,SAAUoE,GAE9C,OAAOA,KACRS,OAAM,SAACrJ,GACN,OAAOC,QAAQC,IAAIF,MALG,mFAAH,qD,oBCmEZsJ,G,kDApGb,WAAYpN,GAAQ,IAAD,8BACjB,cAAMA,IAcR6F,kBAAoB,YACP,uCAAG,sBAAA0G,EAAA,sEACNO,KAAiBxE,MAAK,SAACoE,GAC3B,EAAKvM,SAAS,CAAEgB,SAAUuL,OAFhB,2CAAH,qDAKbrE,IArBmB,EAiCnBgF,cAjCmB,uCAiCH,WAAOnN,GAAP,SAAAqM,EAAA,sEACRQ,GAAkB7M,GADV,2CAjCG,wDAqCnBoN,iBArCmB,uCAqCA,WAAOrL,EAAMC,EAAQkE,EAAc/D,EAAYP,GAA/C,SAAAyK,EAAA,sEACXD,GAAWrK,EAAMC,EAAQkE,EAAc/D,EAAYP,GAASwG,MAAK,SAACoE,GACtE,EAAKvM,SAAS,CAAEgB,SAAUuL,OAFX,2CArCA,gEA2CnBa,cA3CmB,uCA2CH,WAAOrN,EAAGmB,GAAV,SAAAkL,EAAA,sEACRI,GAAkBzM,EAAImB,GAASiH,MAAK,SAACoE,GACzC,EAAKvM,SAAS,CAAEgB,SAAUuL,OAFd,2CA3CG,0DAgDnBc,oBAAsB,WAEpB,GADAzJ,QAAQC,IAAI,wBACoB,YAA5ByJ,aAAaC,WAYf,OADA3J,QAAQC,IAAI,qDAEZ,kBAAC2J,GAAA,EAAD,CAAUC,GAAI,EAAKjN,MAAMmH,MACvB,kBAAC+F,GAAA,EAAD,CACEvC,OACE,kBAACC,EAAA,EAAD,CAAYE,aAAW,QAAQnG,MAAM,UAAUkG,KAAK,QAAQ7J,QAAS,WAAO,EAAKxB,SAAS,CAAE2H,MAAM,MAChG,kBAAC,IAAD,CAAW4D,SAAS,cAH1B,cAbFoC,UAAUC,cAAcC,MAAM1F,MAAK,SAAA2F,GACjCA,EAAaC,iBAAiB,qBAAsB,CAClDC,KAAM,cACNC,IAAK,qBAEPrK,QAAQC,IAAI,wBACXmJ,OAAM,SAAArJ,GACPC,QAAQC,IAAIF,OAxDhB,EAAKnD,MAAQ,CACXQ,SAAU,GACV2E,UAAW,EACXgC,MAAM,GAER,EAAKzH,YAAc,EAAKA,YAAYK,KAAjB,gBACnB,EAAK2M,cAAgB,EAAKA,cAAc3M,KAAnB,gBACrB,EAAK4M,iBAAmB,EAAKA,iBAAiB5M,KAAtB,gBACxB,EAAK6M,cAAgB,EAAKA,cAAc7M,KAAnB,gBACrB,EAAKmI,YAAc,EAAKA,YAAYnI,KAAjB,gBACnB,EAAKmF,kBAAoB,EAAKA,kBAAkBnF,KAAvB,gBAZR,E,0DAyBjBE,KAAKT,SAAS,CAAE2F,UAAW,IAC3BlF,KAAKiF,sB,kCAGK3F,GACVU,KAAKT,SAAS,CAAE2F,UAAW5F,M,+BAgDnB,IAAD,OAEP,OACE,kBAAC,KAAD,KACE,yBAAKN,UAAU,OACb,kBAAC,IAAD,CAAOyO,KAAK,SAASC,UAAWlP,IAChC,kBAAC,IAAD,CAAOmP,OAAK,EAACF,KAAK,SAASG,OAAQ,SAACxO,GAAD,OAAW,kBAAC,EAAD,CAAcmB,SAAU,EAAKR,MAAMQ,SAAUd,YAAa,EAAKA,YAAasC,aAAc,EAAK6K,yBAC7I,kBAAC,IAAD,CAAOe,OAAK,EAACF,KAAK,SAASG,OAAQ,SAACxO,GAAD,OAAW,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAOuO,OAAK,EAACF,KAAK,iBAAiBG,OAAQ,SAACxO,GAAD,OAAW,kBAAC,GAAD,CAAY8F,UAAW,EAAKnF,MAAMmF,UACtB3E,SAAU,EAAKR,MAAMQ,SACrB0H,YAAa,EAAKA,YAClBE,IAAK,EAAKuE,iBACVxE,OAAQ,EAAKuE,cACbhE,cAAe,EAAKkE,yB,GA7F9E3K,IAAMC,WCDJ4L,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wBCVAnQ,GAAQoQ,aAAe,CAC3BxL,QAAS,CACNtB,QAAS,CACNuB,KAAM,WAETpB,UAAW,CACToB,KAAM,cAiBb,GAZAwL,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,KAAD,CAAkBtQ,MAAOA,IACvB,kBAAC,GAAD,QAGJuQ,SAASC,eAAe,SAMtB,kBAAmBpB,UAErBA,UAAUC,cAAcoB,SAAS,qBAAqB7G,MAAK,SAAS2F,GAClElK,QAAQC,IAAI,6BACZyJ,aAAa2B,mBAAkB,SAAAhL,GACd,YAAXA,EACFL,QAAQC,IAAI,WAEZD,QAAQC,IAAII,SAGf+I,OAAM,SAASvE,GAChB7E,QAAQC,IAAI4E,UAET,CAEL,IAAIyG,GAAWJ,SAASK,cAAc,KACtCD,GAASE,KAAO,iEAChBF,GAASG,YAAc,cACvBP,SAASQ,cAAc,WAAWC,YAAYL,O","file":"static/js/main.cdbbbfbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3fb9c233.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport headerLogo from '../logo.svg';\n//import IconButton from '@material-ui/core/IconButton';\n//import MenuIcon from '@material-ui/icons/Menu';\n//import AccountCircle from '@material-ui/icons/AccountCircle';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        textAlign: 'center'\n    },\n    logo: {\n        maxWidth: '2.5rem',\n    }\n}));\n\nexport default function AppHeader() {\n    const classes = useStyles();\n    // const [auth, setAuth] = React.useState(true);\n    // const [anchorEl, setAnchorEl] = React.useState(null);\n    // const open = Boolean(anchorEl);\n\n    // const handleChange = (event) => {\n    //     setAuth(event.target.checked);\n    // };\n\n    // const handleMenu = (event) => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n\n    // const handleClose = () => {\n    //     setAnchorEl(null);\n    // };\n\n    return (\n            <AppBar position=\"fixed\"> \n                <Toolbar>\n                    {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton> */}\n                    <img src={headerLogo} alt=\"logo\" className={classes.logo} />\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Xpire\n                    </Typography>\n                    <div></div>\n                    {/* {auth && (\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={open}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\n                            </Menu>\n                        </div>\n                    )} */}\n                </Toolbar>\n            </AppBar>\n    );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Redirect } from 'react-router';\nimport format from 'date-fns/format';\n\nconst styles = theme => ({\n    toolbar: theme.mixins.toolbar,\n    list: {\n        padding: '1rem',\n    },\n    listitemframe: {\n        margin: '0.6rem'\n    },\n    listitem: {\n        borderWidth: '0.1rem',\n        borderStyle: 'solid',\n        borderRadius: '0.5rem',\n        borderColor: theme.palette.primary.main\n    }\n});\n\nclass ProductsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleListItemClick = this.handleListItemClick.bind(this);\n        this.state = {\n            redirect: false,\n        }    \n    }\n\n    handleListItemClick = (id) => {\n        this.setState({redirect: true});\n        this.props.showProduct(id);\n    }\n\n    statusColor = (validDate) => {\n        var bestBeforeMilliSec = new Date(validDate) - new Date();\n        var bestBeforeDayCount = bestBeforeMilliSec/(1000*60*60*24); \n        \n        if (bestBeforeDayCount > 3) {\n            return '#C9DEBC';\n        } else if (bestBeforeDayCount > 0) {\n            return '#F4E132';\n        } else {\n            return '#F96523';\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        if (this.state.redirect) {\n            return <Redirect push to=\"/Xpire/Product\" />;\n        }\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.toolbar}/>\n                <List dense className={classes.list}>\n                    {this.props.products ? this.props.products.map((product) =>\n                        <div className={classes.listitemframe} key={product.id}>\n                            <ListItem className={classes.listitem} button onClick={() => this.handleListItemClick(product.id)}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        alt={`Avatar n°${product + 1}`}\n                                        src={product.img_url}\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary={`${product.name} (${product.amount})`} secondary={\n                                    <div>\n                                        <div>Gültig bis: {format(new Date(product.expireDate),\"dd.MM.yyyy\")}</div>\n                                        <div style={{\n                                            height: '0.5rem',\n                                            width: '100%',\n                                            marginTop: '0.3rem',\n                                            backgroundColor: this.statusColor(product.expireDate),\n                                        }}></div>\n                                </div>\n                                }/>\n                            </ListItem>\n                        </div>\n                    ) : null}\n                </List>\n                <button onClick={this.props.notification}>Notify me!</button>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(ProductsList);","import React, { useEffect } from \"react\";\nimport config from \"./config.json\";\nimport Quagga from \"quagga\";\n\nconst Scanner = props => {\n  const { onDetected } = props;\n\n  useEffect(() => {\n    Quagga.init(config, err => {\n      if (err) {\n        console.log(err, \"error msg\");\n      }\n      Quagga.start();\n      return () => {\n        Quagga.stop()\n      }\n    });\n\n    //detecting boxes on stream\n    Quagga.onProcessed(result => {\n      var drawingCtx = Quagga.canvas.ctx.overlay,\n        drawingCanvas = Quagga.canvas.dom.overlay;\n\n      if (result) {\n        if (result.boxes) {\n          drawingCtx.clearRect(\n            0,\n            0,\n            Number(drawingCanvas.getAttribute(\"width\")),\n            Number(drawingCanvas.getAttribute(\"height\"))\n          );\n          result.boxes\n            .filter(function(box) {\n              return box !== result.box;\n            })\n            .forEach(function(box) {\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\n                color: \"green\",\n                lineWidth: 2\n              });\n            });\n        }\n\n        if (result.box) {\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\n            color: \"#00F\",\n            lineWidth: 2\n          });\n        }\n\n        if (result.codeResult && result.codeResult.code) {\n          Quagga.ImageDebug.drawPath(\n            result.line,\n            { x: \"x\", y: \"y\" },\n            drawingCtx,\n            { color: \"red\", lineWidth: 3 }\n          );\n        }\n      }\n    });\n\n    Quagga.onDetected(detected);\n  }, []);\n\n  const detected = result => {\n    onDetected(result.codeResult.code);\n  };\n\n  return (\n    // If you do not specify a target,\n    // QuaggaJS would look for an element that matches\n    // the CSS selector #interactive.viewport\n    <div id=\"interactive\" className=\"viewport\" />\n  );\n};\n\nexport default Scanner;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport ArrowIcon from '@material-ui/icons/KeyboardBackspace';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Redirect } from 'react-router';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport BarcodeIcon from '@material-ui/icons/CropFree';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n//import Paper from '@material-ui/core/Paper';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Scanner from \"./Scanner\";\n\nconst styles = theme => ({\n    toolbar: theme.mixins.toolbar, \n    imgOverlay: {\n        height: '100%',\n        backgroundColor: \"hsla(0, 0%, 0%, 0.23)\"\n    }, \n    arrowIcon: {\n        marginLeft: \"16px\",\n        marginTop: \"10px\",\n        color: \"white\",\n        position: \"fixed\"\n    }, \n    deleteIcon: {\n        marginRight: \"16px\",\n        marginTop: \"10px\",\n        color: \"white\",\n        position: \"fixed\",\n        right: \"0\"\n    },\n    datePicker: {\n        width: '100%'\n    },\n    formContainer: {\n        //marginTop: \"208px\",\n        //backgroundColor: \"white\"\n    },\n    form: {\n        padding: '1.6rem'\n    },\n    textField: {\n        width: '100%'\n    },\n    submitButton: {\n        float: 'right',\n        marginTop: '1rem'\n    },\n    typography: {\n        padding: theme.spacing(2)\n    }\n});\n\nclass AddProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClickArrow = this.handleClickArrow.bind(this);\n        this.handleClickDelete = this.handleClickDelete.bind(this);\n        this.handleClickSave = this.handleClickSave.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.getProductInformationByBarcode = this.getProductInformationByBarcode.bind(this);\n        this.showErrorPopOver = this.showErrorPopOver.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleCloseSnackbar = this.handleCloseSnackbar.bind(this);\n        this.setBackgroundImg = this.setBackgroundImg.bind(this);\n        this.setDate = this.setDate.bind(this);\n        this.handleClickUpdate = this.handleClickUpdate.bind(this);\n        this.onDetected = this.onDetected.bind(this);\n        this.onStartScan = this.onStartScan.bind(this);\n        this.state = {\n            redirect: false,\n            product_name: \"\",\n            product_amount: \"\",\n            product_purchaseDate: \"\",\n            product_expireDate: \"\",\n            product_img_url: \"\",\n            imgStyle: {\n                //zIndex: \"-1\",\n                //width: \"100%\",\n                //position: \"fixed\",\n                height: '13rem',\n                backgroundImage: \"url(\" + this.props.products.img_url + \")\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center\",\n                backgroundSize: \"auto 100%\"\n            },\n            barcode: \"\",\n            anchorEl: {},\n            open: false,\n            openSnackbar: false,\n            id: 'simple-popover',\n            simple_popover_message: \"\",\n            result: null,\n            camera: false\n        }\n    }\n\n    componentDidMount = () => {\n        if (this.props.productID !== 0){\n            var product = this.props.products.find(e => e.id === this.props.productID);\n            this.setState({\n                product_name: product.name,\n                product_amount: product.amount,\n                product_purchaseDate: product.purchaseDate,\n                product_expireDate: product.expireDate,\n                product_img_url: product.img_url,\n                imgStyle: {\n                    ...this.state.imgStyle,\n                    backgroundImage: \"url(\" + product.img_url + \")\",\n                }\n            }) \n        }\n    }\n\n    setBackgroundImg(product_img_url){\n        this.setState({\n            imgStyle: {\n                ...this.state.imgStyle,\n                backgroundImage: \"url(\" + product_img_url + \")\",\n            },\n            product_img_url: product_img_url\n        })\n    }\n\n    showErrorPopOver(message,target){\n        this.setState({\n            open: true,\n            anchorEl: target,\n            simple_popover_message: message\n        })\n\n    }\n\n    handleClose() {\n        this.setState({\n            anchorEl: null,\n            open: false\n        })\n    };\n\n    handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        this.setState({openSnackbar: false})\n    };\n\n    getProductInformationByBarcode(event){\n        if(event.keyCode == 13){\n            var barcode = this.state.barcode;\n            if(barcode){\n            //check for valid barcode\n\n            //var searchResult = {};\n            if(barcode.length === 13 || barcode.length === 8) {\n                    fetch(\"https://world.openfoodfacts.org/api/v0/product/\"+barcode+\".json\")\n                    .then(res => res.json())\n                    .then((result) => {\n                        var product = result.product;\n                        //check if product found\n                        if(result.status === 1){\n                            if(product.product_name) {\n                                //this.props.update(product.product_name);\n                                this.setState({\n                                    product_name: product.product_name,\n                                })\n                                this.setBackgroundImg(product.image_url);\n                            } else {\n                                // throw error\n                                this.showErrorPopOver(\"Produktname nicht gefunden!\",event.currentTarget);\n                            }\n                            \n                        } else {\n                            // throw error\n                            this.showErrorPopOver(\"Das Produkt existiert nicht!\",event.currentTarget);\n                        }\n                    },\n                    (error) => {\n                        this.showErrorPopOver(\"Prüfe deine Internetverbindung!\",event.currentTarget);\n                    })\n            } else {\n                this.showErrorPopOver(\"Barcode nicht korrekt!\",event.currentTarget);\n            }\n            } else {\n                this.showErrorPopOver(\"Bitte Barcode eingeben!\",event.currentTarget);\n            }\n        }\n    }\n\n    handleClickArrow(event) {\n        this.setState({redirect: true});\n        this.props.refreshPage();\n    }\n\n    handleClickDelete(event) {\n        this.props.delete(this.props.productID);\n        this.setState({redirect: true});\n        this.props.refreshPage();\n    }\n\n    handleClickSave(event){\n        if(!this.state.product_purchaseDate){\n            this.setDate(new Date(), \"purchaseDate\");\n        }\n        if(!this.state.product_expireDate){\n            this.setDate(new Date(), \"expireDate\");\n        }\n        if (this.props.productID === 0 ){\n            this.props.add(this.state.product_name, this.state.product_amount, this.state.product_purchaseDate, this.state.product_expireDate, this.state.product_img_url);\n        }\n        this.setState({redirect: true});\n        this.props.refreshPage();\n    }\n\n    handleDateChange(event, id) {\n        this.setDate(event, id);   \n    }\n\n    async setDate(date, id){\n        const isoDate = date.toISOString().split('T')[0];\n        await this.setState({[id]: isoDate});  \n    }\n\n    handleInput(event) {\n        const value = event.target.value;\n        this.setState({\n            ...this.state,\n            [event.target.id]: value\n        })\n        \n    }\n\n    handleClickUpdate(event) {\n        var product = {\n            name: this.state.product_name,\n            amount: this.state.product_amount,\n            purchaseDate: this.state.product_purchaseDate,\n            expireDate: this.state.product_expireDate\n        }\n        this.props.productUpdate(this.props.productID, product);\n        this.setState({openSnackbar: true})\n    }\n\n    onDetected(result) {\n        this.setState({ barcode: result,\n                        camera: false })\n    }\n\n    onStartScan(event) {\n        this.setState({\n            camera: !this.state.camera\n        })\n    }\n    \n\n    render() {\n        const { classes } = this.props;\n\n        if (this.state.redirect) {\n            return <Redirect push to=\"/Xpire\" />;\n        }\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.toolbar}/>\n                <div className={classes.img} style={this.state.imgStyle}>\n                    <div className={classes.imgOverlay}>\n                        <ArrowIcon \n                            edge=\"end\"\n                            className={classes.arrowIcon}\n                            onClick={this.handleClickArrow}\n                        />\n                        { this.props.productID !== 0 && <DeleteIcon \n                            edge=\"end\"\n                            className={classes.deleteIcon}\n                            onClick={this.handleClickDelete}\n                        />}\n                    </div>\n                </div>\n        \n                <Popover\n                    id={this.state.id}\n                    open={this.state.open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose}\n                    anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                    }}\n                >\n                    <Typography className={classes.typography}>{this.state.simple_popover_message}</Typography>\n                </Popover>  \n                \n                <div className={classes.formContainer}>\n                <form className={classes.form}>\n                    { this.props.productID === 0 && <div>\n                        <TextField\n                            id=\"barcode\"\n                            label=\"Barcode\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            value={this.state.barcode}\n                            className={classes.textField}\n                            onChange={this.handleInput}\n                            onKeyDown={this.getProductInformationByBarcode} \n\n                            InputProps={{\n                                endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <BarcodeIcon \n                                        onClick={this.onStartScan}\n                                    />\n                                </InputAdornment>\n                                ),\n                            }}\n                        />\n\n                        <div className=\"container\">\n                            {this.state.camera && <Scanner onDetected={this.onDetected} />}\n                        </div>\n\n                    </div>}\n                    \n                    <TextField\n                        required\n                        id=\"product_name\"\n                        label=\"Titel\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        value={this.state.product_name}\n                        className={classes.textField}\n                        onChange={this.handleInput}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        id=\"product_amount\"\n                        label=\"Anzahl\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        value={this.state.product_amount}\n                        className={classes.textField}\n                        onChange={this.handleInput}\n                    />                           \n                    <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            required\n                            id=\"product_purchaseDate\"\n                            label=\"Eingekauft am\"\n                            margin=\"dense\"\n                            inputVariant=\"outlined\"\n                            format=\"dd.MM.yyyy\"\n                            value={this.state.product_purchaseDate} \n                            className={classes.datePicker}\n                            onChange={(event) => this.handleDateChange(event, \"product_purchaseDate\")}     \n                        />                      \n                    </MuiPickersUtilsProvider>                                        \n                    <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            required\n                            id=\"product_expireDate\"\n                            label=\"Gültig bis\"\n                            margin=\"dense\"\n                            inputVariant=\"outlined\"\n                            format=\"dd.MM.yyyy\"\n                            value={this.state.product_expireDate} \n                            className={classes.datePicker}\n                            onChange={(event) => this.handleDateChange(event, \"product_expireDate\")}\n                        />                      \n                    </MuiPickersUtilsProvider>\n                    <br />\n           \n                    { this.props.productID === 0 && <Button\n                        id=\"SaveButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submitButton}\n                        onClick={this.handleClickSave}>\n                        Speichern\n                    </Button>}\n\n                    { this.props.productID !== 0 && <Button\n                        id=\"UpdateButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submitButton}\n                        onClick={this.handleClickUpdate}>\n                        Ändern\n                    </Button>}\n                </form> \n                </div>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openSnackbar}\n                    autoHideDuration={6000}\n                    onClose={this.handleCloseSnackbar}\n                    message=\"Daten wurden geändert!\"\n                    action={\n                          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleCloseSnackbar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </IconButton>\n                      }\n                />                        \n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AddProduct);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link } from 'react-router-dom';\n\nconst styles = theme => ({\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(4),\n        right: theme.spacing(4),\n    },\n});\n\nclass FloatingButton extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Link to=\"/Xpire/Product\">\n                <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} >\n                    <AddIcon />\n                </Fab>\n            </Link>\n        );\n    }\n}\n\nexport default withStyles(styles)(FloatingButton);","import Dexie from 'dexie'\n\nconst db = new Dexie('Xpire');\ndb.version(1).stores({\n    products: \"++id,name,amount,purchaseDate,expireDate, img_url\"\n});\n\nexport const addProduct = async (name, amount, purchaseDate, expireDate, img_url=undefined) => {\n    await db.products.add({\n        name: name,\n        amount: amount,\n        purchaseDate: purchaseDate,\n        expireDate: expireDate,\n        img_url: img_url\n    });\n    return await db.products.toArray().then(function (arr) {\n        return arr;\n    });\n}\nexport const updateProductById = async (id, product) => {\n    console.log(product) //has to be one or multiple key(s) + value(s) according to database table attributes\n    await db.products.update(id, product).then(function (updated) {\n        if (updated)\n          return getAllProducts();\n        else\n          console.log (\"Nothing was updated\");\n          return getAllProducts();\n      });\n}\n\nexport const clearTable = async (tableName) => {\n    await db.table(tableName).clear().catch(() => {\n        console.log('scheise')\n    })\n}\n\nexport const deleteProductById = async (theId) => {\n    await db.products.where('id').equals(theId).delete()\n}\n\nexport const getProductById = async (id) => {\n    return await db.products.get(id).then(function (prod) {\n        return prod\n    }).catch((err) => {\n        return console.log(err)\n    })\n}\n\nexport const getAllProducts = async () => {\n    return await db.products.toArray().then(function (arr) {\n        // console.log(arr);\n        return arr;\n    }).catch((err) => {\n        return console.log(err)\n    })\n}\n\nexport const createDatabase = async () => { //use for debugging \n    const db = new Dexie('Xpire');\n    db.version(1).stores({\n        products: \"++id,name,amount,purchaseDate,expireDate, img_rl\"\n    });\n}","import React from 'react';\n//import IdbTest from './IdbTest'\nimport AppHeader from './components/AppHeader'\nimport ProductsList from './components/ProductsList';\nimport AddProduct from './components/AddProduct';\nimport FloatingButton from './components/FloatingButton';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'; \nimport { addProduct, deleteProductById, getAllProducts, updateProductById } from './Idb'\nimport { Collapse, IconButton } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      productID: 0,\n      open: true\n    }\n    this.showProduct = this.showProduct.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.addProductToList = this.addProductToList.bind(this);\n    this.updateProduct = this.updateProduct.bind(this);\n    this.refreshPage = this.refreshPage.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount = () => {\n    const fetch = async () => {\n      await getAllProducts().then((arr) => {\n        this.setState({ products: arr}); \n      })\n  }\n  fetch();\n  }\n\n  refreshPage() {\n    this.setState({ productID: 0 });\n    this.componentDidMount();\n  }\n\n  showProduct(id) {\n    this.setState({ productID: id });\n  }\n\n  deleteProduct = async (id) => {\n    await deleteProductById(id)\n  }\n\n  addProductToList = async (name, amount, purchaseDate, expireDate, img_url) => {\n    await addProduct(name, amount, purchaseDate, expireDate, img_url).then((arr) => {\n      this.setState({ products: arr });\n    })\n  }\n\n  updateProduct = async (id,product) => {\n    await updateProductById(id, product).then((arr) => {\n      this.setState({ products: arr });\n    })\n  }\n  displayNotification = () => {\n    console.log(\"sending Notification\")\n    if (Notification.permission === \"granted\") {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.showNotification('XPIRE Notification', {\n          body: 'Buzz! Buzz!',\n          tag: 'vibration-sample'\n        });\n        console.log(\"Notification sent\")\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      console.log(\"Please allow Notifications or exit Incognito Mode\")\n      return(\n      <Collapse in={this.state.open}>\n        <Alert\n          action={\n            <IconButton aria-label=\"close\" color=\"inherit\" size=\"small\" onClick={() => {this.setState({ open: false });}} >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n        >\n          Close me!\n        </Alert>\n      </Collapse>\n      );\n    }\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\"> \n          <Route path=\"/Xpire\" component={AppHeader} />\n          <Route exact path=\"/Xpire\" render={(props) => <ProductsList products={this.state.products} showProduct={this.showProduct} notification={this.displayNotification}/>} />\n          <Route exact path=\"/Xpire\" render={(props) => <FloatingButton />} />\n          <Route exact path=\"/Xpire/Product\" render={(props) => <AddProduct productID={this.state.productID}\n                                                                            products={this.state.products} \n                                                                            refreshPage={this.refreshPage} \n                                                                            add={this.addProductToList} \n                                                                            delete={this.deleteProduct} \n                                                                            productUpdate={this.updateProduct}/>} \n                                                                />\n        </div>\n      </Router>\n    );\n\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// Color theme for whole app\nconst theme = createMuiTheme({\n  palette: {\n     primary: {\n        main: '#C9DEBC',\n     },\n     secondary: {\n       main: '#F96523',\n     },\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif ('serviceWorker' in navigator) {\n  \n  navigator.serviceWorker.register('service-worker.js').then(function(registration) {\n    console.log(\"service worker registered\");\n    Notification.requestPermission(result => {\n      if (result === 'granted') {\n        console.log(\"Granted\")\n      } else {\n        console.log(result)\n      }\n    });\n  }).catch(function(error) {\n    console.log(error)\n  });\n} else {\n  // Der verwendete Browser unterstützt Service Worker nicht.\n  var aElement = document.createElement('a');\n  aElement.href = 'http://www.chromium.org/blink/serviceworker/service-worker-faq';\n  aElement.textContent = 'unavailable';\n  document.querySelector('#status').appendChild(aElement);\n}"],"sourceRoot":""}