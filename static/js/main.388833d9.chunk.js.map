{"version":3,"sources":["logo.svg","Idb.js","components/AppHeader.js","components/ProductsList.js","components/Scanner.js","components/AddProduct.js","components/FloatingButton.js","App.js","index.js"],"names":["module","exports","db","Dexie","version","stores","products","addProduct","name","amount","purchaseDate","expireDate","a","img_url","undefined","add","toArray","then","arr","updateProductById","id","product","console","log","update","updated","getAllProducts","clearTable","tableName","table","clear","catch","deleteProductById","theId","where","equals","delete","err","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","logo","maxWidth","Transition","React","forwardRef","props","ref","Slide","direction","AppHeader","classes","useState","openDialog","setOpenDialog","AppBar","position","Toolbar","src","headerLogo","alt","className","Typography","variant","fontSize","onClick","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","color","refreshPage","ProductsList","handleListItemClick","setState","redirect","showProduct","statusColor","validDate","bestBeforeDayCount","Date","bind","state","alertOpen","alertText","this","push","to","toolbar","Collapse","in","Alert","severity","action","IconButton","aria-label","size","List","dense","list","map","listitemframe","key","ListItem","listitem","button","ListItemAvatar","Avatar","ListItemText","primary","secondary","format","style","height","width","marginTop","backgroundColor","Component","withStyles","mixins","padding","margin","borderWidth","borderStyle","borderRadius","borderColor","palette","main","Scanner","onDetected","useEffect","Quagga","init","config","start","stop","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","Number","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","lineWidth","codeResult","code","line","detected","AddProduct","componentDidMount","productID","find","e","product_name","product_amount","product_purchaseDate","product_expireDate","product_img_url","imgStyle","backgroundImage","handleCloseSnackbar","event","reason","openSnackbar","formatPurchaseDate","handleClickArrow","handleClickDelete","handleClickSave","handleDateChange","handleInput","getProductInformationByBarcode","showErrorPopOver","handleClose","setBackgroundImg","setDate","handleClickUpdate","onStartScan","backgroundRepeat","backgroundPosition","backgroundSize","barcode","anchorEl","simple_popover_message","camera","message","target","keyCode","length","fetch","res","json","status","image_url","currentTarget","error","string","toISOString","split","date","isoDate","value","productUpdate","img","imgOverlay","edge","arrowIcon","deleteIcon","Popover","anchorOrigin","vertical","horizontal","transformOrigin","typography","formContainer","form","TextField","label","textField","onChange","onKeyDown","InputProps","endAdornment","InputAdornment","required","FormControl","formControl","InputLabel","htmlFor","Select","native","inputProps","utils","DateFnsUtils","DatePicker","inputVariant","datePicker","submitButton","Snackbar","autoHideDuration","marginLeft","right","float","FloatingButton","Fab","fab","bottom","App","deleteProduct","addProductToList","dateForAlarm","getDate","setHours","scheduleNotification","getTime","updateProduct","onNotificationClick","window","text","timestamp","Notification","permission","navigator","serviceWorker","ready","registration","prototype","showNotification","body","tag","icon","actions","showTrigger","TimestampTrigger","displayAlert","displayNotification","now","productListComponentRef","current","createRef","path","render","exact","notification","createMuiTheme","ReactDOM","StrictMode","document","getElementById","register","requestPermission","aElement","createElement","href","textContent","querySelector","appendChild"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,kC,onBCErCC,EAAK,IAAIC,IAAM,SACrBD,EAAGE,QAAQ,GAAGC,OAAO,CACjBC,SAAU,sDAGP,IAAMC,EAAU,uCAAG,WAAOC,EAAMC,EAAQC,EAAcC,GAAnC,2BAAAC,EAAA,6DAA+CC,EAA/C,oCAAyDC,EAAzD,SAChBZ,EAAGI,SAASS,IAAI,CAClBP,KAAMA,EACNC,OAAQA,EACRC,aAAcA,EACdC,WAAYA,EACZE,QAASA,IANS,uBAQTX,EAAGI,SAASU,UAAUC,MAAK,SAAUC,GAC9C,OAAOA,KATW,mFAAH,4DAYVC,EAAiB,uCAAG,WAAOC,EAAIC,GAAX,SAAAT,EAAA,6DAC7BU,QAAQC,IAAIF,GADiB,SAEvBnB,EAAGI,SAASkB,OAAOJ,EAAIC,GAASJ,MAAK,SAAUQ,GACjD,OAAIA,GAGAH,QAAQC,IAAI,uBAFLG,OAJc,2CAAH,wDAWjBC,EAAU,uCAAG,WAAOC,GAAP,SAAAhB,EAAA,sEAChBV,EAAG2B,MAAMD,GAAWE,QAAQC,OAAM,WACpCT,QAAQC,IAAI,mCAFM,2CAAH,sDAMVS,EAAiB,uCAAG,WAAOC,GAAP,SAAArB,EAAA,sEACvBV,EAAGI,SAAS4B,MAAM,MAAMC,OAAOF,GAAOG,SADf,2CAAH,sDAYjBV,EAAc,uCAAG,sBAAAd,EAAA,sEACbV,EAAGI,SAASU,UAAUC,MAAK,SAAUC,GAE9C,OAAOA,KACRa,OAAM,SAACM,GACN,OAAOf,QAAQC,IAAIc,MALG,mFAAH,qD,+DChCrBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/BC,MAAO,CACHJ,SAAU,EACVK,UAAW,UAEfC,KAAM,CACFC,SAAU,cAIZC,EAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAGhC,SAASI,EAAUJ,GAC9B,IAAMK,EAAUpB,IADqB,EAEDa,IAAMQ,UAAS,GAFd,mBAE9BC,EAF8B,KAElBC,EAFkB,KAcrC,OACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,SACb,kBAACC,EAAA,EAAD,KAII,yBAAKC,IAAKC,IAAYC,IAAI,OAAOC,UAAWV,EAAQV,OACpD,kBAACqB,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWV,EAAQZ,OAA5C,SAGA,6BACI,kBAAC,IAAD,CACIyB,SAAS,QACTC,QAjBI,WACpBX,GAAc,OAmBN,kBAACY,EAAA,EAAD,CACIC,KAAMd,EACNe,oBAAqBzB,EACrB0B,aAAW,EACXC,QAAS,kBAAMhB,GAAc,IAC7BiB,kBAAgB,2BAChBC,mBAAiB,kCAEjB,kBAACC,EAAA,EAAD,CAAa5D,GAAG,4BAAhB,wBACA,kBAAC6D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAmB9D,GAAG,kCAAtB,uGAIJ,kBAAC+D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQZ,QAAS,kBAAMX,GAAc,IAAQwB,MAAM,WAAnD,UAGA,kBAACD,EAAA,EAAD,CAAQZ,QA5CP,WACjB7C,EAAW,YACXkC,GAAc,GACdR,EAAMiC,eAyCyCD,MAAM,aAArC,2B,oHCvDlBE,G,kDACF,WAAYlC,GAAQ,IAAD,8BACf,cAAMA,IASVmC,oBAAsB,SAACpE,GACnB,EAAKqE,SAAS,CAACC,UAAU,IACzB,EAAKrC,MAAMsC,YAAYvE,IAZR,EAenBwE,YAAc,SAACC,GACX,IACIC,GADqB,IAAIC,KAAKF,GAAa,IAAIE,MACP,MAE5C,OAAID,EAAqB,EACd,UACAA,EAAqB,EACrB,UAEA,WAtBX,EAAKN,oBAAsB,EAAKA,oBAAoBQ,KAAzB,gBAC3B,EAAKC,MAAQ,CACTP,UAAU,EACVQ,WAAW,EACXC,UAAW,IANA,E,qDA4BT,IAAD,OACGzC,EAAY0C,KAAK/C,MAAjBK,QAER,OAAI0C,KAAKH,MAAMP,SACJ,kBAAC,IAAD,CAAUW,MAAI,EAACC,GAAG,mBAIzB,yBAAKlC,UAAWV,EAAQjB,MACpB,yBAAK2B,UAAWV,EAAQ6C,UAExB,kBAACC,EAAA,EAAD,CAAUC,GAAIL,KAAKH,MAAMC,WACrB,kBAACQ,EAAA,EAAD,CACIC,SAAS,QACTC,OACA,kBAACC,EAAA,EAAD,CAAYC,aAAW,QAAQzB,MAAM,UAAU0B,KAAK,QAAQvC,QAAS,WAAO,EAAKiB,SAAS,CAAES,WAAW,MACnG,kBAAC,IAAD,CAAW3B,SAAS,cAIvB6B,KAAKH,MAAME,YAIpB,kBAACa,EAAA,EAAD,CAAMC,OAAK,EAAC7C,UAAWV,EAAQwD,MAC1Bd,KAAK/C,MAAM/C,SAAW8F,KAAK/C,MAAM/C,SAAS6G,KAAI,SAAC9F,GAAD,OAC3C,yBAAK+C,UAAWV,EAAQ0D,cAAeC,IAAKhG,EAAQD,IAChD,kBAACkG,EAAA,EAAD,CAAUlD,UAAWV,EAAQ6D,SAAUC,QAAM,EAAChD,QAAS,kBAAM,EAAKgB,oBAAoBnE,EAAQD,MAC1F,kBAACqG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIvD,IAAG,sBAAc9C,EAAU,GAC3B4C,IAAK5C,EAAQR,WAGrB,kBAAC8G,EAAA,EAAD,CAAcC,QAAO,UAAKvG,EAAQb,KAAb,aAAsBa,EAAQZ,OAA9B,KAAyCoH,UAC1D,6BACI,+CAAkBC,YAAO,IAAI/B,KAAK1E,EAAQV,YAAY,eACtD,yBAAKoH,MAAO,CACRC,OAAQ,SACRC,MAAO,OACPC,UAAW,SACXC,gBAAiB,EAAKvC,YAAYvE,EAAQV,uBAM9D,W,GA5EGwC,IAAMiF,WAmFlBC,gBAnGA,SAAA7F,GAAK,MAAK,CACrB+D,QAAS/D,EAAM8F,OAAO/B,QACtBW,KAAM,CACFqB,QAAS,QAEbnB,cAAe,CACXoB,OAAQ,UAEZjB,SAAU,CACNkB,YAAa,SACbC,YAAa,QACbC,aAAc,SACdC,YAAapG,EAAMqG,QAAQjB,QAAQkB,SAuF5BT,CAAmB9C,I,mLCpCnBwD,GAxEC,SAAA1F,GAAU,IAChB2F,EAAe3F,EAAf2F,WAERC,qBAAU,WACRC,KAAOC,KAAKC,IAAQ,SAAA/G,GAKlB,OAJIA,GACFf,QAAQC,IAAIc,EAAK,aAEnB6G,KAAOG,QACA,WACLH,KAAOI,WAKXJ,KAAOK,aAAY,SAAAC,GACjB,IAAIC,EAAaP,KAAOQ,OAAOC,IAAIC,QACjCC,EAAgBX,KAAOQ,OAAOI,IAAIF,QAEhCJ,IACEA,EAAOO,QACTN,EAAWO,UACT,EACA,EACAC,OAAOJ,EAAcK,aAAa,UAClCD,OAAOJ,EAAcK,aAAa,YAEpCV,EAAOO,MACJI,QAAO,SAASC,GACf,OAAOA,IAAQZ,EAAOY,OAEvBC,SAAQ,SAASD,GAChBlB,KAAOoB,WAAWC,SAASH,EAAK,CAAEI,EAAG,EAAGC,EAAG,GAAKhB,EAAY,CAC1DpE,MAAO,QACPqF,UAAW,QAKflB,EAAOY,KACTlB,KAAOoB,WAAWC,SAASf,EAAOY,IAAK,CAAEI,EAAG,EAAGC,EAAG,GAAKhB,EAAY,CACjEpE,MAAO,OACPqF,UAAW,IAIXlB,EAAOmB,YAAcnB,EAAOmB,WAAWC,MACzC1B,KAAOoB,WAAWC,SAChBf,EAAOqB,KACP,CAAEL,EAAG,IAAKC,EAAG,KACbhB,EACA,CAAEpE,MAAO,MAAOqF,UAAW,QAMnCxB,KAAOF,WAAW8B,KACjB,IAEH,IAAMA,EAAW,SAAAtB,GACfR,EAAWQ,EAAOmB,WAAWC,OAG/B,OAIE,yBAAKxJ,GAAG,cAAcgD,UAAU,c,8BCL9B2G,G,kDACF,WAAY1H,GAAQ,IAAD,8BACf,cAAMA,IA6CV2H,kBAAoB,WAChB,GAA6B,IAAzB,EAAK3H,MAAM4H,UAAgB,CAC3B,IAAI5J,EAAU,EAAKgC,MAAM/C,SAAS4K,MAAK,SAAAC,GAAC,OAAIA,EAAE/J,KAAO,EAAKiC,MAAM4H,aAChE,EAAKxF,SAAS,CACV2F,aAAc/J,EAAQb,KACtB6K,eAAgBhK,EAAQZ,OACxB6K,qBAAsBjK,EAAQX,aAC9B6K,mBAAoBlK,EAAQV,WAC5B6K,gBAAiBnK,EAAQR,QACzB4K,SAAS,6BACF,EAAKxF,MAAMwF,UADV,IAEJC,gBAAiB,OAASrK,EAAQR,QAAU,UAzDzC,EAyFnB8K,oBAAsB,SAACC,EAAOC,GACX,cAAXA,GAGJ,EAAKpG,SAAS,CAACqG,cAAc,KA3F7B,EAAKC,mBAAqB,EAAKA,mBAAmB/F,KAAxB,gBAC1B,EAAKgG,iBAAmB,EAAKA,iBAAiBhG,KAAtB,gBACxB,EAAKiG,kBAAoB,EAAKA,kBAAkBjG,KAAvB,gBACzB,EAAKkG,gBAAkB,EAAKA,gBAAgBlG,KAArB,gBACvB,EAAKmG,iBAAmB,EAAKA,iBAAiBnG,KAAtB,gBACxB,EAAKoG,YAAc,EAAKA,YAAYpG,KAAjB,gBACnB,EAAKqG,+BAAiC,EAAKA,+BAA+BrG,KAApC,gBACtC,EAAKsG,iBAAmB,EAAKA,iBAAiBtG,KAAtB,gBACxB,EAAKuG,YAAc,EAAKA,YAAYvG,KAAjB,gBACnB,EAAK2F,oBAAsB,EAAKA,oBAAoB3F,KAAzB,gBAC3B,EAAKwG,iBAAmB,EAAKA,iBAAiBxG,KAAtB,gBACxB,EAAKyG,QAAU,EAAKA,QAAQzG,KAAb,gBACf,EAAK0G,kBAAoB,EAAKA,kBAAkB1G,KAAvB,gBACzB,EAAKgD,WAAa,EAAKA,WAAWhD,KAAhB,gBAClB,EAAK2G,YAAc,EAAKA,YAAY3G,KAAjB,gBACnB,EAAKC,MAAQ,CACTP,UAAU,EACV0F,aAAc,GACdC,eAAgB,GAChBC,qBAAsB,CAAC,IAAIvF,MAC3BwF,mBAAoB,KACpBC,gBAAiB,GACjBC,SAAU,CAINzD,OAAQ,QACR0D,gBAAiB,OAAS,EAAKrI,MAAM/C,SAASO,QAAU,IACxD+L,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAgB,aAEpBC,QAAS,GACTC,SAAU,GACVtI,MAAM,EACNoH,cAAc,EACd1K,GAAI,iBACJ6L,uBAAwB,GACxBzD,OAAQ,KACR0D,QAAQ,EACRC,QAAS,IA1CE,E,6DA+DF3B,GACbpF,KAAKX,SAAS,CACVgG,SAAS,6BACFrF,KAAKH,MAAMwF,UADV,IAEJC,gBAAiB,OAASF,EAAkB,MAEhDA,gBAAiBA,M,uCAIR2B,EAAQC,GACrBhH,KAAKX,SAAS,CACVf,MAAM,EACNsI,SAAUI,EACVH,uBAAwBE,M,oCAM5B/G,KAAKX,SAAS,CACVuH,SAAU,KACVtI,MAAM,M,qDAWiBkH,GAAO,IAAD,OACjC,GAAoB,IAAjBA,EAAMyB,QAAc,CACnB,IAAIN,EAAU3G,KAAKH,MAAM8G,QACtBA,EAImB,KAAnBA,EAAQO,QAAoC,IAAnBP,EAAQO,OAC5BC,MAAM,kDAAkDR,EAAQ,SAC/D9L,MAAK,SAAAuM,GAAG,OAAIA,EAAIC,UAChBxM,MAAK,SAACuI,GACH,IAAInI,EAAUmI,EAAOnI,QAEA,IAAlBmI,EAAOkE,OACHrM,EAAQ+J,cAEP,EAAK3F,SAAS,CACV2F,aAAc/J,EAAQ+J,eAE1B,EAAKoB,iBAAiBnL,EAAQsM,YAG9B,EAAKrB,iBAAiB,8BAA8BV,EAAMgC,eAK9D,EAAKtB,iBAAiB,+BAA+BV,EAAMgC,kBAGnE,SAACC,GACG,EAAKvB,iBAAiB,qCAAkCV,EAAMgC,kBAGtExH,KAAKkG,iBAAiB,yBAAyBV,EAAMgC,eAGrDxH,KAAKkG,iBAAiB,0BAA0BV,EAAMgC,kB,uCAKjDhC,GACbxF,KAAKX,SAAS,CAACC,UAAU,IACzBU,KAAK/C,MAAMiC,gB,wCAGGsG,GACdxF,KAAK/C,MAAMjB,OAAOgE,KAAK/C,MAAM4H,WAC7B7E,KAAKX,SAAS,CAACC,UAAU,IACzBU,KAAK/C,MAAMiC,gB,sCAGCsG,GACRxF,KAAKH,MAAMmF,cAAiBhF,KAAKH,MAAMoF,gBAAmBjF,KAAKH,MAAMsF,oBAAuBnF,KAAKH,MAAMqF,sBAG1E,IAAzBlF,KAAK/C,MAAM4H,YACX7E,KAAKH,MAAMqF,qBAAuBlF,KAAK2F,mBAAmB3F,KAAKH,MAAMqF,sBACrElF,KAAK/C,MAAMtC,IAAIqF,KAAKH,MAAMmF,aAAchF,KAAKH,MAAMoF,eAAgBjF,KAAKH,MAAMqF,qBAAsBlF,KAAKH,MAAMsF,mBAAoBnF,KAAKH,MAAMuF,kBAElJpF,KAAKX,SAAS,CAACC,UAAU,IACzBU,KAAK/C,MAAMiC,eAPXc,KAAKX,SAAS,CAACqG,cAAc,EAAMqB,QAAS,+C,yCAWjCW,GAGf,OAFW,IAAI/H,KAAM+H,GACFC,cAAcC,MAAM,KAAK,K,uCAI/BpC,EAAOxK,GACpBgF,KAAKqG,QAAQb,EAAOxK,K,uEAGV6M,EAAM7M,G,8EACV8M,EAAUD,EAAKF,cAAcC,MAAM,KAAK,G,SACxC5H,KAAKX,SAAL,gBAAgBrE,EAAK8M,I,2IAGnBtC,GACR,IAAMuC,EAAQvC,EAAMwB,OAAOe,MAC3B/H,KAAKX,SAAL,6BACOW,KAAKH,OADZ,mBAEK2F,EAAMwB,OAAOhM,GAAK+M,O,wCAKTvC,GACd,IAAIvK,EAAU,CACVb,KAAM4F,KAAKH,MAAMmF,aACjB3K,OAAQ2F,KAAKH,MAAMoF,eACnB3K,aAAc0F,KAAKH,MAAMqF,qBACzB3K,WAAYyF,KAAKH,MAAMsF,oBAE3BnF,KAAK/C,MAAM+K,cAAchI,KAAK/C,MAAM4H,UAAW5J,GAC/C+E,KAAKX,SAAS,CAACqG,cAAc,EAAMqB,QAAS,gC,iCAGrC3D,GACPpD,KAAKX,SAAS,CAAEsH,QAASvD,EACT0D,QAAQ,M,kCAGhBtB,GACRxF,KAAKX,SAAS,CACVyH,QAAS9G,KAAKH,MAAMiH,W,+BAKlB,IAAD,OACGxJ,EAAY0C,KAAK/C,MAAjBK,QAER,OAAI0C,KAAKH,MAAMP,SACJ,kBAAC,IAAD,CAAUW,MAAI,EAACC,GAAG,WAIzB,yBAAKlC,UAAWV,EAAQjB,MACpB,yBAAK2B,UAAWV,EAAQ6C,UACxB,yBAAKnC,UAAWV,EAAQ2K,IAAKtG,MAAO3B,KAAKH,MAAMwF,UAC3C,yBAAKrH,UAAWV,EAAQ4K,YACpB,kBAAC,KAAD,CACIC,KAAK,MACLnK,UAAWV,EAAQ8K,UACnBhK,QAAS4B,KAAK4F,mBAES,IAAzB5F,KAAK/C,MAAM4H,WAAmB,kBAAC,KAAD,CAC5BsD,KAAK,MACLnK,UAAWV,EAAQ+K,WACnBjK,QAAS4B,KAAK6F,sBAK1B,kBAACyC,GAAA,EAAD,CACItN,GAAIgF,KAAKH,MAAM7E,GACfsD,KAAM0B,KAAKH,MAAMvB,KACjBsI,SAAU5G,KAAKH,MAAM+G,SACrBnI,QAASuB,KAAKmG,YACdoC,aAAc,CACdC,SAAU,SACVC,WAAY,UAEZC,gBAAiB,CACjBF,SAAU,MACVC,WAAY,WAGZ,kBAACxK,EAAA,EAAD,CAAYD,UAAWV,EAAQqL,YAAa3I,KAAKH,MAAMgH,yBAG3D,yBAAK7I,UAAWV,EAAQsL,eACxB,0BAAM5K,UAAWV,EAAQuL,MACM,IAAzB7I,KAAK/C,MAAM4H,WAAmB,6BAC5B,kBAACiE,GAAA,EAAD,CACI9N,GAAG,UACH+N,MAAM,UACN3G,OAAO,QACPlE,QAAQ,WACR6J,MAAO/H,KAAKH,MAAM8G,QAClB3I,UAAWV,EAAQ0L,UACnBC,SAAUjJ,KAAKgG,YACfkD,UAAWlJ,KAAKiG,+BAEhBkD,WAAY,CACRC,aACA,kBAACC,GAAA,EAAD,CAAgB1L,SAAS,OACrB,kBAAC,KAAD,CACIS,QAAS4B,KAAKuG,kBAO9B,yBAAKvI,UAAU,aACVgC,KAAKH,MAAMiH,QAAU,kBAAC,GAAD,CAASlE,WAAY5C,KAAK4C,eAKxD,kBAACkG,GAAA,EAAD,CACIQ,UAAQ,EACRtO,GAAG,eACH+N,MAAM,QACN3G,OAAO,QACPlE,QAAQ,WACR6J,MAAO/H,KAAKH,MAAMmF,aAClBhH,UAAWV,EAAQ0L,UACnBC,SAAUjJ,KAAKgG,cAEnB,6BACA,kBAACuD,GAAA,EAAD,CAAarL,QAAQ,WAAWkE,OAAO,QAAQkH,UAAQ,EAACtL,UAAWV,EAAQkM,aACvE,kBAACC,GAAA,EAAD,CAAYC,QAAQ,kBAApB,UACA,kBAACC,GAAA,EAAD,CACIC,QAAM,EACN7B,MAAO/H,KAAKH,MAAMoF,eAClBgE,SAAUjJ,KAAKgG,YACf+C,MAAM,SACNc,WAAY,CACRzP,KAAM,SACNY,GAAI,mBAGR,4BAAQ0F,aAAW,OAAOqH,MAAM,KAAhC,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,OAGR,6BACA,kBAAC,KAAD,CAAyB+B,MAAOC,MAC5B,kBAACC,GAAA,EAAD,CACIV,UAAQ,EACRtO,GAAG,uBACH+N,MAAM,gBACN3G,OAAO,QACP6H,aAAa,WACbvI,OAAO,aACPqG,MAAO/H,KAAKH,MAAMqF,qBAClBlH,UAAWV,EAAQ4M,WACnBjB,SAAU,SAACzD,GAAD,OAAW,EAAKO,iBAAiBP,EAAO,4BAG1D,6BACA,kBAAC,KAAD,CAAyBsE,MAAOC,MAC5B,kBAACC,GAAA,EAAD,CACIV,UAAQ,EACRtO,GAAG,qBACH+N,MAAM,gBACN3G,OAAO,QACP6H,aAAa,WACbvI,OAAO,aACPqG,MAAO/H,KAAKH,MAAMsF,mBAClBnH,UAAWV,EAAQ4M,WACnBjB,SAAU,SAACzD,GAAD,OAAW,EAAKO,iBAAiBP,EAAO,0BAG1D,6BAE2B,IAAzBxF,KAAK/C,MAAM4H,WAAmB,kBAAC7F,EAAA,EAAD,CAC5BhE,GAAG,aACHkD,QAAQ,YACRe,MAAM,UACNjB,UAAWV,EAAQ6M,aACnB/L,QAAS4B,KAAK8F,iBALc,aASL,IAAzB9F,KAAK/C,MAAM4H,WAAmB,kBAAC7F,EAAA,EAAD,CAC5BhE,GAAG,eACHkD,QAAQ,YACRe,MAAM,UACNjB,UAAWV,EAAQ6M,aACnB/L,QAAS4B,KAAKsG,mBALc,eAWpC,kBAAC8D,GAAA,EAAD,CACI7B,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBnK,KAAM0B,KAAKH,MAAM6F,aACjB2E,iBAAkB,IAClB5L,QAASuB,KAAKuF,oBACdwB,QAAS/G,KAAKH,MAAMkH,QACpBvG,OACM,kBAACC,EAAA,EAAD,CAAYE,KAAK,QAAQD,aAAW,QAAQzB,MAAM,UAAUb,QAAS4B,KAAKuF,qBACxE,kBAAC,IAAD,CAAWpH,SAAS,kB,GAvXvBpB,IAAMiF,WAgYhBC,gBA5aA,SAAA7F,GAAK,MAAK,CACrB+D,QAAS/D,EAAM8F,OAAO/B,QACtB+H,WAAY,CACRtG,OAAQ,OACRG,gBAAiB,yBAErBqG,UAAW,CACPkC,WAAY,OACZxI,UAAW,OACX7C,MAAO,QACPtB,SAAU,SAEd0K,WAAY,CACR7L,YAAa,OACbsF,UAAW,OACX7C,MAAO,QACPtB,SAAU,QACV4M,MAAO,KAEXL,WAAY,CACRrI,MAAO,QAEX+G,cAAe,GAIfC,KAAM,CACF1G,QAAS,UAEbqH,YAAa,CACT3H,MAAO,QAEXmH,UAAW,CACPnH,MAAO,QAEXsI,aAAc,CACVK,MAAO,QACP1I,UAAW,QAEf6G,WAAY,CACRxG,QAAS/F,EAAMK,QAAQ,OAoYhBwF,CAAmB0C,I,wCCrb5B8F,G,uKAEQ,IACEnN,EAAY0C,KAAK/C,MAAjBK,QAER,OACI,kBAAC,KAAD,CAAM4C,GAAG,kBACL,kBAACwK,GAAA,EAAD,CAAKzL,MAAM,UAAUyB,aAAW,MAAM1C,UAAWV,EAAQqN,KACrD,kBAAC,KAAD,Y,GARS5N,IAAMiF,WAepBC,gBAvBA,SAAA7F,GAAK,MAAK,CACrBuO,IAAK,CACDhN,SAAU,QACViN,OAAQxO,EAAMK,QAAQ,GACtB8N,MAAOnO,EAAMK,QAAQ,OAmBdwF,CAAmBwI,ICmHnBI,G,kDAjIb,WAAY5N,GAAQ,IAAD,8BACjB,cAAMA,IAiBR2H,kBAAoB,YACP,uCAAG,sBAAApK,EAAA,sEACNc,IAAiBT,MAAK,SAACC,GAC3B,EAAKuE,SAAS,CAAEnF,SAAUY,OAFhB,2CAAH,qDAKXqM,IAxBiB,EAoCnB2D,cApCmB,uCAoCH,WAAO9P,GAAP,SAAAR,EAAA,sEACRoB,EAAkBZ,GADV,2CApCG,wDAwCnB+P,iBAxCmB,uCAwCA,WAAO3Q,EAAMC,EAAQC,EAAcC,EAAYE,GAA/C,iBAAAD,EAAA,sEAEXL,EAAWC,EAAMC,EAAQC,EAAcC,EAAYE,GAASI,MAAK,SAACC,GACtE,EAAKuE,SAAS,CAAEnF,SAAUY,IAC1B+J,EAAY/J,EAAIA,EAAIoM,OAAS,GAAGlM,MAJjB,OAMjBE,QAAQC,IAAI,0BAA4B0J,IACpCmG,EAAe,IAAIrL,KAAKpF,IACf8L,QAAQ2E,EAAaC,UAAY,GAC9CD,EAAaE,SAAS,EAAG,EAAG,EAAG,GAC/B,EAAKC,qBAAqB/Q,EAAO,uBAAqB,eAAiByK,EAAWmG,EAAaI,WAC/FlQ,QAAQC,IAAI,iBAAmB6P,GAXd,2CAxCA,gEAsDnBK,cAtDmB,uCAsDH,WAAOrQ,EAAIC,GAAX,SAAAT,EAAA,sEACRO,EAAkBC,EAAIC,GAASJ,MAAK,SAACC,GACzC,EAAKuE,SAAS,CAAEnF,SAAUY,OAFd,2CAtDG,0DA2DnBwQ,oBAAsB,SAAC9F,GACrBtK,QAAQC,IAAI,wBACZD,QAAQC,IAAIqK,GACZ+F,OAAOjN,KAAK,yBAA0B,WA9DrB,EAgEnB6M,qBAAuB,SAACK,EAAMxQ,EAAIyQ,GACA,YAA5BC,aAAaC,WACfC,UAAUC,cAAcC,MAAMjR,MAAK,SAAAkR,GAC7B,gBAAiBL,aAAaM,WAChC9Q,QAAQC,IAAI,0CACZ4Q,EAAaE,iBAAiB,0CAA2C,CACvEC,KAAMV,EACNW,IAAKnR,EACLoR,KAAM,wCACNC,QAAS,CACP,CAAE7L,OAAQ,OAAQ9D,MAAO,YACzB,CAAE8D,OAAQ,SAAU9D,MAAO,aAE7B4P,YAAa,IAAIC,iBAAiBd,OAGpCvQ,QAAQC,IAAI,uCACZ4Q,EAAaE,iBAAiB,0CAA2C,CACvEC,KAAM,sDACNC,IAAK,aACLC,KAAM,iBAITvR,KAAKK,QAAQC,IAAI,sBACjBQ,OAAM,SAAAM,GAAG,OAAIf,QAAQC,IAAIc,MAE5B,EAAKuQ,aAAa,sDA3FH,EA8FnBC,oBAAsB,WACpBvR,QAAQC,IAAI,wBACZ,EAAKgQ,qBAAqB,+BAAgC,QAASxL,KAAK+M,MAAQ,KAChF,EAAKvB,qBAAqB,mBAAoB,QAASxL,KAAK+M,MAAQ,MAjGnD,EAoGnBF,aAAe,SAAChB,GACd,EAAKmB,wBAAwBC,QAAQvN,SAAS,CAC5CS,WAAW,EACXC,UAAWyL,KApGb,EAAKmB,wBAA0B5P,IAAM8P,YAErC,EAAKhN,MAAQ,CACX3F,SAAU,GACV2K,UAAW,EACXvG,MAAM,GAER,EAAKiB,YAAc,EAAKA,YAAYK,KAAjB,gBACnB,EAAKkL,cAAgB,EAAKA,cAAclL,KAAnB,gBACrB,EAAKmL,iBAAmB,EAAKA,iBAAiBnL,KAAtB,gBACxB,EAAKyL,cAAgB,EAAKA,cAAczL,KAAnB,gBACrB,EAAKV,YAAc,EAAKA,YAAYU,KAAjB,gBACnB,EAAKgF,kBAAoB,EAAKA,kBAAkBhF,KAAvB,gBAfR,E,0DA4BjBI,KAAKX,SAAS,CAAEwF,UAAW,IAC3B7E,KAAK4E,sB,kCAGK5J,GACVgF,KAAKX,SAAS,CAAEwF,UAAW7J,M,+BA0EnB,IAAD,OAEP,OACE,kBAAC,KAAD,KACE,yBAAKgD,UAAU,OACb,kBAAC,IAAD,CAAO8O,KAAK,SAASC,OAAS,SAAA9P,GAAK,OAAI,kBAACI,EAAD,CAAW6B,YAAa,EAAKA,iBACpE,kBAAC,IAAD,CAAO8N,OAAK,EAACF,KAAK,SAASC,OAAQ,SAAC9P,GAAD,OAAW,kBAAC,GAAD,CAAcC,IAAK,EAAKyP,wBAAyBzS,SAAU,EAAK2F,MAAM3F,SAAUqF,YAAa,EAAKA,YAAa0N,aAAc,EAAKR,yBAChL,kBAAC,IAAD,CAAOO,OAAK,EAACF,KAAK,SAASC,OAAQ,SAAC9P,GAAD,OAAW,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAO+P,OAAK,EAACF,KAAK,iBAAiBC,OAAQ,SAAC9P,GAAD,OAAW,kBAAC,GAAD,CAAY4H,UAAW,EAAKhF,MAAMgF,UACtF3K,SAAU,EAAK2F,MAAM3F,SACrBgF,YAAa,EAAKA,YAClBvE,IAAK,EAAKoQ,iBACV/O,OAAQ,EAAK8O,cACb9C,cAAe,EAAKqD,yB,GA1HdtO,IAAMiF,W,oBCNlB5F,GAAQ8Q,aAAe,CAC3BzK,QAAS,CACNjB,QAAS,CACNkB,KAAM,WAETjB,UAAW,CACTiB,KAAM,cAkBb,GAbAyK,IAASJ,OACP,kBAAC,IAAMK,WAAP,KACE,kBAAC,KAAD,CAAkBhR,MAAOA,IACvB,kBAAC,GAAD,QAGJiR,SAASC,eAAe,SAOtB,kBAAmB1B,WAAa,iBAAkBL,OAEpDK,UAAUC,cAAc0B,SAAS,qBAAqB1S,MAAK,SAASkR,GAClE7Q,QAAQC,IAAI,6BACZuQ,aAAa8B,mBAAkB,SAAApK,GACd,YAAXA,EACFlI,QAAQC,IAAI,WAEZD,QAAQC,IAAIiI,SAGfzH,OAAM,SAAS8L,GAChBvM,QAAQC,IAAIsM,UAET,CAEL,IAAIgG,GAAWJ,SAASK,cAAc,KACtCD,GAASE,KAAO,iEAChBF,GAASG,YAAc,cACvBP,SAASQ,cAAc,WAAWC,YAAYL,O","file":"static/js/main.388833d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3fb9c233.svg\";","import Dexie from 'dexie'\n\nconst db = new Dexie('Xpire');\ndb.version(1).stores({\n    products: \"++id,name,amount,purchaseDate,expireDate, img_url\"\n});\n\nexport const addProduct = async (name, amount, purchaseDate, expireDate, img_url = undefined) => {\n    await db.products.add({\n        name: name,\n        amount: amount,\n        purchaseDate: purchaseDate,\n        expireDate: expireDate,\n        img_url: img_url\n    });\n    return await db.products.toArray().then(function (arr) {\n        return arr;\n    });\n}\nexport const updateProductById = async (id, product) => {\n    console.log(product) //has to be one or multiple key(s) + value(s) according to database table attributes\n    await db.products.update(id, product).then(function (updated) {\n        if (updated)\n            return getAllProducts();\n        else\n            console.log(\"Nothing was updated\");\n        return getAllProducts();\n    });\n}\n\nexport const clearTable = async (tableName) => {\n    await db.table(tableName).clear().catch(() => {\n        console.log('Error occured on table clear')\n    })\n}\n\nexport const deleteProductById = async (theId) => {\n    await db.products.where('id').equals(theId).delete()\n}\n\nexport const getProductById = async (id) => {\n    return await db.products.get(id).then(function (prod) {\n        return prod\n    }).catch((err) => {\n        return console.log(err)\n    })\n}\n\nexport const getAllProducts = async () => {\n    return await db.products.toArray().then(function (arr) {\n        // console.log(arr);\n        return arr;\n    }).catch((err) => {\n        return console.log(err)\n    })\n}\n\nexport const createDatabase = async () => { //use for debugging \n    const db = new Dexie('Xpire');\n    db.version(1).stores({\n        products: \"++id,name,amount,purchaseDate,expireDate, img_url\"\n    });\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport headerLogo from '../logo.svg';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { clearTable } from '../Idb';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        textAlign: 'center'\n    },\n    logo: {\n        maxWidth: '2.5rem',\n    }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AppHeader(props) {\n    const classes = useStyles();\n    const [openDialog, setOpenDialog] = React.useState(false)\n\n    const handleDelete = () => {\n        clearTable('products')\n        setOpenDialog(false)\n        props.refreshPage()\n    }\n\n    const handleIconClick = () => {\n        setOpenDialog(true)\n    }\n\n    return (\n        <AppBar position=\"fixed\">\n            <Toolbar>\n                {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton> */}\n                <img src={headerLogo} alt=\"logo\" className={classes.logo} />\n                <Typography variant=\"h6\" className={classes.title}>\n                    Xpire\n                    </Typography>\n                <div>\n                    <DeleteForeverIcon\n                        fontSize='large'\n                        onClick={handleIconClick}\n                    />\n                </div>\n                <Dialog\n                    open={openDialog}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={() => setOpenDialog(false)}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">Delete all Products?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                            Are you sure you want to delete all of your products in Xpire? There's no turning back after that.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => setOpenDialog(false)} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={handleDelete} color=\"secondary\">\n                            Delete all Products\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Toolbar>\n        </AppBar>\n    );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Redirect } from 'react-router';\nimport format from 'date-fns/format';\nimport { Collapse, IconButton } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n    toolbar: theme.mixins.toolbar,\n    list: {\n        padding: '1rem',\n    },\n    listitemframe: {\n        margin: '0.6rem'\n    },\n    listitem: {\n        borderWidth: '0.1rem',\n        borderStyle: 'solid',\n        borderRadius: '0.5rem',\n        borderColor: theme.palette.primary.main\n    }\n});\n\nclass ProductsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleListItemClick = this.handleListItemClick.bind(this);\n        this.state = {\n            redirect: false,\n            alertOpen: false,\n            alertText: \"\"\n        }    \n    }\n\n    handleListItemClick = (id) => {\n        this.setState({redirect: true});\n        this.props.showProduct(id);\n    }\n\n    statusColor = (validDate) => {\n        var bestBeforeMilliSec = new Date(validDate) - new Date();\n        var bestBeforeDayCount = bestBeforeMilliSec/(1000*60*60*24); \n        \n        if (bestBeforeDayCount > 3) {\n            return '#C9DEBC';\n        } else if (bestBeforeDayCount > 0) {\n            return '#F4E132';\n        } else {\n            return '#F96523';\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        if (this.state.redirect) {\n            return <Redirect push to=\"/Xpire/Product\" />;\n        }\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.toolbar}/>\n\n                <Collapse in={this.state.alertOpen}>\n                    <Alert\n                        severity=\"error\"\n                        action={\n                        <IconButton aria-label=\"close\" color=\"inherit\" size=\"small\" onClick={() => {this.setState({ alertOpen: false });}} >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                        }\n                    >\n                        {this.state.alertText}\n                    </Alert>\n                </Collapse>\n\n                <List dense className={classes.list}>\n                    {this.props.products ? this.props.products.map((product) =>\n                        <div className={classes.listitemframe} key={product.id}>\n                            <ListItem className={classes.listitem} button onClick={() => this.handleListItemClick(product.id)}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        alt={`Avatar n°${product + 1}`}\n                                        src={product.img_url}\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary={`${product.name} (${product.amount})`} secondary={\n                                    <div>\n                                        <div>Gültig bis: {format(new Date(product.expireDate),\"dd.MM.yyyy\")}</div>\n                                        <div style={{\n                                            height: '0.5rem',\n                                            width: '100%',\n                                            marginTop: '0.3rem',\n                                            backgroundColor: this.statusColor(product.expireDate),\n                                        }}></div>\n                                </div>\n                                }/>\n                            </ListItem>\n                        </div>\n                    ) : null}\n                </List>\n                {/* <button onClick={this.props.notification}>Notify me!</button> */}\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(ProductsList);","import React, { useEffect } from \"react\";\nimport config from \"./config.json\";\nimport Quagga from \"quagga\";\n\nconst Scanner = props => {\n  const { onDetected } = props;\n\n  useEffect(() => {\n    Quagga.init(config, err => {\n      if (err) {\n        console.log(err, \"error msg\");\n      }\n      Quagga.start();\n      return () => {\n        Quagga.stop()\n      }\n    });\n\n    //detecting boxes on stream\n    Quagga.onProcessed(result => {\n      var drawingCtx = Quagga.canvas.ctx.overlay,\n        drawingCanvas = Quagga.canvas.dom.overlay;\n\n      if (result) {\n        if (result.boxes) {\n          drawingCtx.clearRect(\n            0,\n            0,\n            Number(drawingCanvas.getAttribute(\"width\")),\n            Number(drawingCanvas.getAttribute(\"height\"))\n          );\n          result.boxes\n            .filter(function(box) {\n              return box !== result.box;\n            })\n            .forEach(function(box) {\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\n                color: \"green\",\n                lineWidth: 2\n              });\n            });\n        }\n\n        if (result.box) {\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\n            color: \"#00F\",\n            lineWidth: 2\n          });\n        }\n\n        if (result.codeResult && result.codeResult.code) {\n          Quagga.ImageDebug.drawPath(\n            result.line,\n            { x: \"x\", y: \"y\" },\n            drawingCtx,\n            { color: \"red\", lineWidth: 3 }\n          );\n        }\n      }\n    });\n\n    Quagga.onDetected(detected);\n  }, []);\n\n  const detected = result => {\n    onDetected(result.codeResult.code);\n  };\n\n  return (\n    // If you do not specify a target,\n    // QuaggaJS would look for an element that matches\n    // the CSS selector #interactive.viewport\n    <div id=\"interactive\" className=\"viewport\" />\n  );\n};\n\nexport default Scanner;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport ArrowIcon from '@material-ui/icons/KeyboardBackspace';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Redirect } from 'react-router';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport BarcodeIcon from '@material-ui/icons/CropFree';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n//import Paper from '@material-ui/core/Paper';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Scanner from \"./Scanner\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst styles = theme => ({\n    toolbar: theme.mixins.toolbar, \n    imgOverlay: {\n        height: '100%',\n        backgroundColor: \"hsla(0, 0%, 0%, 0.23)\"\n    }, \n    arrowIcon: {\n        marginLeft: \"16px\",\n        marginTop: \"10px\",\n        color: \"white\",\n        position: \"fixed\"\n    }, \n    deleteIcon: {\n        marginRight: \"16px\",\n        marginTop: \"10px\",\n        color: \"white\",\n        position: \"fixed\",\n        right: \"0\"\n    },\n    datePicker: {\n        width: '100%'\n    },\n    formContainer: {\n        //marginTop: \"208px\",\n        //backgroundColor: \"white\"\n    },\n    form: {\n        padding: '1.6rem'\n    },\n    formControl: {\n        width: '100%'\n    },\n    textField: {\n        width: '100%'\n    },\n    submitButton: {\n        float: 'right',\n        marginTop: '1rem'\n    },\n    typography: {\n        padding: theme.spacing(2)\n    }\n});\n\nclass AddProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.formatPurchaseDate = this.formatPurchaseDate.bind(this);\n        this.handleClickArrow = this.handleClickArrow.bind(this);\n        this.handleClickDelete = this.handleClickDelete.bind(this);\n        this.handleClickSave = this.handleClickSave.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.getProductInformationByBarcode = this.getProductInformationByBarcode.bind(this);\n        this.showErrorPopOver = this.showErrorPopOver.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleCloseSnackbar = this.handleCloseSnackbar.bind(this);\n        this.setBackgroundImg = this.setBackgroundImg.bind(this);\n        this.setDate = this.setDate.bind(this);\n        this.handleClickUpdate = this.handleClickUpdate.bind(this);\n        this.onDetected = this.onDetected.bind(this);\n        this.onStartScan = this.onStartScan.bind(this);\n        this.state = {\n            redirect: false,\n            product_name: \"\",\n            product_amount: \"\",\n            product_purchaseDate: [new Date()],\n            product_expireDate: null,\n            product_img_url: \"\",\n            imgStyle: {\n                //zIndex: \"-1\",\n                //width: \"100%\",\n                //position: \"fixed\",\n                height: '13rem',\n                backgroundImage: \"url(\" + this.props.products.img_url + \")\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center\",\n                backgroundSize: \"auto 100%\"\n            },\n            barcode: \"\",\n            anchorEl: {},\n            open: false,\n            openSnackbar: false,\n            id: 'simple-popover',\n            simple_popover_message: \"\",\n            result: null,\n            camera: false,\n            message: \"\"\n        }\n    }\n\n    componentDidMount = () => {\n        if (this.props.productID !== 0){\n            var product = this.props.products.find(e => e.id === this.props.productID);\n            this.setState({\n                product_name: product.name,\n                product_amount: product.amount,\n                product_purchaseDate: product.purchaseDate,\n                product_expireDate: product.expireDate,\n                product_img_url: product.img_url,\n                imgStyle: {\n                    ...this.state.imgStyle,\n                    backgroundImage: \"url(\" + product.img_url + \")\",\n                }\n            }) \n        }\n    }\n\n    setBackgroundImg(product_img_url){\n        this.setState({\n            imgStyle: {\n                ...this.state.imgStyle,\n                backgroundImage: \"url(\" + product_img_url + \")\",\n            },\n            product_img_url: product_img_url\n        })\n    }\n\n    showErrorPopOver(message,target){\n        this.setState({\n            open: true,\n            anchorEl: target,\n            simple_popover_message: message\n        })\n\n    }\n\n    handleClose() {\n        this.setState({\n            anchorEl: null,\n            open: false\n        })\n    };\n\n    handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        this.setState({openSnackbar: false})\n    };\n\n    getProductInformationByBarcode(event){\n        if(event.keyCode == 13){\n            var barcode = this.state.barcode;\n            if(barcode){\n            //check for valid barcode\n\n            //var searchResult = {};\n            if(barcode.length === 13 || barcode.length === 8) {\n                    fetch(\"https://world.openfoodfacts.org/api/v0/product/\"+barcode+\".json\")\n                    .then(res => res.json())\n                    .then((result) => {\n                        var product = result.product;\n                        //check if product found\n                        if(result.status === 1){\n                            if(product.product_name) {\n                                //this.props.update(product.product_name);\n                                this.setState({\n                                    product_name: product.product_name,\n                                })\n                                this.setBackgroundImg(product.image_url);\n                            } else {\n                                // throw error\n                                this.showErrorPopOver(\"Produktname nicht gefunden!\",event.currentTarget);\n                            }\n                            \n                        } else {\n                            // throw error\n                            this.showErrorPopOver(\"Das Produkt existiert nicht!\",event.currentTarget);\n                        }\n                    },\n                    (error) => {\n                        this.showErrorPopOver(\"Prüfe deine Internetverbindung!\",event.currentTarget);\n                    })\n            } else {\n                this.showErrorPopOver(\"Barcode nicht korrekt!\",event.currentTarget);\n            }\n            } else {\n                this.showErrorPopOver(\"Bitte Barcode eingeben!\",event.currentTarget);\n            }\n        }\n    }\n\n    handleClickArrow(event) {\n        this.setState({redirect: true});\n        this.props.refreshPage();\n    }\n\n    handleClickDelete(event) {\n        this.props.delete(this.props.productID);\n        this.setState({redirect: true});\n        this.props.refreshPage();\n    }\n\n    handleClickSave(event){\n        if(!this.state.product_name || !this.state.product_amount || !this.state.product_expireDate || !this.state.product_purchaseDate){\n            this.setState({openSnackbar: true, message: \"Bitte die Pflichtfelder ausfüllen.\"})\n        }else{\n            if (this.props.productID === 0 ){\n                this.state.product_purchaseDate = this.formatPurchaseDate(this.state.product_purchaseDate);\n                this.props.add(this.state.product_name, this.state.product_amount, this.state.product_purchaseDate, this.state.product_expireDate, this.state.product_img_url);\n            }\n            this.setState({redirect: true});\n            this.props.refreshPage();\n         }       \n    }\n\n    formatPurchaseDate(string) {\n        var date = new Date (string);\n        var isoDate = date.toISOString().split('T')[0];\n        return isoDate;\n    }\n\n    handleDateChange(event, id) {\n        this.setDate(event, id);   \n    }\n\n    async setDate(date, id){\n        const isoDate = date.toISOString().split('T')[0];\n        await this.setState({[id]: isoDate});  \n    }\n\n    handleInput(event) {\n        const value = event.target.value;\n        this.setState({\n            ...this.state,\n            [event.target.id]: value\n        })\n        \n    }\n\n    handleClickUpdate(event) {\n        var product = {\n            name: this.state.product_name,\n            amount: this.state.product_amount,\n            purchaseDate: this.state.product_purchaseDate,\n            expireDate: this.state.product_expireDate\n        }\n        this.props.productUpdate(this.props.productID, product);\n        this.setState({openSnackbar: true, message: \"Daten wurden geändert!\"})\n    }\n\n    onDetected(result) {\n        this.setState({ barcode: result,\n                        camera: false })\n    }\n\n    onStartScan(event) {\n        this.setState({\n            camera: !this.state.camera\n        })\n    }\n    \n\n    render() {\n        const { classes } = this.props;\n\n        if (this.state.redirect) {\n            return <Redirect push to=\"/Xpire\" />;\n        }\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.toolbar}/>\n                <div className={classes.img} style={this.state.imgStyle}>\n                    <div className={classes.imgOverlay}>\n                        <ArrowIcon \n                            edge=\"end\"\n                            className={classes.arrowIcon}\n                            onClick={this.handleClickArrow}\n                        />\n                        { this.props.productID !== 0 && <DeleteIcon \n                            edge=\"end\"\n                            className={classes.deleteIcon}\n                            onClick={this.handleClickDelete}\n                        />}\n                    </div>\n                </div>\n        \n                <Popover\n                    id={this.state.id}\n                    open={this.state.open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose}\n                    anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                    }}\n                >\n                    <Typography className={classes.typography}>{this.state.simple_popover_message}</Typography>\n                </Popover>  \n                \n                <div className={classes.formContainer}>\n                <form className={classes.form}>\n                    { this.props.productID === 0 && <div>\n                        <TextField\n                            id=\"barcode\"\n                            label=\"Barcode\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            value={this.state.barcode}\n                            className={classes.textField}\n                            onChange={this.handleInput}\n                            onKeyDown={this.getProductInformationByBarcode} \n\n                            InputProps={{\n                                endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <BarcodeIcon \n                                        onClick={this.onStartScan}\n                                    />\n                                </InputAdornment>\n                                ),\n                            }}\n                        />\n\n                        <div className=\"container\">\n                            {this.state.camera && <Scanner onDetected={this.onDetected} />}\n                        </div>\n\n                    </div>}\n                    \n                    <TextField\n                        required\n                        id=\"product_name\"\n                        label=\"Titel\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        value={this.state.product_name}\n                        className={classes.textField}\n                        onChange={this.handleInput}\n                    />\n                    <br />\n                    <FormControl variant=\"outlined\" margin=\"dense\" required className={classes.formControl}>\n                        <InputLabel htmlFor=\"product_amount\">Anzahl</InputLabel> \n                        <Select\n                            native\n                            value={this.state.product_amount}\n                            onChange={this.handleInput}          \n                            label=\"Anzahl\"\n                            inputProps={{\n                                name: 'Anzahl',\n                                id: 'product_amount',\n                            }}\n                            >\n                            <option aria-label=\"None\" value=\"1\">1</option>  \n                            <option value={2}>2</option>\n                            <option value={3}>3</option>\n                            <option value={4}>4</option>\n                            <option value={5}>5</option>\n                            <option value={6}>6</option>\n                            <option value={7}>7</option>\n                        </Select>\n                    </FormControl>                          \n                    <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            required\n                            id=\"product_purchaseDate\"\n                            label=\"Eingekauft am\"\n                            margin=\"dense\"\n                            inputVariant=\"outlined\"\n                            format=\"dd.MM.yyyy\"\n                            value={this.state.product_purchaseDate} \n                            className={classes.datePicker}\n                            onChange={(event) => this.handleDateChange(event, \"product_purchaseDate\")}     \n                        />                      \n                    </MuiPickersUtilsProvider>                                        \n                    <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            required\n                            id=\"product_expireDate\"\n                            label=\"Gültig bis\"\n                            margin=\"dense\"\n                            inputVariant=\"outlined\"\n                            format=\"dd.MM.yyyy\"\n                            value={this.state.product_expireDate} \n                            className={classes.datePicker}\n                            onChange={(event) => this.handleDateChange(event, \"product_expireDate\")}\n                        />                      \n                    </MuiPickersUtilsProvider>\n                    <br />\n           \n                    { this.props.productID === 0 && <Button\n                        id=\"SaveButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submitButton}\n                        onClick={this.handleClickSave}>\n                        Speichern\n                    </Button>}\n\n                    { this.props.productID !== 0 && <Button\n                        id=\"UpdateButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submitButton}\n                        onClick={this.handleClickUpdate}>\n                        Ändern\n                    </Button>}\n                </form> \n                </div>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openSnackbar}\n                    autoHideDuration={6000}\n                    onClose={this.handleCloseSnackbar}\n                    message={this.state.message}    \n                    action={\n                          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleCloseSnackbar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </IconButton>\n                      }\n                />                        \n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AddProduct);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link } from 'react-router-dom';\n\nconst styles = theme => ({\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(4),\n        right: theme.spacing(4),\n    },\n});\n\nclass FloatingButton extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Link to=\"/Xpire/Product\">\n                <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} >\n                    <AddIcon />\n                </Fab>\n            </Link>\n        );\n    }\n}\n\nexport default withStyles(styles)(FloatingButton);","import React from 'react';\n//import IdbTest from './IdbTest'\nimport AppHeader from './components/AppHeader'\nimport ProductsList from './components/ProductsList';\nimport AddProduct from './components/AddProduct';\nimport FloatingButton from './components/FloatingButton';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport { addProduct, deleteProductById, getAllProducts, updateProductById } from './Idb'\nimport { Collapse, IconButton } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.productListComponentRef = React.createRef()\n\n    this.state = {\n      products: [],\n      productID: 0,\n      open: true\n    }\n    this.showProduct = this.showProduct.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.addProductToList = this.addProductToList.bind(this);\n    this.updateProduct = this.updateProduct.bind(this);\n    this.refreshPage = this.refreshPage.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount = () => {\n    const fetch = async () => {\n      await getAllProducts().then((arr) => {\n        this.setState({ products: arr });\n      })\n    }\n    fetch();\n  }\n\n  refreshPage() {\n    this.setState({ productID: 0 });\n    this.componentDidMount();\n  }\n\n  showProduct(id) {\n    this.setState({ productID: id });\n  }\n\n  deleteProduct = async (id) => {\n    await deleteProductById(id)\n  }\n\n  addProductToList = async (name, amount, purchaseDate, expireDate, img_url) => {\n    let productID\n    await addProduct(name, amount, purchaseDate, expireDate, img_url).then((arr) => {\n      this.setState({ products: arr });\n      productID = arr[arr.length - 1].id\n    })\n    console.log(\"Added Product with ID: \" + productID)\n    var dateForAlarm = new Date(expireDate)\n    dateForAlarm.setDate(dateForAlarm.getDate() - 1);\n    dateForAlarm.setHours(9, 0, 0, 0); // 9 o'clock on the day before expiration\n    this.scheduleNotification(name + \" läuft morgen ab!\", \"expireAlert:\" + productID, dateForAlarm.getTime());\n    console.log(\"scheduled for \" + dateForAlarm)\n  }\n\n  updateProduct = async (id, product) => {\n    await updateProductById(id, product).then((arr) => {\n      this.setState({ products: arr });\n    })\n  }\n  onNotificationClick = (event) => {\n    console.log(\"notification clicked\")\n    console.log(event)\n    window.open('http://www.mozilla.org', '_blank');\n  }\n  scheduleNotification = (text, id, timestamp) => {\n    if (Notification.permission === \"granted\") {\n      navigator.serviceWorker.ready.then(registration => {\n        if (\"showTrigger\" in Notification.prototype) { //origin trial feature\n          console.log(\"Notification Trigger feature supported\");\n          registration.showNotification('Xpire - manage your fridge and get rich', {\n            body: text,\n            tag: id,\n            icon: '/Xpire/static/media/logo.3fb9c233.svg',\n            actions: [\n              { action: 'show', title: 'Anzeigen' },\n              { action: 'remind', title: 'Erinnern' }\n            ], // TODO: event listener for onclick must be added somehow\n            showTrigger: new TimestampTrigger(timestamp) // eslint-disable-line no-undef\n          });\n        } else {\n          console.log(\"Notification Triggers not supported\")\n          registration.showNotification('Xpire - manage your fridge and get rich', {\n            body: 'Your Browser doesnt support scheduled notifications',\n            tag: 'no-support',\n            icon: 'logo.png'\n          });\n        }\n      })\n        .then(console.log(\"Notification sent\"))\n        .catch(err => console.log(err));\n    } else {\n      this.displayAlert(\"Please allow Notifications or exit Incognito Mode\");\n    }\n  }\n  displayNotification = () => {\n    console.log(\"sending Notification\")\n    this.scheduleNotification(\"a product is about to expire\", \"test1\", Date.now() + 2000);\n    this.scheduleNotification(\"another schimmel\", \"test2\", Date.now() + 10000);\n  }\n\n  displayAlert = (text) => {\n    this.productListComponentRef.current.setState({\n      alertOpen: true,\n      alertText: text\n    });\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route path=\"/Xpire\" render={(props => <AppHeader refreshPage={this.refreshPage}></AppHeader>)} />\n          <Route exact path=\"/Xpire\" render={(props) => <ProductsList ref={this.productListComponentRef} products={this.state.products} showProduct={this.showProduct} notification={this.displayNotification} />} />\n          <Route exact path=\"/Xpire\" render={(props) => <FloatingButton />} />\n          <Route exact path=\"/Xpire/Product\" render={(props) => <AddProduct productID={this.state.productID}\n            products={this.state.products}\n            refreshPage={this.refreshPage}\n            add={this.addProductToList}\n            delete={this.deleteProduct}\n            productUpdate={this.updateProduct} />}\n          />\n        </div>\n      </Router>\n    );\n\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// Color theme for whole app\nconst theme = createMuiTheme({\n  palette: {\n     primary: {\n        main: '#C9DEBC',\n     },\n     secondary: {\n       main: '#F96523',\n     },\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nif ('serviceWorker' in navigator && \"Notification\" in window) {\n  \n  navigator.serviceWorker.register('service-worker.js').then(function(registration) {\n    console.log(\"service worker registered\");\n    Notification.requestPermission(result => {\n      if (result === 'granted') {\n        console.log(\"Granted\")\n      } else {\n        console.log(result)\n      }\n    });\n  }).catch(function(error) {\n    console.log(error)\n  });\n} else {\n  // Der verwendete Browser unterstützt Service Worker nicht.\n  var aElement = document.createElement('a');\n  aElement.href = 'http://www.chromium.org/blink/serviceworker/service-worker-faq';\n  aElement.textContent = 'unavailable';\n  document.querySelector('#status').appendChild(aElement);\n}"],"sourceRoot":""}