{"version":3,"sources":["logo.svg","Idb.js","IdbTest.js","components/AppHeader.js","components/ProductsList.js","components/AddProduct.js","components/FloatingButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","db","Dexie","version","stores","products","addProduct","name","amount","purchaseDate","expireDate","a","imgUrl","undefined","add","toArray","then","arr","deleteProductById","theId","where","equals","delete","getAllProducts","catch","err","console","log","IdbTest","useStyles","makeStyles","theme","root","flexGrow","marginBottom","spacing","menuButton","marginRight","title","AppHeader","classes","React","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","aria-controls","aria-haspopup","onClick","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","ProductsList","props","handleListItemClick","setState","redirect","showProduct","statusColor","validDate","bestBeforeDayCount","Date","bind","state","this","push","to","List","dense","map","product","listitemframe","ListItem","listitem","button","ListItemAvatar","Avatar","alt","src","img_url","ListItemText","primary","secondary","format","style","height","width","marginTop","backgroundColor","Component","withStyles","padding","margin","borderWidth","borderStyle","borderRadius","borderColor","palette","main","AddProduct","handleClickArrow","handleClickDelete","handleClickSave","handleDateChange","handleInput","getProductInformationByBarcode","showErrorPopOver","setBackgroundImg","barcode","product_name","purchase_date","vailid_until","simple_popover_message","imgStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","message","target","length","fetch","res","json","result","status","image_url","error","reset","Object","keys","date","toISOString","split","value","img","imgOverlay","arrowIcon","deleteIcon","Popover","typography","form","TextField","label","textField","onChange","Button","submitButton","utils","DateFnsUtils","DatePicker","inputVariant","datePicker","float","marginLeft","FloatingButton","Fab","fab","bottom","right","App","componentDidMount","getInitialState","showProductObj","updateState","resetState","deleteProduct","addProductToList","find","e","path","component","exact","render","update","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","createMuiTheme","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0dd65c6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3fb9c233.svg\";","import Dexie from 'dexie'\n\nconst db = new Dexie('Xpire');\ndb.version(1).stores({\n    products: \"++id,name,amount,purchaseDate,expireDate, imgUrl\"\n});\n\nexport const addProduct = async (name, amount, purchaseDate, expireDate, imgUrl=undefined) => {\n    await db.products.add({\n        name: name,\n        amount: amount,\n        purchaseDate: purchaseDate,\n        expireDate: expireDate,\n        imgUrl: imgUrl\n    });\n    return await db.products.toArray().then(function (arr) {\n        return arr;\n    });\n}\nexport const updateProductById = async (id, product) => {\n    console.log(product) //has to be one or multiple key(s) + value(s) according to database table attributes\n    await db.products.update(id, product);\n}\n\nexport const clearTable = async (tableName) => {\n    await db.table(tableName).clear().catch(() => {\n        console.log('scheise')\n    })\n}\n\nexport const deleteProductById = async (theId) => {\n    await db.products.where('id').equals(theId).delete()\n}\n\nexport const getProductById = async (id) => {\n    return await db.products.get(id).then(function (prod) {\n        return prod\n    }).catch((err) => {\n        return console.log(err)\n    })\n}\n\nexport const getAllProducts = async () => {\n    return await db.products.toArray().then(function (arr) {\n        // console.log(arr);\n        return arr;\n    }).catch((err) => {\n        return console.log(err)\n    })\n}\n\nexport const createDatabase = async () => { //use for debugging \n    const db = new Dexie('Xpire');\n    db.version(1).stores({\n        products: \"++id,name,amount,purchaseDate,expireDate, imgUrl\"\n    });\n}","import React, { useState, useEffect } from 'react'\nimport { addProduct, deleteProductById, clearTable, getAllProducts, updateProductById } from './Idb'\n\nfunction IdbTest() {\n    //component for testing the IDB\n    const [allProducts, setProducts] = useState([]);\n\n    useEffect(() => {\n        const fetch = async () => {\n            await getAllProducts().then((arr) => {\n                setProducts(arr)\n            })\n        }\n        fetch();\n    })\n\n    const handleAdd = async () => {\n        await addProduct('Test', 'Test', 'Test', '22.02.2022').then((arr) => {\n            setProducts(arr);\n        })\n    }\n\n    const handleDelete = async (id) => {\n        await deleteProductById(id)\n    }\n\n    const handleClear = async () => {\n        await clearTable('products');\n        await getAllProducts().then((arr) => {\n            setProducts(arr)\n        })\n    }\n\n    const handleGetAll = async () => {\n        await getAllProducts().then((arr) => {\n            setProducts(arr)\n        })\n    }\n    const handleUpdate = async (id, newName) => {\n        await updateProductById(id, \n            {\n                name: newName,\n                expireDate: \"27.06.2020\"\n            }\n        ).then(function (updated) {\n            if (updated)\n              console.log (\"update success\");\n            else\n              console.log (\"Nothing was updated - error\");\n        }).catch(function (e) {\n              console.log(e)\n        });\n    }\n\n    return (\n        <div>\n            <button onClick={handleAdd}>Add Product</button>\n            <button onClick={handleClear}>Delete all Products</button>\n            <button onClick={handleGetAll}>Refresh Data</button>\n            <ul>\n                {allProducts ? allProducts.map((product) =>\n                    <li key={product.id}><span>Name: {product.name}</span><span> ID: {product.id} </span>\n                    <button onClick={() => handleDelete(product.id)}>Delete</button>\n                    <button onClick={() => handleUpdate(product.id, \"UpdateTest\")}></button></li>\n                ) : null}\n            </ul>\n        </div>\n    )\n}\n\nexport default IdbTest","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginBottom: theme.spacing(7)\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function AppHeader() {\n    const classes = useStyles();\n    const [auth, setAuth] = React.useState(true);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleChange = (event) => {\n        setAuth(event.target.checked);\n    };\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root}>\n\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Xpire\n                    </Typography>\n                    {auth && (\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={open}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\n                            </Menu>\n                        </div>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Redirect } from 'react-router';\nimport format from 'date-fns/format';\n\nconst styles = theme => ({\n    root: {\n        padding: '1rem',\n        marginTop: \"56px\"\n    },\n    listitemframe: {\n        margin: '0.6rem'\n    },\n    listitem: {\n        borderWidth: '0.1rem',\n        borderStyle: 'solid',\n        borderRadius: '0.5rem',\n        borderColor: theme.palette.primary.main\n    }\n});\n\nclass ProductsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleListItemClick = this.handleListItemClick.bind(this);\n        this.state = {\n            redirect: false,\n        }    \n    }\n\n    handleListItemClick = (id) => {\n        this.setState({redirect: true});\n        this.props.showProduct(id);\n    }\n\n    statusColor = (validDate) => {\n        var bestBeforeMilliSec = new Date(validDate) - new Date();\n        var bestBeforeDayCount = bestBeforeMilliSec/(1000*60*60*24); \n        \n        if (bestBeforeDayCount > 3) {\n            return '#C9DEBC';\n        } else if (bestBeforeDayCount > 0) {\n            return '#F4E132';\n        } else {\n            return '#F96523';\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        if (this.state.redirect) {\n            return <Redirect push to=\"/Xpire/Product\" />;\n        }\n\n        return (\n            <List dense className={classes.root}>\n                {this.props.products ? this.props.products.map((product) =>\n                    <div className={classes.listitemframe}>\n                        <ListItem className={classes.listitem} button onClick={() => this.handleListItemClick(product.id)}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    alt={`Avatar n°${product + 1}`}\n                                    src={product.img_url}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText primary={`${product.name} (${product.amount})`} secondary={\n                                <div>\n                                    <div>Gültig bis: {format(new Date(product.expireDate),\"dd.MM.yyyy\")}</div>\n                                    <div style={{\n                                        height: '0.5rem',\n                                        width: '100%',\n                                        marginTop: '0.3rem',\n                                        backgroundColor: this.statusColor(product.expireDate),\n                                    }}></div>\n                            </div>\n                            }/>\n                        </ListItem>\n                    </div>\n                ) : null}\n            </List>\n        );\n    }\n}\nexport default withStyles(styles)(ProductsList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport ArrowIcon from '@material-ui/icons/KeyboardBackspace';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Redirect } from 'react-router';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst styles = theme => ({\n    root: {\n        marginTop: \"56px\"\n    },\n    imgOverlay: {\n        height: '15rem',\n        backgroundColor: \"hsla(0, 0%, 0%, 0.23)\"\n    }, \n    arrowIcon: {\n        float: 'left',\n        marginLeft: \"16px\",\n        marginTop: \"10px\",\n        color: \"white\"\n    }, \n    datePicker: {\n        width: '100%'\n    },\n    deleteIcon: {\n        float: 'right',\n        marginRight: \"28px\",\n        marginTop: \"10px\",\n        color: \"white\"\n    },\n    form: {\n        margin: '1.6rem'\n    },\n    textField: {\n        width: '100%'\n    },\n    submitButton: {\n        float: 'right',\n        marginTop: '1rem'\n    },\n    typography: {\n        padding: theme.spacing(2)\n    }\n});\n\nclass AddProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClickArrow = this.handleClickArrow.bind(this);\n        this.handleClickDelete = this.handleClickDelete.bind(this);\n        this.handleClickSave = this.handleClickSave.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.getProductInformationByBarcode = this.getProductInformationByBarcode.bind(this);\n        this.showErrorPopOver = this.showErrorPopOver.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.setBackgroundImg = this.setBackgroundImg.bind(this);\n        this.state = {\n            redirect: false,\n            barcode: \"\",\n            product_name: this.props.product.name,\n            amount: this.props.product.amount,\n            purchase_date: this.props.product.purchase_date,\n            vailid_until: this.props.product.vailid_until,\n            img_url: this.props.product.img_url,\n            anchorEl: {},\n            open: false,\n            id: 'simple-popover',\n            simple_popover_message: \"\",\n            imgStyle: {\n                height: '15rem',\n                backgroundImage: \"url(\" + this.props.product.img_url + \")\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center\",\n                backgroundSize: \"auto 100%\"\n            }\n        }\n    }\n\n    setBackgroundImg(img_url){\n        this.setState({\n            imgStyle: {\n                ...this.state.imgStyle,\n                backgroundImage: \"url(\" + img_url + \")\",\n            },\n            img_url: img_url\n        })\n    }\n\n    showErrorPopOver(message,target){\n        this.setState({\n            open: true,\n            anchorEl: target,\n            simple_popover_message: message\n        })\n\n    }\n\n    handleClose() {\n        this.setState({\n            anchorEl: null,\n            open: false\n        })\n    };\n\n    getProductInformationByBarcode(event){\n        var barcode = this.state.barcode;\n        if(barcode){\n           //check for valid barcode\n\n           var searchResult = {};\n           if(barcode.length === 13 || barcode.length === 8) {\n                fetch(\"https://world.openfoodfacts.org/api/v0/product/\"+barcode+\".json\")\n                .then(res => res.json())\n                .then((result) => {\n                    var product = result.product;\n                    //check if product found\n                    if(result.status === 1){\n                        if(product.product_name) {\n                            //this.props.update(product.product_name);\n                            this.setState({\n                                product_name: product.product_name,\n                            })\n                            this.setBackgroundImg(product.image_url);\n                        } else {\n                            // throw error\n                            this.showErrorPopOver(\"Produktname nicht gefunden!\",event.currentTarget);\n                        }\n                        \n                    } else {\n                        // throw error\n                        this.showErrorPopOver(\"Das Produkt existiert nicht!\",event.currentTarget);\n                    }\n                },\n                (error) => {\n                    this.showErrorPopOver(\"Prüfe deine Internetverbindung!\",event.currentTarget);\n                })\n           } else {\n            this.showErrorPopOver(\"Barcode nicht korrekt!\",event.currentTarget);\n           }\n        } else {\n            this.showErrorPopOver(\"Bitte Barcode eingeben!\",event.currentTarget);\n        }\n    }\n\n    handleClickArrow(event) {\n        this.setState({redirect: true});\n        this.props.reset();\n    }\n\n    handleClickDelete(event) {\n        this.props.delete(this.props.product.id);\n        this.setState({redirect: true});\n        this.props.reset();\n    }\n\n    handleClickSave(event){\n        if (Object.keys(this.props.product).length == 0){\n            this.props.add(this.state.product_name, this.state.amount, this.state.purchase_date, this.state.vailid_until, this.state.img_url);\n        }\n        this.setState({redirect: true});\n        this.props.reset();\n    }\n\n    handleDateChange(event, id) {\n        console.log(id);\n        const date = event.toISOString().split('T')[0];       \n        this.setState({\n            ...this.state,\n            [id]: date\n        })\n        console.log(date);       \n    }\n\n    handleInput(event) {\n        const value = event.target.value;\n        this.setState({\n            ...this.state,\n            [event.target.id]: value\n        })\n        \n    }\n\n    render() {\n        const { classes } = this.props;\n\n        if (this.state.redirect) {\n            return <Redirect push to=\"/Xpire\" />;\n        }\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.img} style={this.state.imgStyle}>\n                    <div className={classes.imgOverlay}>\n                        <ArrowIcon \n                            edge=\"end\"\n                            className={classes.arrowIcon}\n                            onClick={this.handleClickArrow}\n                        />\n                        { !Object.keys(this.props.product).length == 0 && <DeleteIcon \n                            edge=\"end\"\n                            className={classes.deleteIcon}\n                            onClick={this.handleClickDelete}\n                        />}\n                    </div>\n                </div>\n\n\n                <Popover\n                    id={this.state.id}\n                    open={this.state.open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose}\n                    anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                    }}\n                >\n                    <Typography className={classes.typography}>{this.state.simple_popover_message}</Typography>\n                </Popover>  \n\n\n\n                <form className={classes.form}>\n                    { Object.keys(this.props.product).length === 0 && <div>\n                        <TextField\n                            id=\"barcode\"\n                            label=\"Barcode\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            value={this.state.barcode}\n                            className={classes.textField}\n                            onChange={this.handleInput}\n                        />\n                        <br />\n                        <Button\n                            id=\"SearchButton\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submitButton}\n                            onClick={this.getProductInformationByBarcode}>\n                            Suchen\n                        </Button>\n                        <br />\n                    </div>}\n                    \n                    <TextField\n                        id=\"product_name\"\n                        label=\"Titel\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        value={this.state.product_name}\n                        className={classes.textField}\n                        onChange={this.handleInput}\n                    />\n                    <br />\n                    <TextField\n                        id=\"amount\"\n                        label=\"Anzahl\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        value={this.state.amount}\n                        className={classes.textField}\n                        onChange={this.handleInput}\n                    />                           \n                    <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            id=\"purchase_date\"\n                            label=\"Eingekauft am\"\n                            margin=\"dense\"\n                            inputVariant=\"outlined\"\n                            format=\"dd.MM.yyyy\"\n                            value={this.state.purchase_date} \n                            className={classes.datePicker}\n                            onChange={(event) => this.handleDateChange(event, \"purchase_date\")}     \n                        />                      \n                    </MuiPickersUtilsProvider>                                        \n                    <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            id=\"vailid_until\"\n                            label=\"Gültig bis\"\n                            margin=\"dense\"\n                            inputVariant=\"outlined\"\n                            format=\"dd.MM.yyyy\"\n                            value={this.state.vailid_until} \n                            className={classes.datePicker}\n                            onChange={(event) => this.handleDateChange(event, \"vailid_until\")}\n                        />                      \n                    </MuiPickersUtilsProvider>\n                    <br />\n           \n                    <Button\n                        id=\"SaveButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submitButton}\n                        onClick={this.handleClickSave}>\n                        Speichern\n                    </Button>\n                </form>                           \n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AddProduct);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link } from 'react-router-dom';\n\nconst styles = theme => ({\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(4),\n        right: theme.spacing(4),\n    },\n});\n\nclass FloatingButton extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Link to=\"/Xpire/Product\">\n                <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} >\n                    <AddIcon />\n                </Fab>\n            </Link>\n        );\n    }\n}\n\nexport default withStyles(styles)(FloatingButton);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport IdbTest from './IdbTest'\nimport AppHeader from './components/AppHeader'\nimport ProductsList from './components/ProductsList';\nimport AddProduct from './components/AddProduct';\nimport FloatingButton from './components/FloatingButton';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'; \nimport { addProduct, deleteProductById, getAllProducts } from './Idb'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState();\n    this.showProduct = this.showProduct.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.resetState = this.resetState.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  componentDidMount = () => {\n    const fetch = async () => {\n      await getAllProducts().then((arr) => {\n        this.setState({ products: arr}); \n      })\n  }\n  fetch();\n  }\n\n  getInitialState = () => ({\n    products: [],\n    showProductObj: {}\n  })\n\n  // Check function if necessary!!\n  updateState = (value) => {\n    this.setState({ showProductObj : value}); \n  }\n\n  resetState = () => {\n     this.setState(this.getInitialState());\n     this.componentDidMount();\n  }\n\n  showProduct(id) {\n    var product = this.state.products.find(e => e.id === id);\n    this.setState({ showProductObj: product });\n  }\n\n  deleteProduct = async (id) => {\n    await deleteProductById(id)\n  }\n\n  addProductToList = async (name, amount, purchaseDate, expireDate, img_url) => {\n    await addProduct(name, amount, purchaseDate, expireDate, img_url).then((arr) => {\n      this.setState({ products: arr});\n    })\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\"> \n          <Route path=\"/Xpire\" component={AppHeader} />\n          <Route exact path=\"/Xpire\" render={(props) => <ProductsList products={this.state.products} showProduct={this.showProduct}/>} />\n          <Route exact path=\"/Xpire\" render={(props) => <FloatingButton />} />\n          <Route exact path=\"/Xpire/Product\" render={(props) => <AddProduct add={this.addProductToList} \n                                                                            product={this.state.showProductObj} \n                                                                            delete={this.deleteProduct} \n                                                                            update={this.updateState}\n                                                                            reset={this.resetState}/>} \n                                                                />\n        </div>\n      </Router>\n      \n    );\n\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// Color theme for whole app\nconst theme = createMuiTheme({\n  palette: {\n     primary: {\n        main: '#C9DEBC',\n     },\n     secondary: {\n       main: '#F96523',\n     },\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}