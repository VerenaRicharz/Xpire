{"version":3,"sources":["logo.svg","components/AppHeader.js","components/ProductsList.js","components/Scanner.js","components/AddProduct.js","components/FloatingButton.js","Idb.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","logo","maxWidth","AppHeader","classes","AppBar","position","Toolbar","src","headerLogo","alt","className","Typography","variant","ProductsList","props","handleListItemClick","id","setState","redirect","showProduct","statusColor","validDate","bestBeforeDayCount","Date","bind","state","alertOpen","alertText","this","push","to","toolbar","Collapse","in","Alert","severity","action","IconButton","aria-label","color","size","onClick","fontSize","List","dense","list","products","map","product","listitemframe","key","ListItem","listitem","button","ListItemAvatar","Avatar","img_url","ListItemText","primary","name","amount","secondary","format","expireDate","style","height","width","marginTop","backgroundColor","React","Component","withStyles","mixins","padding","margin","borderWidth","borderStyle","borderRadius","borderColor","palette","main","Scanner","onDetected","useEffect","Quagga","init","config","err","console","log","start","stop","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","Number","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","lineWidth","codeResult","code","line","detected","AddProduct","componentDidMount","productID","find","e","product_name","product_amount","product_purchaseDate","purchaseDate","product_expireDate","product_img_url","imgStyle","backgroundImage","handleCloseSnackbar","event","reason","openSnackbar","handleClickArrow","handleClickDelete","handleClickSave","handleDateChange","handleInput","getProductInformationByBarcode","showErrorPopOver","handleClose","setBackgroundImg","setDate","handleClickUpdate","onStartScan","backgroundRepeat","backgroundPosition","backgroundSize","barcode","anchorEl","open","simple_popover_message","camera","message","target","keyCode","length","fetch","then","res","json","status","image_url","currentTarget","error","refreshPage","delete","add","date","isoDate","toISOString","split","value","productUpdate","img","imgOverlay","edge","arrowIcon","deleteIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","typography","formContainer","form","TextField","label","textField","onChange","onKeyDown","InputProps","endAdornment","InputAdornment","required","utils","DateFnsUtils","DatePicker","inputVariant","datePicker","Button","submitButton","Snackbar","autoHideDuration","marginLeft","right","float","FloatingButton","Fab","fab","bottom","db","Dexie","version","stores","addProduct","a","undefined","toArray","arr","updateProductById","update","updated","getAllProducts","deleteProductById","theId","where","equals","catch","App","deleteProduct","addProductToList","dateForAlarm","getDate","setHours","scheduleNotification","getTime","updateProduct","onNotificationClick","window","text","timestamp","Notification","permission","navigator","serviceWorker","ready","registration","prototype","showNotification","body","tag","icon","actions","showTrigger","TimestampTrigger","displayAlert","displayNotification","now","productListComponentRef","current","createRef","path","component","exact","render","ref","notification","createMuiTheme","ReactDOM","StrictMode","document","getElementById","register","requestPermission","aElement","createElement","href","textContent","querySelector","appendChild"],"mappings":"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","file":"static/js/main.4c07bedd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3fb9c233.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport headerLogo from '../logo.svg';\n//import IconButton from '@material-ui/core/IconButton';\n//import MenuIcon from '@material-ui/icons/Menu';\n//import AccountCircle from '@material-ui/icons/AccountCircle';\n//import MenuItem from '@material-ui/core/MenuItem';\n//import Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        textAlign: 'center'\n    },\n    logo: {\n        maxWidth: '2.5rem',\n    }\n}));\n\nexport default function AppHeader() {\n    const classes = useStyles();\n    // const [auth, setAuth] = React.useState(true);\n    // const [anchorEl, setAnchorEl] = React.useState(null);\n    // const open = Boolean(anchorEl);\n\n    // const handleChange = (event) => {\n    //     setAuth(event.target.checked);\n    // };\n\n    // const handleMenu = (event) => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n\n    // const handleClose = () => {\n    //     setAnchorEl(null);\n    // };\n\n    return (\n            <AppBar position=\"fixed\"> \n                <Toolbar>\n                    {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton> */}\n                    <img src={headerLogo} alt=\"logo\" className={classes.logo} />\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Xpire\n                    </Typography>\n                    <div></div>\n                    {/* {auth && (\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={open}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\n                            </Menu>\n                        </div>\n                    )} */}\n                </Toolbar>\n            </AppBar>\n    );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Redirect } from 'react-router';\nimport format from 'date-fns/format';\nimport { Collapse, IconButton } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n    toolbar: theme.mixins.toolbar,\n    list: {\n        padding: '1rem',\n    },\n    listitemframe: {\n        margin: '0.6rem'\n    },\n    listitem: {\n        borderWidth: '0.1rem',\n        borderStyle: 'solid',\n        borderRadius: '0.5rem',\n        borderColor: theme.palette.primary.main\n    }\n});\n\nclass ProductsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleListItemClick = this.handleListItemClick.bind(this);\n        this.state = {\n            redirect: false,\n            alertOpen: false,\n            alertText: \"\"\n        }    \n    }\n\n    handleListItemClick = (id) => {\n        this.setState({redirect: true});\n        this.props.showProduct(id);\n    }\n\n    statusColor = (validDate) => {\n        var bestBeforeMilliSec = new Date(validDate) - new Date();\n        var bestBeforeDayCount = bestBeforeMilliSec/(1000*60*60*24); \n        \n        if (bestBeforeDayCount > 3) {\n            return '#C9DEBC';\n        } else if (bestBeforeDayCount > 0) {\n            return '#F4E132';\n        } else {\n            return '#F96523';\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        if (this.state.redirect) {\n            return <Redirect push to=\"/Xpire/Product\" />;\n        }\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.toolbar}/>\n\n                <Collapse in={this.state.alertOpen}>\n                    <Alert\n                        severity=\"error\"\n                        action={\n                        <IconButton aria-label=\"close\" color=\"inherit\" size=\"small\" onClick={() => {this.setState({ alertOpen: false });}} >\n                            <CloseIcon fontSize=\"inherit\" />\n                        </IconButton>\n                        }\n                    >\n                        {this.state.alertText}\n                    </Alert>\n                </Collapse>\n\n                <List dense className={classes.list}>\n                    {this.props.products ? this.props.products.map((product) =>\n                        <div className={classes.listitemframe} key={product.id}>\n                            <ListItem className={classes.listitem} button onClick={() => this.handleListItemClick(product.id)}>\n                                <ListItemAvatar>\n                                    <Avatar\n                                        alt={`Avatar n°${product + 1}`}\n                                        src={product.img_url}\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary={`${product.name} (${product.amount})`} secondary={\n                                    <div>\n                                        <div>Gültig bis: {format(new Date(product.expireDate),\"dd.MM.yyyy\")}</div>\n                                        <div style={{\n                                            height: '0.5rem',\n                                            width: '100%',\n                                            marginTop: '0.3rem',\n                                            backgroundColor: this.statusColor(product.expireDate),\n                                        }}></div>\n                                </div>\n                                }/>\n                            </ListItem>\n                        </div>\n                    ) : null}\n                </List>\n                {/* <button onClick={this.props.notification}>Notify me!</button> */}\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(ProductsList);","import React, { useEffect } from \"react\";\nimport config from \"./config.json\";\nimport Quagga from \"quagga\";\n\nconst Scanner = props => {\n  const { onDetected } = props;\n\n  useEffect(() => {\n    Quagga.init(config, err => {\n      if (err) {\n        console.log(err, \"error msg\");\n      }\n      Quagga.start();\n      return () => {\n        Quagga.stop()\n      }\n    });\n\n    //detecting boxes on stream\n    Quagga.onProcessed(result => {\n      var drawingCtx = Quagga.canvas.ctx.overlay,\n        drawingCanvas = Quagga.canvas.dom.overlay;\n\n      if (result) {\n        if (result.boxes) {\n          drawingCtx.clearRect(\n            0,\n            0,\n            Number(drawingCanvas.getAttribute(\"width\")),\n            Number(drawingCanvas.getAttribute(\"height\"))\n          );\n          result.boxes\n            .filter(function(box) {\n              return box !== result.box;\n            })\n            .forEach(function(box) {\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\n                color: \"green\",\n                lineWidth: 2\n              });\n            });\n        }\n\n        if (result.box) {\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\n            color: \"#00F\",\n            lineWidth: 2\n          });\n        }\n\n        if (result.codeResult && result.codeResult.code) {\n          Quagga.ImageDebug.drawPath(\n            result.line,\n            { x: \"x\", y: \"y\" },\n            drawingCtx,\n            { color: \"red\", lineWidth: 3 }\n          );\n        }\n      }\n    });\n\n    Quagga.onDetected(detected);\n  }, []);\n\n  const detected = result => {\n    onDetected(result.codeResult.code);\n  };\n\n  return (\n    // If you do not specify a target,\n    // QuaggaJS would look for an element that matches\n    // the CSS selector #interactive.viewport\n    <div id=\"interactive\" className=\"viewport\" />\n  );\n};\n\nexport default Scanner;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport ArrowIcon from '@material-ui/icons/KeyboardBackspace';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Redirect } from 'react-router';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport BarcodeIcon from '@material-ui/icons/CropFree';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n//import Paper from '@material-ui/core/Paper';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Scanner from \"./Scanner\";\n\nconst styles = theme => ({\n    toolbar: theme.mixins.toolbar, \n    imgOverlay: {\n        height: '100%',\n        backgroundColor: \"hsla(0, 0%, 0%, 0.23)\"\n    }, \n    arrowIcon: {\n        marginLeft: \"16px\",\n        marginTop: \"10px\",\n        color: \"white\",\n        position: \"fixed\"\n    }, \n    deleteIcon: {\n        marginRight: \"16px\",\n        marginTop: \"10px\",\n        color: \"white\",\n        position: \"fixed\",\n        right: \"0\"\n    },\n    datePicker: {\n        width: '100%'\n    },\n    formContainer: {\n        //marginTop: \"208px\",\n        //backgroundColor: \"white\"\n    },\n    form: {\n        padding: '1.6rem'\n    },\n    textField: {\n        width: '100%'\n    },\n    submitButton: {\n        float: 'right',\n        marginTop: '1rem'\n    },\n    typography: {\n        padding: theme.spacing(2)\n    }\n});\n\nclass AddProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClickArrow = this.handleClickArrow.bind(this);\n        this.handleClickDelete = this.handleClickDelete.bind(this);\n        this.handleClickSave = this.handleClickSave.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.getProductInformationByBarcode = this.getProductInformationByBarcode.bind(this);\n        this.showErrorPopOver = this.showErrorPopOver.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleCloseSnackbar = this.handleCloseSnackbar.bind(this);\n        this.setBackgroundImg = this.setBackgroundImg.bind(this);\n        this.setDate = this.setDate.bind(this);\n        this.handleClickUpdate = this.handleClickUpdate.bind(this);\n        this.onDetected = this.onDetected.bind(this);\n        this.onStartScan = this.onStartScan.bind(this);\n        this.state = {\n            redirect: false,\n            product_name: \"\",\n            product_amount: \"\",\n            product_purchaseDate: \"\",\n            product_expireDate: \"\",\n            product_img_url: \"\",\n            imgStyle: {\n                //zIndex: \"-1\",\n                //width: \"100%\",\n                //position: \"fixed\",\n                height: '13rem',\n                backgroundImage: \"url(\" + this.props.products.img_url + \")\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center\",\n                backgroundSize: \"auto 100%\"\n            },\n            barcode: \"\",\n            anchorEl: {},\n            open: false,\n            openSnackbar: false,\n            id: 'simple-popover',\n            simple_popover_message: \"\",\n            result: null,\n            camera: false\n        }\n    }\n\n    componentDidMount = () => {\n        if (this.props.productID !== 0){\n            var product = this.props.products.find(e => e.id === this.props.productID);\n            this.setState({\n                product_name: product.name,\n                product_amount: product.amount,\n                product_purchaseDate: product.purchaseDate,\n                product_expireDate: product.expireDate,\n                product_img_url: product.img_url,\n                imgStyle: {\n                    ...this.state.imgStyle,\n                    backgroundImage: \"url(\" + product.img_url + \")\",\n                }\n            }) \n        }\n    }\n\n    setBackgroundImg(product_img_url){\n        this.setState({\n            imgStyle: {\n                ...this.state.imgStyle,\n                backgroundImage: \"url(\" + product_img_url + \")\",\n            },\n            product_img_url: product_img_url\n        })\n    }\n\n    showErrorPopOver(message,target){\n        this.setState({\n            open: true,\n            anchorEl: target,\n            simple_popover_message: message\n        })\n\n    }\n\n    handleClose() {\n        this.setState({\n            anchorEl: null,\n            open: false\n        })\n    };\n\n    handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        this.setState({openSnackbar: false})\n    };\n\n    getProductInformationByBarcode(event){\n        if(event.keyCode == 13){\n            var barcode = this.state.barcode;\n            if(barcode){\n            //check for valid barcode\n\n            //var searchResult = {};\n            if(barcode.length === 13 || barcode.length === 8) {\n                    fetch(\"https://world.openfoodfacts.org/api/v0/product/\"+barcode+\".json\")\n                    .then(res => res.json())\n                    .then((result) => {\n                        var product = result.product;\n                        //check if product found\n                        if(result.status === 1){\n                            if(product.product_name) {\n                                //this.props.update(product.product_name);\n                                this.setState({\n                                    product_name: product.product_name,\n                                })\n                                this.setBackgroundImg(product.image_url);\n                            } else {\n                                // throw error\n                                this.showErrorPopOver(\"Produktname nicht gefunden!\",event.currentTarget);\n                            }\n                            \n                        } else {\n                            // throw error\n                            this.showErrorPopOver(\"Das Produkt existiert nicht!\",event.currentTarget);\n                        }\n                    },\n                    (error) => {\n                        this.showErrorPopOver(\"Prüfe deine Internetverbindung!\",event.currentTarget);\n                    })\n            } else {\n                this.showErrorPopOver(\"Barcode nicht korrekt!\",event.currentTarget);\n            }\n            } else {\n                this.showErrorPopOver(\"Bitte Barcode eingeben!\",event.currentTarget);\n            }\n        }\n    }\n\n    handleClickArrow(event) {\n        this.setState({redirect: true});\n        this.props.refreshPage();\n    }\n\n    handleClickDelete(event) {\n        this.props.delete(this.props.productID);\n        this.setState({redirect: true});\n        this.props.refreshPage();\n    }\n\n    handleClickSave(event){\n        if(!this.state.product_purchaseDate){\n            this.setDate(new Date(), \"purchaseDate\");\n        }\n        if(!this.state.product_expireDate){\n            this.setDate(new Date(), \"expireDate\");\n        }\n        if (this.props.productID === 0 ){\n            this.props.add(this.state.product_name, this.state.product_amount, this.state.product_purchaseDate, this.state.product_expireDate, this.state.product_img_url);\n        }\n        this.setState({redirect: true});\n        this.props.refreshPage();\n    }\n\n    handleDateChange(event, id) {\n        this.setDate(event, id);   \n    }\n\n    async setDate(date, id){\n        const isoDate = date.toISOString().split('T')[0];\n        await this.setState({[id]: isoDate});  \n    }\n\n    handleInput(event) {\n        const value = event.target.value;\n        this.setState({\n            ...this.state,\n            [event.target.id]: value\n        })\n        \n    }\n\n    handleClickUpdate(event) {\n        var product = {\n            name: this.state.product_name,\n            amount: this.state.product_amount,\n            purchaseDate: this.state.product_purchaseDate,\n            expireDate: this.state.product_expireDate\n        }\n        this.props.productUpdate(this.props.productID, product);\n        this.setState({openSnackbar: true})\n    }\n\n    onDetected(result) {\n        this.setState({ barcode: result,\n                        camera: false })\n    }\n\n    onStartScan(event) {\n        this.setState({\n            camera: !this.state.camera\n        })\n    }\n    \n\n    render() {\n        const { classes } = this.props;\n\n        if (this.state.redirect) {\n            return <Redirect push to=\"/Xpire\" />;\n        }\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.toolbar}/>\n                <div className={classes.img} style={this.state.imgStyle}>\n                    <div className={classes.imgOverlay}>\n                        <ArrowIcon \n                            edge=\"end\"\n                            className={classes.arrowIcon}\n                            onClick={this.handleClickArrow}\n                        />\n                        { this.props.productID !== 0 && <DeleteIcon \n                            edge=\"end\"\n                            className={classes.deleteIcon}\n                            onClick={this.handleClickDelete}\n                        />}\n                    </div>\n                </div>\n        \n                <Popover\n                    id={this.state.id}\n                    open={this.state.open}\n                    anchorEl={this.state.anchorEl}\n                    onClose={this.handleClose}\n                    anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                    }}\n                >\n                    <Typography className={classes.typography}>{this.state.simple_popover_message}</Typography>\n                </Popover>  \n                \n                <div className={classes.formContainer}>\n                <form className={classes.form}>\n                    { this.props.productID === 0 && <div>\n                        <TextField\n                            id=\"barcode\"\n                            label=\"Barcode\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            value={this.state.barcode}\n                            className={classes.textField}\n                            onChange={this.handleInput}\n                            onKeyDown={this.getProductInformationByBarcode} \n\n                            InputProps={{\n                                endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <BarcodeIcon \n                                        onClick={this.onStartScan}\n                                    />\n                                </InputAdornment>\n                                ),\n                            }}\n                        />\n\n                        <div className=\"container\">\n                            {this.state.camera && <Scanner onDetected={this.onDetected} />}\n                        </div>\n\n                    </div>}\n                    \n                    <TextField\n                        required\n                        id=\"product_name\"\n                        label=\"Titel\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        value={this.state.product_name}\n                        className={classes.textField}\n                        onChange={this.handleInput}\n                    />\n                    <br />\n                    <TextField\n                        required\n                        id=\"product_amount\"\n                        label=\"Anzahl\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        value={this.state.product_amount}\n                        className={classes.textField}\n                        onChange={this.handleInput}\n                    />                           \n                    <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            required\n                            id=\"product_purchaseDate\"\n                            label=\"Eingekauft am\"\n                            margin=\"dense\"\n                            inputVariant=\"outlined\"\n                            format=\"dd.MM.yyyy\"\n                            value={this.state.product_purchaseDate} \n                            className={classes.datePicker}\n                            onChange={(event) => this.handleDateChange(event, \"product_purchaseDate\")}     \n                        />                      \n                    </MuiPickersUtilsProvider>                                        \n                    <br />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            required\n                            id=\"product_expireDate\"\n                            label=\"Gültig bis\"\n                            margin=\"dense\"\n                            inputVariant=\"outlined\"\n                            format=\"dd.MM.yyyy\"\n                            value={this.state.product_expireDate} \n                            className={classes.datePicker}\n                            onChange={(event) => this.handleDateChange(event, \"product_expireDate\")}\n                        />                      \n                    </MuiPickersUtilsProvider>\n                    <br />\n           \n                    { this.props.productID === 0 && <Button\n                        id=\"SaveButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submitButton}\n                        onClick={this.handleClickSave}>\n                        Speichern\n                    </Button>}\n\n                    { this.props.productID !== 0 && <Button\n                        id=\"UpdateButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submitButton}\n                        onClick={this.handleClickUpdate}>\n                        Ändern\n                    </Button>}\n                </form> \n                </div>\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.openSnackbar}\n                    autoHideDuration={6000}\n                    onClose={this.handleCloseSnackbar}\n                    message=\"Daten wurden geändert!\"\n                    action={\n                          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleCloseSnackbar}>\n                            <CloseIcon fontSize=\"small\" />\n                          </IconButton>\n                      }\n                />                        \n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AddProduct);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link } from 'react-router-dom';\n\nconst styles = theme => ({\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(4),\n        right: theme.spacing(4),\n    },\n});\n\nclass FloatingButton extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Link to=\"/Xpire/Product\">\n                <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} >\n                    <AddIcon />\n                </Fab>\n            </Link>\n        );\n    }\n}\n\nexport default withStyles(styles)(FloatingButton);","import Dexie from 'dexie'\n\nconst db = new Dexie('Xpire');\ndb.version(1).stores({\n    products: \"++id,name,amount,purchaseDate,expireDate, img_url\"\n});\n\nexport const addProduct = async (name, amount, purchaseDate, expireDate, img_url=undefined) => {\n    await db.products.add({\n        name: name,\n        amount: amount,\n        purchaseDate: purchaseDate,\n        expireDate: expireDate,\n        img_url: img_url\n    });\n    return await db.products.toArray().then(function (arr) {\n        return arr;\n    });\n}\nexport const updateProductById = async (id, product) => {\n    console.log(product) //has to be one or multiple key(s) + value(s) according to database table attributes\n    await db.products.update(id, product).then(function (updated) {\n        if (updated)\n          return getAllProducts();\n        else\n          console.log (\"Nothing was updated\");\n          return getAllProducts();\n      });\n}\n\nexport const clearTable = async (tableName) => {\n    await db.table(tableName).clear().catch(() => {\n        console.log('scheise')\n    })\n}\n\nexport const deleteProductById = async (theId) => {\n    await db.products.where('id').equals(theId).delete()\n}\n\nexport const getProductById = async (id) => {\n    return await db.products.get(id).then(function (prod) {\n        return prod\n    }).catch((err) => {\n        return console.log(err)\n    })\n}\n\nexport const getAllProducts = async () => {\n    return await db.products.toArray().then(function (arr) {\n        // console.log(arr);\n        return arr;\n    }).catch((err) => {\n        return console.log(err)\n    })\n}\n\nexport const createDatabase = async () => { //use for debugging \n    const db = new Dexie('Xpire');\n    db.version(1).stores({\n        products: \"++id,name,amount,purchaseDate,expireDate, img_rl\"\n    });\n}","import React from 'react';\n//import IdbTest from './IdbTest'\nimport AppHeader from './components/AppHeader'\nimport ProductsList from './components/ProductsList';\nimport AddProduct from './components/AddProduct';\nimport FloatingButton from './components/FloatingButton';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'; \nimport { addProduct, deleteProductById, getAllProducts, updateProductById } from './Idb'\nimport { Collapse, IconButton } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.productListComponentRef = React.createRef()\n\n    this.state = {\n      products: [],\n      productID: 0,\n      open: true\n    }\n    this.showProduct = this.showProduct.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n    this.addProductToList = this.addProductToList.bind(this);\n    this.updateProduct = this.updateProduct.bind(this);\n    this.refreshPage = this.refreshPage.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount = () => {\n    const fetch = async () => {\n      await getAllProducts().then((arr) => {\n        this.setState({ products: arr}); \n      })\n  }\n  fetch();\n  }\n\n  refreshPage() {\n    this.setState({ productID: 0 });\n    this.componentDidMount();\n  }\n\n  showProduct(id) {\n    this.setState({ productID: id });\n  }\n\n  deleteProduct = async (id) => {\n    await deleteProductById(id)\n  }\n\n  addProductToList = async (name, amount, purchaseDate, expireDate, img_url) => {\n    let productID\n    await addProduct(name, amount, purchaseDate, expireDate, img_url).then((arr) => {\n      this.setState({ products: arr });\n      productID = arr[arr.length - 1].id\n    }) \n    console.log(\"Added Product with ID: \" + productID)\n    var dateForAlarm = new Date(expireDate)\n    dateForAlarm.setDate(dateForAlarm.getDate()-1);\n    dateForAlarm.setHours(9,0,0,0); // 9 o'clock on the day before expiration\n    this.scheduleNotification(name + \" läuft morgen ab!\", \"expireAlert:\"+productID, dateForAlarm.getTime());\n    console.log(\"scheduled for \" + dateForAlarm)\n  }\n\n  updateProduct = async (id,product) => {\n    await updateProductById(id, product).then((arr) => {\n      this.setState({ products: arr });\n    })\n  }\n  onNotificationClick = (event) => {\n    console.log(\"notification clicked\")\n    console.log(event)\n    window.open('http://www.mozilla.org', '_blank');\n  }\n  scheduleNotification = (text, id, timestamp) => {\n    if (Notification.permission === \"granted\") {\n      navigator.serviceWorker.ready.then(registration => {\n        if (\"showTrigger\" in Notification.prototype) { //origin trial feature\n          console.log(\"Notification Trigger feature supported\");\n          registration.showNotification('Xpire - manage your fridge and get rich', {\n            body: text,\n            tag: id,\n            icon: '/Xpire/static/media/logo.3fb9c233.svg',\n            actions: [  \n              {action: 'show', title: 'Anzeigen'},  \n              {action: 'remind', title: 'Erinnern'}\n            ], // TODO: event listener for onclick must be added somehow\n            showTrigger: new TimestampTrigger(timestamp) // eslint-disable-line no-undef\n          });\n        }else{\n          console.log(\"Notification Triggers not supported\")\n          registration.showNotification('Xpire - manage your fridge and get rich', {\n            body: 'Your Browser doesnt support scheduled notifications',\n            tag: 'no-support',\n            icon: 'logo.png'\n          });\n        }\n      })\n      .then(console.log(\"Notification sent\"))\n      .catch(err => console.log(err));\n    }else {\n      this.displayAlert(\"Please allow Notifications or exit Incognito Mode\");\n    }\n  }\n  displayNotification = () => {\n    console.log(\"sending Notification\")\n    this.scheduleNotification(\"a product is about to expire\", \"test1\", Date.now() + 2000);\n    this.scheduleNotification(\"another schimmel\", \"test2\", Date.now() + 10000);\n  }\n\n  displayAlert = (text) => {\n    this.productListComponentRef.current.setState({\n      alertOpen: true, \n      alertText: text\n    });\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\"> \n          <Route path=\"/Xpire\" component={AppHeader} />\n          <Route exact path=\"/Xpire\" render={(props) => <ProductsList ref= {this.productListComponentRef} products={this.state.products} showProduct={this.showProduct} notification={this.displayNotification}/>} />\n          <Route exact path=\"/Xpire\" render={(props) => <FloatingButton />} />\n          <Route exact path=\"/Xpire/Product\" render={(props) => <AddProduct productID={this.state.productID}\n                                                                            products={this.state.products} \n                                                                            refreshPage={this.refreshPage} \n                                                                            add={this.addProductToList} \n                                                                            delete={this.deleteProduct} \n                                                                            productUpdate={this.updateProduct}/>} \n                                                                />\n        </div>\n      </Router>\n    );\n\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// Color theme for whole app\nconst theme = createMuiTheme({\n  palette: {\n     primary: {\n        main: '#C9DEBC',\n     },\n     secondary: {\n       main: '#F96523',\n     },\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nif ('serviceWorker' in navigator && \"Notification\" in window) {\n  \n  navigator.serviceWorker.register('service-worker.js').then(function(registration) {\n    console.log(\"service worker registered\");\n    Notification.requestPermission(result => {\n      if (result === 'granted') {\n        console.log(\"Granted\")\n      } else {\n        console.log(result)\n      }\n    });\n  }).catch(function(error) {\n    console.log(error)\n  });\n} else {\n  // Der verwendete Browser unterstützt Service Worker nicht.\n  var aElement = document.createElement('a');\n  aElement.href = 'http://www.chromium.org/blink/serviceworker/service-worker-faq';\n  aElement.textContent = 'unavailable';\n  document.querySelector('#status').appendChild(aElement);\n}"],"sourceRoot":""}